{
	"folder_history":
	[
		"/Users/Phteben/stnatale/ddr4bist/firmware/snps_source",
		"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/dwc_lpddr54_cuamd_tsmc7ff18_fw_phyinit_A-2020.09_20201019/firmware/A-2020.09/training/source",
		"/Users/Phteben/stnatale",
		"/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/config-3.9-darwin",
		"/Users/Phteben/swig",
		"/Users/Phteben/stnatale/home",
		"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim",
		"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/testbench",
		"/Users/Phteben/stnatale/ddr4bist/firmware/bist_source",
		"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05",
		"/Users/Phteben/stnatale/ddr4bist",
		"/Users/Phteben/Documents/stnatale/ddr4bist",
		"/Users/Phteben/Documents/stnatale/ddr4bist/ctb",
		"/Users/Phteben/Documents/stnatale/ddr4bist/firmware/bist_source",
		"/Users/Phteben/Documents/stnatale/ddr4bist/ctb/A-2018.05/testbench/inc",
		"/Users/Phteben/Library/Application Support/Sublime Text/Packages/User/Karabiner-Yaml",
		"/Users/Phteben/Library/Mobile Documents/3L68KQB4HG~com~readdle~CommonDocuments/Documents/IQP/Report",
		"/Volumes/PORTCAMP/Vivado Projects/BreadboardKeyboard_FPv4/BreadboardKeyboard_FPv4 src",
		"/Users/Phteben/Library/Mobile Documents/3L68KQB4HG~com~readdle~CommonDocuments/Documents/Verilog Examples",
		"/Users/Phteben/Library/Mobile Documents/3L68KQB4HG~com~readdle~CommonDocuments/Documents/WPI/Resumes/Nvidia res",
		"/Users/stephennatale/Library/Mobile Documents/3L68KQB4HG~com~readdle~CommonDocuments/Documents/WPI/Resumes/AMD-2021 res/resume",
		"/Users/stephennatale/Library/Mobile Documents/3L68KQB4HG~com~readdle~CommonDocuments/Documents/WPI/Resumes/AMD-2021 res",
		"/Users/stephennatale/OneDrive - Advanced Micro Devices Inc/RMB_logs",
		"//atlvsmb1/stnatale/source_lp5",
		"//atlvsmb1/stnatale/dwc_lpddr54_cuamd_tsmc7ff18_fw_phyinit_A-2020.09_20201019/firmware/A-2020.09/training/source",
		"/C/Users/stnatale/OneDrive - Advanced Micro Devices Inc/dwc_lpddr54_cuamd_tsmc7ff18_fw_phyinit_A-2020.09_20201019/firmware/A-2020.09/training/source",
		"//atlvsmb1/stnatale/_dwc_lpddr54_cuamd_tsmc7ff18_fw_phyinit_A-2020.09_20201019/firmware/A-2020.09/training/source",
		"//atlvsmb1/stnatale/_dwc_lpddr54_cuamd_tsmc7ff18_fw_phyinit_A-2020.09_20201019",
		"//atlvsmb1/stnatale/dwc_lpddr54_cuamd_tsmc7ff18_fw_phyinit_A-2020.09_20201019/phyinit",
		"//atlvsmb1/stnatale/dwc_lpddr54_cuamd_tsmc7ff18_fw_phyinit_A-2020.09_20201019",
		"//atlvsmb1/stnatale/dwc_lpddr54_cuamd_tsmc7ff18_fw_phyinit_A-2020.09_20201019/phyinit/A-2020.09/software/lpddr5",
		"/C/Users/stnatale/OneDrive - Advanced Micro Devices Inc/dwc_lpddr54_cuamd_tsmc7ff18_fw_phyinit_A-2020.09_20201019/firmware/A-2020.09/training/source/include"
	],
	"last_version": 4113,
	"last_window_id": 869,
	"log_indexing": false,
	"settings":
	{
		"new_window_full_screen": false,
		"new_window_height": 1387.0,
		"new_window_maximized": false,
		"new_window_settings":
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"y",
						"y_val"
					],
					[
						"brea",
						"breakpoint"
					],
					[
						"exi",
						"exit"
					],
					[
						"xy",
						"xy_split"
					],
					[
						"arr",
						"arr_list"
					],
					[
						"inter",
						"intersects"
					],
					[
						"uni",
						"unique"
					],
					[
						"mask",
						"mask_coarse"
					],
					[
						"scat",
						"scatter_plts"
					],
					[
						"__",
						"__init__"
					],
					[
						"in",
						"interp_array"
					],
					[
						"interp",
						"interp_array"
					],
					[
						"cent",
						"center_args"
					],
					[
						"block",
						"block_caret_border"
					],
					[
						"under",
						"squiggly_underline"
					],
					[
						"meta",
						"meta_append"
					],
					[
						"weight",
						"weight_eye"
					],
					[
						"twoD",
						"twoD_eye_t_ptr"
					],
					[
						"two",
						"twoD_Eye_t"
					],
					[
						"interface",
						"interface-function"
					],
					[
						"f",
						"function-call"
					],
					[
						"a",
						"meta"
					],
					[
						"p",
						"support"
					],
					[
						"s",
						"storage"
					],
					[
						"e",
						"keyword"
					],
					[
						"inte",
						"interface-line"
					],
					[
						"met",
						"meta_prepend"
					],
					[
						"if",
						"ifmain"
					],
					[
						"for",
						"for"
					],
					[
						"ca",
						"case"
					],
					[
						"batch",
						"batch_setup"
					],
					[
						"tdi",
						"tdi_continue"
					],
					[
						"loc",
						"lock_file"
					],
					[
						"bist",
						"bist_params"
					],
					[
						"param",
						"param_vars"
					],
					[
						"test",
						"test_directory"
					],
					[
						"TL",
						"TLabelframe"
					],
					[
						"inj",
						"inj_addr_list"
					],
					[
						"SIM",
						"SIMV_PATH"
					],
					[
						"def",
						"default_errors"
					],
					[
						"runtc",
						"runtc_cols"
					],
					[
						"runt",
						"runtc_defects"
					],
					[
						"cid",
						"cid_step"
					],
					[
						"bank",
						"bank_step"
					],
					[
						"BIST",
						"BIST_BANKSIZE"
					],
					[
						"ADDR",
						"ADDR_LOWER"
					],
					[
						"ADD",
						"ADDR_LOWER"
					],
					[
						"apb",
						"apb_wr"
					],
					[
						"name",
						"__name__"
					],
					[
						"get",
						"getNewestFileInDir"
					],
					[
						"w",
						"write"
					],
					[
						"mod",
						"mod"
					],
					[
						"subsub",
						"\\subsubsection*{title}                            "
					],
					[
						"phnt",
						"\\phantomsection                                   \thyperref"
					],
					[
						"list",
						"\\listoffigures                                    \tlatex-document"
					],
					[
						"input",
						"\\input{file}                                      "
					],
					[
						"abstra",
						"\\begin{abstract}                                  "
					],
					[
						"inpu",
						"\\input{file}                                      "
					],
					[
						"inp",
						"\\input{file}                                      "
					],
					[
						"r",
						"variables"
					],
					[
						"insert",
						"insert"
					],
					[
						"Z",
						"Zin_min"
					],
					[
						"dm",
						"dmax_l_"
					],
					[
						"db",
						"_db_data"
					],
					[
						"write",
						"writerow\tfunction"
					],
					[
						"set",
						"set_trace\tfunction"
					],
					[
						"comp",
						"_compiled_regex"
					],
					[
						"WR",
						"WRDQ_RSTR\tstatement"
					],
					[
						"WRDQ",
						"WRDQ_REGEX\tstatement"
					],
					[
						"spl",
						"splitlines\tfunction"
					],
					[
						"thread",
						"Thread\tclass"
					],
					[
						"original",
						"original_putty_log\tstatement"
					],
					[
						"fwsi",
						"fw_signing_dir\tstatement"
					],
					[
						"ro",
						"rowconfigure"
					],
					[
						"row",
						"ROWS\tstatement"
					],
					[
						"fo",
						"foreground"
					],
					[
						"_Menu",
						"_Menubutton\tclass"
					],
					[
						"menu",
						"_Menu"
					],
					[
						"postcode",
						"postcode_value\tstatement"
					],
					[
						"frame",
						"frameL1_postcode\tstatement"
					],
					[
						"width",
						"_width"
					],
					[
						"column",
						"columnconfigure\tstatement"
					],
					[
						"check",
						"checkbox_frame\tstatement"
					],
					[
						"format",
						"formatted_time"
					],
					[
						"total",
						"total_time_elapsed\tstatement"
					],
					[
						"L",
						"Labeled_Frame\tclass"
					],
					[
						"log",
						"Scrolling_Log"
					],
					[
						"Scrol",
						"scrolledtext\tmodule"
					],
					[
						"Lable",
						"LabelFrame"
					],
					[
						"class",
						"class\tkeyword"
					],
					[
						"canvas",
						"canvas_frame\tstatement"
					],
					[
						"config",
						"ConfigUpdate"
					],
					[
						"main",
						"main_Lframe\tstatement"
					],
					[
						"grid",
						"grid_propagate\tfunction"
					],
					[
						"postcode_v",
						"postcode_val_label\tstatement"
					],
					[
						"postcode_",
						"postcode_value"
					],
					[
						"MERO",
						"MERO_ABL_POSTCODE"
					],
					[
						"post",
						"postcode_stored\tstatement"
					],
					[
						"label",
						"LabelFrame\tclass"
					],
					[
						"up",
						"update_idletasks\tfunction"
					],
					[
						"umc",
						"umcChoice\tstatement"
					],
					[
						"wri",
						"writeMux\tfunction"
					],
					[
						"dfmp4",
						"dfpm4_fields\tstatement"
					],
					[
						"cldo",
						"cldoLow\tstatement"
					]
				]
			},
			"build_system_choices":
			[
				[
					[
						[
							"Packages/Default/Syntax Tests.sublime-build",
							""
						],
						[
							"Packages/Default/Syntax Tests.sublime-build",
							"All Syntaxes"
						],
						[
							"Packages/Default/Syntax Tests.sublime-build",
							"Performance"
						],
						[
							"Packages/Default/Syntax Tests.sublime-build",
							"Regex Compatibility"
						]
					],
					[
						"Packages/Default/Syntax Tests.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							""
						],
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							"Traditional"
						],
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							"PdfLaTeX"
						],
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							"XeLaTeX"
						],
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							"LuaLaTeX"
						],
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							"Basic Builder"
						],
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							"Basic Builder - PdfLaTeX"
						],
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							"Basic Builder - XeLaTeX"
						],
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							"Basic Builder - LuaLaTeX"
						],
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							"Script Builder"
						]
					],
					[
						"Packages/LaTeXTools/LaTeX.sublime-build",
						""
					]
				]
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"breakpoint",
						"Python Breakpoints: Toggle"
					],
					[
						"foldal",
						"Code Folding: Fold All"
					],
					[
						"connect",
						"Helium: Connect Kernel"
					],
					[
						"helium",
						"Helium: Connect Kernel"
					],
					[
						"key",
						"Preferences: Key Bindings"
					],
					[
						"scheme",
						"PackageDev: Edit Current Color Scheme"
					],
					[
						"arg",
						"Format Arguments"
					],
					[
						"helium res",
						"Helium: Restart Kernel"
					],
					[
						"theme",
						"PackageDev: Edit Current Theme"
					],
					[
						"fold",
						"Code Folding: Fold All"
					],
					[
						"black",
						"Sublack: Format file"
					],
					[
						"open",
						"PackageResourceViewer: Open Resource"
					],
					[
						"alignment",
						"Preferences: Alignment File Settings – Syntax Specific – User"
					],
					[
						"fields",
						"MultiEditUtils: Selection as Fields"
					],
					[
						"syntax python",
						"Set Syntax: Python"
					],
					[
						"open re",
						"PackageResourceViewer: Open Resource"
					],
					[
						"py",
						"Set Syntax: Python"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"syntax scheme",
						"Set Syntax: Sublime Text Color Scheme (JSON)"
					],
					[
						"extract",
						"PackageResourceViewer: Extract Package"
					],
					[
						"book",
						"Bookmarks: Toggle"
					],
					[
						"select to ",
						"Selection: Expand to Brackets"
					],
					[
						"table mode",
						"AlignTab: Live Preview Mode"
					],
					[
						"tablemode",
						"AlignTab: Exit Table Mode"
					],
					[
						"exit t",
						"AlignTab: Exit Table Mode"
					],
					[
						"aligntab",
						"AlignTab: Table Mode"
					],
					[
						"reindent",
						"Indentation: Reindent Lines"
					],
					[
						"color scheme",
						"PackageDev: Edit Current Color Scheme"
					],
					[
						"color",
						"Color Hint"
					],
					[
						"syntax shell",
						"Set Syntax: Bourne Again Shell (bash)"
					],
					[
						"html",
						"HTMLPrettify"
					],
					[
						"sftp",
						"Preferences: SFTP Settings"
					],
					[
						"markdown",
						"MarkdownLivePreview: Open Preview"
					],
					[
						"preview",
						"OmniMarkupPreviewer: Preview Current Markup in Browser"
					],
					[
						"side",
						"Side-by-Side: Select a File"
					],
					[
						"wrap",
						"Word Wrap: Toggle"
					],
					[
						"syntax markdown",
						"Set Syntax: Markdown GFM"
					],
					[
						"remove",
						"Package Control: Remove Package"
					],
					[
						"syntax markd",
						"Set Syntax: MultiMarkdown"
					],
					[
						"markdonw",
						"Markdown Preview: Preview in Browser"
					],
					[
						"r",
						"Reload All Files"
					],
					[
						"line",
						"Line Endings Unify"
					],
					[
						"shell",
						"Set Syntax: Bourne Again Shell (bash)"
					],
					[
						"syntax",
						"Set Syntax: Python"
					],
					[
						"swa",
						"BracketHighlighter: Swap Quotes"
					],
					[
						"swap q",
						"BracketHighlighter: Swap Quotes"
					],
					[
						"quote",
						"BracketHighlighter: Swap Quotes"
					],
					[
						"scope",
						"Scope Hunter: Toggle Instant Scoper"
					],
					[
						"new syntax",
						"PackageDev: New Syntax Definition"
					],
					[
						"show all",
						"SublimeLinter: Show All Errors"
					],
					[
						"reload",
						"Reload All Files"
					],
					[
						"sublime linter",
						"SublimeLinter: Show All Errors"
					],
					[
						"linter",
						"Preferences: SublimeLinter Settings"
					],
					[
						"ecc",
						"ECC: Settings"
					],
					[
						"inter",
						"Set Syntax: swig-interface"
					],
					[
						"syntac",
						"Set Syntax: C"
					],
					[
						"syntax defin",
						"Set Syntax: Sublime Text Syntax Definition (YAML)"
					],
					[
						"syntac c",
						"Set Syntax: C"
					],
					[
						"uint",
						"Set Syntax: ucfconstraints"
					],
					[
						"build",
						"Build With: Syntax Tests"
					],
					[
						"build w",
						"Build With: Syntax Tests"
					],
					[
						"reloa",
						"Reload All Files"
					],
					[
						"clanf",
						"Clang Format: Format Selection"
					],
					[
						"clang",
						"Clang Format: Format Selection"
					],
					[
						"select",
						"Selection: Expand to Scope"
					],
					[
						"expand",
						"Selection: Expand to Indentation"
					],
					[
						"disable",
						"Package Control: Disable Package"
					],
					[
						"sublack",
						"Sublack: Format file"
					],
					[
						"python",
						"Set Syntax: Python"
					],
					[
						"ruler",
						"CursorRuler: Toggle Enabled/Disabled"
					],
					[
						"jkv",
						"Set Syntax: JSON Key-Value"
					],
					[
						"json",
						"Set Syntax: JSON"
					],
					[
						"serial yaml",
						"Serialized Data Converter: JSON to YAML"
					],
					[
						"sftp li",
						"SFTP: Enter License Key"
					],
					[
						"subla",
						"Sublack: Format file"
					],
					[
						"sub",
						"Sublack: Format file"
					],
					[
						"kv",
						"Set Syntax: JSON Key-Value"
					],
					[
						"convert to json b",
						"Build With: Convert to ... - JSON"
					],
					[
						"format ya",
						"Pretty YAML: Reformat (Pretty Print) YAML"
					],
					[
						"serial",
						"Serialized Data Converter: JSON to YAML"
					],
					[
						"REPL python",
						"SublimeREPL: Python"
					],
					[
						"syntaxpython",
						"Set Syntax: Python"
					],
					[
						"sublime repl py",
						"SublimeREPL: Python - IPython"
					],
					[
						"discover",
						"Package Control: Discover Packages"
					],
					[
						"docs",
						"Anaconda: Display object docs"
					],
					[
						"side ",
						"Side-by-Side: Select a File"
					],
					[
						"ana",
						"Anaconda: Display object docs"
					],
					[
						"tcsh synt",
						"Set Syntax: (T)csh Shell Script"
					],
					[
						"syntax csh",
						"Set Syntax: (T)csh Shell Script"
					],
					[
						"csh",
						"Preferences: ColorHints Settings"
					],
					[
						"format",
						"Format Arguments"
					],
					[
						"cance",
						"SFTP: Cancel Upload"
					],
					[
						"align file",
						"Preferences: Alignment File Settings – Syntax Specific – User"
					],
					[
						"preser",
						"MultiEditUtils: Preserve Case"
					],
					[
						"argu",
						"Format Arguments"
					],
					[
						"cancel",
						"SFTP: Cancel Upload"
					],
					[
						"show",
						"SFTP: Show Panel"
					],
					[
						"shoe",
						"SublimeLinter: Show All Errors"
					],
					[
						"show s",
						"SFTP: Show Panel"
					],
					[
						"convert to json ser",
						"Serialized Data Converter: YAML to JSON"
					],
					[
						"build yaml",
						"Build With: Convert to ... - YAML (Block Style)"
					],
					[
						"disc",
						"Package Control: Discover Packages"
					],
					[
						"hjs",
						"Set Syntax: Hjson"
					],
					[
						"sysv",
						"Set Syntax: SystemVerilog"
					],
					[
						"argumen",
						"Format Arguments"
					],
					[
						"preserve",
						"MultiEditUtils: Preserve Case"
					],
					[
						"sort",
						"Sort Lines"
					],
					[
						"convert",
						"Convert Case: snake_case"
					],
					[
						"replace",
						"Replace characters in selection with spaces"
					],
					[
						"single lines",
						"Reduce strings of >=2 lines into a single line within each selection"
					],
					[
						"reduce",
						"Reduce strings of >=2 spaces into a single space within selection"
					],
					[
						"disco",
						"Package Control: Discover Packages"
					],
					[
						"onstall",
						"Package Control: Install Package"
					],
					[
						"align",
						"Preferences: Alignment File Settings – Syntax Specific – User"
					],
					[
						"install ",
						"Package Control: Install Package"
					],
					[
						"preserv",
						"MultiEditUtils: Preserve Case"
					],
					[
						"word",
						"WordHighlight: Toggle Enabled"
					],
					[
						"yaml defau",
						"Build With: Convert to ... - YAML (Default Style)"
					],
					[
						"convert to yaml",
						"Serialized Data Converter: JSON to YAML (Save)"
					],
					[
						"vindent",
						"Verilog: Reindent"
					],
					[
						"sftp ca",
						"SFTP: Cancel Upload"
					],
					[
						"sftp p",
						"SFTP: Show Panel"
					],
					[
						"table ",
						"AlignTab: Live Preview Mode"
					],
					[
						"sync scroll",
						"SyncScroll: Toggle Current View Scroll Sync"
					],
					[
						"sftp pan",
						"SFTP: Show Panel"
					],
					[
						"fz",
						"SublimeZilla: Import FileZilla Server"
					],
					[
						"block",
						"Toggle Block Comment"
					],
					[
						"split",
						"MultiEditUtils: Split selection"
					]
				],
				"width": 0.0
			},
			"console":
			{
				"height": 487.0,
				"history":
				[
					"sublime.find_resources(\"*.hidden-tmTheme\")",
					"sublime.find_resources(\"*.hidden-color-scheme\")",
					"sublime.log_commands(True)",
					"{\n  \"title\": \"Remote Desktop\",\n  \"rules\": [\n    {\n      \"description\": \"Swap command and control\",\n      \"manipulators\": [\n        {\n          \"type\": \"basic\",\n          \"from\": {\n            \"key_code\": \"left_control\",\n            \"modifiers\": {\n              \"optional\": [\n                \"any\"\n              ]\n            }\n          },\n          \"to\": [\n            {\n              \"key_code\": \"left_command\"\n            }\n          ],\n          \"conditions\": [\n            {\n              \"type\": \"frontmost_application_if\",\n              \"bundle_identifiers\": [\n                \"com\\\\.microsoft\\\\.rdc\\\\.mac\"\n              ]\n            }\n          ]\n        },\n        {\n          \"type\": \"basic\",\n          \"from\": {\n            \"key_code\": \"left_command\",\n            \"modifiers\": {\n              \"optional\": [\n                \"any\"\n              ]\n            }\n          },\n          \"to\": [\n            {\n              \"key_code\": \"left_control\"\n            }\n          ],\n          \"conditions\": [\n            {\n              \"type\": \"frontmost_application_if\",\n              \"bundle_identifiers\": [\n                \"com\\\\.microsoft\\\\.rdc\\\\.mac\"\n              ]\n            }\n          ]\n        },\n        {\n          \"type\": \"basic\",\n          \"from\": {\n            \"key_code\": \"right_control\",\n            \"modifiers\": {\n              \"optional\": [\n                \"any\"\n              ]\n            }\n          },\n          \"to\": [\n            {\n              \"key_code\": \"right_command\"\n            }\n          ],\n          \"conditions\": [\n            {\n              \"type\": \"frontmost_application_if\",\n              \"bundle_identifiers\": [\n                \"com\\\\.microsoft\\\\.rdc\\\\.mac\"\n              ]\n            }\n          ]\n        },\n        {\n          \"type\": \"basic\",\n          \"from\": {\n            \"key_code\": \"right_command\",\n            \"modifiers\": {\n              \"optional\": [\n                \"any\"\n              ]\n            }\n          },\n          \"to\": [\n            {\n              \"key_code\": \"right_control\"\n            }\n          ],\n          \"conditions\": [\n            {\n              \"type\": \"frontmost_application_if\",\n              \"bundle_identifiers\": [\n                \"com\\\\.microsoft\\\\.rdc\\\\.mac\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}",
					"rules:\n- description: Swap command and control\n  manipulators:\n  - type: basic\n    from:\n      key_code: left_control\n      modifiers:\n        optional:\n        - any\n    to:\n    - key_code: left_command\n    conditions:\n    - type: frontmost_application_if\n      bundle_identifiers:\n      - com\\.microsoft\\.rdc\\.mac\n  - type: basic\n    from:\n      key_code: left_command\n      modifiers:\n        optional:\n        - any\n    to:\n    - key_code: left_control\n    conditions:\n    - type: frontmost_application_if\n      bundle_identifiers:\n      - com\\.microsoft\\.rdc\\.mac\n  - type: basic\n    from:\n      key_code: right_control\n      modifiers:\n        optional:\n        - any\n    to:\n    - key_code: right_command\n    conditions:\n    - type: frontmost_application_if\n      bundle_identifiers:\n      - com\\.microsoft\\.rdc\\.mac\n  - type: basic\n    from:\n      key_code: right_command\n      modifiers:\n        optional:\n        - any\n    to:\n    - key_code: right_control\n    conditions:\n    - type: frontmost_application_if\n      bundle_identifiers:\n      - com\\.microsoft\\.rdc\\.mac\n",
					"com.sublimetext.4",
					"{\n          \"description\": \"escape = capslock switch\",\n          \"type\": \"basic\",\n          \"from\": {\n            \"key_code\": \"escape\",\n            \"modifiers\": {\n              \"optional\": [\n                \"caps_lock\"\n              ],\n              \"mandatory\": [\n                \"right_command\",\n                \"right_control\",\n                \"right_shift\",\n                \"right_option\"\n              ]\n            }\n          },\n          \"to\": [\n            {\n              \"key_code\": \"caps_lock\",\n              \"modifiers\": [\n                \"left_control\"\n              ]\n            }\n          ]\n        }",
					"{\n    \"title\": \"Keychron Swap\",\n    \"rules\": [{\n\n            \"description\": \"C2: Swap insert and fn\",\n            \"manipulators\": [{\n                    \"conditions\": [{\n                        \"identifiers\": [{\n                            \"description\": \"Keychron\",\n                            \"product_id\": 591\n                        }],\n                        \"type\": \"device_if\"\n                    }],\n                    \"type\": \"basic\",\n                    \"from\": {\n                        \"key_code\": \"fn\"\n                    },\n                    \"to\": {\n                        \"key_code\": \"insert\"\n                    }\n                },\n                {\n                    \"conditions\": [{\n                        \"identifiers\": [{\n                            \"description\": \"Keychron\",\n                            \"product_id\": 591\n                        }],\n                        \"type\": \"device_if\"\n                    }],\n                    \"type\": \"basic\",\n                    \"from\": {\n                        \"key_code\": \"insert\"\n                    },\n                    \"to\": {\n                        \"key_code\": \"fn\"\n                    }\n                }\n            ]\n        },\n        {\n            \"description\": \"C2: Swap CMD and CTRL\",\n            \"manipulators\": [{\n                    \"conditions\": [{\n                        \"identifiers\": [{\n                            \"description\": \"Keychron\",\n                            \"product_id\": 591\n                        }],\n                        \"type\": \"device_if\"\n                    }],\n                    \"from\": {\n                        \"key_code\": \"left_command\",\n                        \"modifiers\": {\n                            \"optional\": [\n                                \"any\"\n                            ]\n                        }\n                    },\n                    \"to\": [{\n                        \"key_code\": \"left_option\"\n                    }],\n                    \"type\": \"basic\"\n                },\n                {\n                    \"conditions\": [{\n                        \"identifiers\": [{\n                            \"description\": \"Keychron\",\n                            \"product_id\": 591\n                        }],\n                        \"type\": \"device_if\"\n                    }],\n                    \"from\": {\n                        \"key_code\": \"left_option\",\n                        \"modifiers\": {\n                            \"optional\": [\n                                \"any\"\n                            ]\n                        }\n                    },\n                    \"to\": {\n                        \"key_code\": \"left_command\"\n                    },\n                    \"type\": \"basic\"\n                },\n                {\n                    \"conditions\": [{\n                        \"identifiers\": [{\n                            \"description\": \"Keychron\",\n                            \"product_id\": 591\n                        }],\n                        \"type\": \"device_if\"\n                    }],\n                    \"from\": {\n                        \"key_code\": \"right_command\",\n                        \"modifiers\": {\n                            \"optional\": [\n                                \"any\"\n                            ]\n                        }\n                    },\n                    \"to\": [{\n                        \"key_code\": \"right_option\"\n                    }],\n                    \"type\": \"basic\"\n                },\n                {\n                    \"conditions\": [{\n                        \"identifiers\": [{\n                            \"description\": \"Keychron\",\n                            \"product_id\": 591\n                        }],\n                        \"type\": \"device_if\"\n                    }],\n                    \"from\": {\n                        \"key_code\": \"right_option\",\n                        \"modifiers\": {\n                            \"optional\": [\n                                \"any\"\n                            ]\n                        }\n                    },\n                    \"to\": {\n                        \"key_code\": \"right_command\"\n                    },\n                    \"type\": \"basic\"\n                }\n            ]\n        }\n    ]\n}",
					"- identifiers:\n  - description: Keychron\n    product_id: 591\n  type: device_if",
					"https://www.amazon.com/Skin-Tag-Remover-Patches-Fast-Acting/product-reviews/B091JDQN6D/ref=cm_cr_dp_d_show_all_btm?ie=UTF8&reviewerType=all_reviews",
					"{ \"keys\": [\"super+alt+n\"], \"command\": \"normalize_region_ends\" },",
					"command: sublime_linter_assigned {\"linter_names\": [], \"filename\": \"<untitled 800>\"}"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/Users/Phteben/stnatale/bist_gui/Bist_columns.py",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/User/Base File.sublime-settings",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/User/Python.sublime-settings",
				"/Users/Phteben/Untitled13.py",
				"/Users/Phteben/Untitled13.ipynb",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/Helium/.python-version",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/Helium/Helium.sublime-syntax",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/User/SBSCompareScheme.hidden-color-scheme",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/PackageDev/Package/Sublime Text Color Scheme/Sublime Text Color Scheme.sublime-settings",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/User/NATSTE.sublime-color-scheme",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/Color Scheme - Default/NATSTE.sublime-color-scheme",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/Color Scheme - Default/untitled.json",
				"/Users/Phteben/stnatale/swig/pmu_2Dtrain.i",
				"/Users/Phteben/stnatale/bist_gui/bist_compare_v1.py",
				"/Users/Phteben/stnatale/ddr4bist/firmware/snps_source/include/hwt_common_api.h",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/dwc_lpddr54_cuamd_tsmc7ff18_fw_phyinit_A-2020.09_20201019 copy/firmware/A-2020.09/training/source/build/eye_export_lib_preproc.c",
				"/Users/Phteben/stnatale/swig/logs/py_firstly.log",
				"/Users/Phteben/stnatale/swig/logs/ctypes_firstly.log",
				"/Users/Phteben/stnatale/swig/logs/snps_build_using_gcc.log",
				"/Users/Phteben/stnatale/swig/logs/ryana_build_using_gcc.log",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/build.sh",
				"/Users/Phteben/stnatale/swig/elf2binhelp.txt",
				"/Users/Phteben/stnatale/swig/ccachelp.txt",
				"/Users/Phteben/stnatale/swig/log.log",
				"/Users/Phteben/stnatale/swig/ctypes.log",
				"/Users/Phteben/stnatale/swig/hwt_common_api.h",
				"/Users/Phteben/stnatale/swig/pmu_2Dtrain.c",
				"/Users/Phteben/stnatale/swig/swig_build2.sh",
				"/Users/Phteben/Documents/andrew07:29:21.md",
				"/Users/Phteben/stnatale/swig/snps_source/include/hwt_common_api.h",
				"/Users/Phteben/stnatale/swig/snps_source/hwt_common_api.h",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/link.lcf",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/arc.tcf",
				"/Users/Phteben/stnatale/swig/swig_build.sh",
				"/Users/Phteben/stnatale/ddr4bist/firmware/snps_source/pmu_2Dtrain2.c",
				"/Users/Phteben/stnatale/sftp-config.json",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/pmu_2Dtrain.c",
				"/Users/Phteben/stnatale/ddr4bist/firmware/snps_source/pmu_2Dtrain.c",
				"/Users/Phteben/stnatale/swig/ldhelp.txt",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/User/Syntaxes/swig-interface.sublime-syntax",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/User/Syntaxes/syntax_test.i",
				"/Users/Phteben/stnatale/ddr4bist/firmware/snps_source/include/pmu_util.h",
				"/Users/Phteben/stnatale/ddr4bist.sublime-project",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/-Karabiner-YAML/karabiner_yaml.sublime-syntax",
				"/Users/Phteben/stnatale/swig/eye.py",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/C++/C.sublime-syntax",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/-Karabiner-YAML/karabiner_json.sublime-syntax",
				"/Users/Phteben/stnatale/swig/build.sh",
				"/Users/Phteben/stnatale/ddr4bist/firmware/bist_source/include/hwt_common_api.h",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/RMB_logs/2d-hist_RMB.py",
				"/Users/Phteben/.zshrc",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/CSR script/Archive/CSRV_parallelTest.py",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/Default/Main.sublime-menu",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/User/Main.sublime-menu",
				"/Users/Phteben/stnatale/swig/example.c",
				"/Volumes/NATALS/cali_core3/Contents/Resources/Python/lib/python2.7/config/Makefile",
				"/Users/Phteben/PycharmProjects/pythonProject/venv/lib/python3.9/site-packages/setuptools/_distutils/command/build_ext.py",
				"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/config-3.8-darwin/config.c",
				"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/Headers/pythonrun.h",
				"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/config-3.8-darwin/python-config.py",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/CursorRuler/CursorRuler.sublime-settings",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/runtc",
				"/Users/Phteben/.config/karabiner/assets/complex_modifications/Middle Click.k-yaml",
				"/Users/Phteben/.config/karabiner/assets/complex_modifications/Middle Click.JSON-k-yaml",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/setup_file.py",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/runtc_auto.py",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/RndFields_source.sv",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/inject_apb_config.py",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/runtc_auto_v2.py",
				"/Users/Phteben/stnatale/ddr4bist/tests/test2/simv.log",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/runtc_auto.csh",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/bist_compare.py",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/terminal 2.log",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/DTO/DTO__/rmbInfo.py",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/DTO/DTO__/AMD_COLORS.py",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/DTO/DTO__/ColumnDTO_RMB.py",
				"/Users/Phteben/Library/.gitignore",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/DTO/DTO__/ColumnExplore_MR.py",
				"/Users/Phteben/.config/karabiner/formats.kb.yaml",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/setup_file.yaml",
				"/Users/Phteben/stnatale/sftp-config.yaml",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/asdfjk",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/sublack/sublack/commands.py",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/User/Anaconda.sublime-settings",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/pathlib/all/pathlib.py",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/DTO/terminal.log",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/inject_runtc.py",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/terminal.log",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/VN_vDropTest/UEFI_reset.py",
				"/Users/Phteben/stnatale/bist_gui/runtc_auto.csh",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/simv.log",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/testbench/inc/RndFields_source.sv",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/DTO/DTO__/RMB_DDR5_Mux_GUI_2.py",
				"/Users/Phteben/stnatale/ddr4bist/firmware/bist_source/pmu_bist.c",
				"/Users/Phteben/stnatale/bist_gui/AMD_COLORS.py",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/DTO/DTO__/ColumnExplore_v2.py",
				"/Users/Phteben/stnatale/ddr4bist/tests/test6/terminal.log",
				"/Users/Phteben/stnatale/bist_gui/runtc_auto.py",
				"/Users/Phteben/stnatale/ddr4bist/bash_bootenv",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/bootenv",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/signing_automation.py",
				"/Users/Phteben/stnatale/ddr4bist/tests/test1/terminal.log",
				"/Users/Phteben/stnatale/ddr4bist/tests/test7/terminal.log",
				"/Users/Phteben/stnatale/ddr4bist/tests/test8/terminal.log",
				"/Users/Phteben/stnatale/ddr4bist/tests/test9/terminal.log",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/Case Conversion/case_conversion.py",
				"/Users/Phteben/Downloads/CLDO_drop_VN.py",
				"/Users/Phteben/stnatale/ddr4bist/tests/test7/simv.log",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/DTO/DTO__/ColumnExplore.py",
				"/Users/Phteben/stnatale/ddr4bist/firmware/bist_source/include/mnPmuSramBistBlock.h",
				"/Users/Phteben/stnatale/ddr4bist/tests/test2/RndFields.sv",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/cmd.run",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/DTO/DTO__/mrInfo.py",
				"/Users/Phteben/stnatale/ddr4bist/tests/test7/apb_config.sv",
				"/Volumes/PORTCAMP/BreadboardKeyboard/main.v",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/testbench/inc/RndFields_source_backup.sv",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/CSR script/VCLDO_regTest_VN.py",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/simv",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/deleteme.txt",
				"/Users/Phteben/stnatale/ddr4bist/tests/test6/simv.log",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/common_test_inc.sv",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/testbench/inc/common_test_inc.sv",
				"/Users/Phteben/stnatale/ddr4bist/tests/test5/terminal.log",
				"/Users/Phteben/stnatale/ddr4bist/tests/test5/simv.log",
				"/Users/Phteben/stnatale/ddr4bist/tests/test4/simv.log",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/bist_compare_v1.py",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/bist_compare_v3.py",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/bist_compare.py"
			],
			"find":
			{
				"height": 25.0
			},
			"find_in_files":
			{
				"height": 99.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					".T",
					"array",
					".T",
					"]",
					"append",
					"abs",
					"d",
					"l",
					"else",
					" else:\n                d[\"r\"].append([y_val, 0])",
					"break",
					"else",
					"break",
					" >0.5",
					">",
					"and",
					"d",
					"l",
					"r",
					"- i_maxh",
					"imax_h",
					"015",
					"01",
					"985",
					"02",
					"1",
					"98",
					"99",
					"05",
					"95",
					"print",
					"> 1",
					"1",
					"shape",
					"0.1",
					"1",
					"0.1",
					"0",
					"l",
					"r",
					"data",
					"-1:idx",
					"v_loc",
					"v_loc - i_maxh",
					" v_loc - i_maxh",
					"v_loc",
					"enumerate",
					"1",
					"::\n",
					"r",
					"vv",
					"samples",
					"x_interval",
					"x_range",
					"samples",
					"mesh",
					"self",
					"vxyc",
					"2",
					"4",
					"2",
					"]\n",
					"vxy",
					"self",
					"recombine",
					"split_and_sort",
					"xy_split",
					"arr_list",
					"xy_2d",
					"=",
					"uniques_and_quantity",
					"vc",
					"uniques_and_counts",
					"vi",
					"a",
					"x",
					"\"x\"",
					"initial",
					"y_coarse",
					"run cell",
					"print",
					"a",
					"self",
					"l",
					"\"].",
					"\"",
					"i_maxh",
					"v_eye",
					"get_dimensions",
					"SAMPLES",
					"create_mesh",
					"coarse",
					"interp_mask",
					"eye_mask",
					"interp_array",
					"x_mesh",
					"y_mesh",
					"VREF_MAX",
					"mesh\\[2",
					"mesh\\[1",
					"mesh\\[0",
					"x_mesh",
					"y_mesh",
					"interp_mask",
					"y_mesh",
					"fine_interp",
					"y_mesh",
					"interp_array",
					"SAMPLES",
					"V_BITS",
					"eye",
					"t",
					"0",
					"x_mesh",
					"0",
					"1",
					"self.plot[\"eye\"]",
					"scan_xline",
					"scatter_plts",
					"cmask",
					"ii",
					"eye",
					"scatter_plts",
					"eye_mesh",
					"grid_args[\"c\"]",
					"grid_args[\"x\"]",
					"grid_args[\"y\"]",
					"avgfirst"
				],
				"highlight": false,
				"in_selection": false,
				"preserve_case": false,
				"regex": true,
				"replace_history":
				[
					"mesh\\[1",
					"mesh\\[0",
					"mesh\\[2"
				],
				"reverse": true,
				"scrollbar_highlights": true,
				"show_context": true,
				"use_buffer2": true,
				"use_gitignore": true,
				"whole_word": false,
				"wrap": true
			},
			"incremental_find":
			{
				"height": 25.0
			},
			"input":
			{
				"height": 43.0
			},
			"menu_visible": true,
			"output.SFTP":
			{
				"height": 204.0
			},
			"output.SublimeLinter":
			{
				"height": 127.0
			},
			"output.SublimeLinter Messages":
			{
				"height": 139.0
			},
			"output.SystemVerilog":
			{
				"height": 152.0
			},
			"output.exec":
			{
				"height": 173.0
			},
			"output.find_results":
			{
				"height": 152.0
			},
			"output.help":
			{
				"height": 104.0
			},
			"output.keybinding":
			{
				"height": 104.0
			},
			"output.latextools":
			{
				"height": 164.0
			},
			"output.mdpopups":
			{
				"height": 0.0
			},
			"output.package_dev":
			{
				"height": 104.0
			},
			"pinned_build_system": "Packages/Default/Syntax Tests.sublime-build",
			"replace":
			{
				"height": 46.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"show_minimap": true,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": false,
			"side_bar_width": 322.0,
			"status_bar_visible": true,
			"template_settings":
			{
			}
		},
		"new_window_width": 2560.0
	},
	"windows":
	[
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"y",
						"y_val"
					],
					[
						"brea",
						"breakpoint"
					],
					[
						"exi",
						"exit"
					],
					[
						"xy",
						"xy_split"
					],
					[
						"arr",
						"arr_list"
					],
					[
						"inter",
						"intersects"
					],
					[
						"uni",
						"unique"
					],
					[
						"mask",
						"mask_coarse"
					],
					[
						"scat",
						"scatter_plts"
					],
					[
						"__",
						"__init__"
					],
					[
						"in",
						"interp_array"
					],
					[
						"interp",
						"interp_array"
					],
					[
						"cent",
						"center_args"
					],
					[
						"block",
						"block_caret_border"
					],
					[
						"under",
						"squiggly_underline"
					],
					[
						"meta",
						"meta_append"
					],
					[
						"weight",
						"weight_eye"
					],
					[
						"twoD",
						"twoD_eye_t_ptr"
					],
					[
						"two",
						"twoD_Eye_t"
					],
					[
						"interface",
						"interface-function"
					],
					[
						"f",
						"function-call"
					],
					[
						"a",
						"meta"
					],
					[
						"p",
						"support"
					],
					[
						"s",
						"storage"
					],
					[
						"e",
						"keyword"
					],
					[
						"inte",
						"interface-line"
					],
					[
						"met",
						"meta_prepend"
					],
					[
						"if",
						"ifmain"
					],
					[
						"for",
						"for"
					],
					[
						"ca",
						"case"
					],
					[
						"batch",
						"batch_setup"
					],
					[
						"tdi",
						"tdi_continue"
					],
					[
						"loc",
						"lock_file"
					],
					[
						"bist",
						"bist_params"
					],
					[
						"param",
						"param_vars"
					],
					[
						"test",
						"test_directory"
					],
					[
						"TL",
						"TLabelframe"
					],
					[
						"inj",
						"inj_addr_list"
					],
					[
						"SIM",
						"SIMV_PATH"
					],
					[
						"def",
						"default_errors"
					],
					[
						"runtc",
						"runtc_cols"
					],
					[
						"runt",
						"runtc_defects"
					],
					[
						"cid",
						"cid_step"
					],
					[
						"bank",
						"bank_step"
					],
					[
						"BIST",
						"BIST_BANKSIZE"
					],
					[
						"ADDR",
						"ADDR_LOWER"
					],
					[
						"ADD",
						"ADDR_LOWER"
					],
					[
						"apb",
						"apb_wr"
					],
					[
						"name",
						"__name__"
					],
					[
						"get",
						"getNewestFileInDir"
					],
					[
						"w",
						"write"
					],
					[
						"mod",
						"mod"
					],
					[
						"subsub",
						"\\subsubsection*{title}                            "
					],
					[
						"phnt",
						"\\phantomsection                                   \thyperref"
					],
					[
						"list",
						"\\listoffigures                                    \tlatex-document"
					],
					[
						"input",
						"\\input{file}                                      "
					],
					[
						"abstra",
						"\\begin{abstract}                                  "
					],
					[
						"inpu",
						"\\input{file}                                      "
					],
					[
						"inp",
						"\\input{file}                                      "
					],
					[
						"r",
						"variables"
					],
					[
						"insert",
						"insert"
					],
					[
						"Z",
						"Zin_min"
					],
					[
						"dm",
						"dmax_l_"
					],
					[
						"db",
						"_db_data"
					],
					[
						"write",
						"writerow\tfunction"
					],
					[
						"set",
						"set_trace\tfunction"
					],
					[
						"comp",
						"_compiled_regex"
					],
					[
						"WR",
						"WRDQ_RSTR\tstatement"
					],
					[
						"WRDQ",
						"WRDQ_REGEX\tstatement"
					],
					[
						"spl",
						"splitlines\tfunction"
					],
					[
						"thread",
						"Thread\tclass"
					],
					[
						"original",
						"original_putty_log\tstatement"
					],
					[
						"fwsi",
						"fw_signing_dir\tstatement"
					],
					[
						"ro",
						"rowconfigure"
					],
					[
						"row",
						"ROWS\tstatement"
					],
					[
						"fo",
						"foreground"
					],
					[
						"_Menu",
						"_Menubutton\tclass"
					],
					[
						"menu",
						"_Menu"
					],
					[
						"postcode",
						"postcode_value\tstatement"
					],
					[
						"frame",
						"frameL1_postcode\tstatement"
					],
					[
						"width",
						"_width"
					],
					[
						"column",
						"columnconfigure\tstatement"
					],
					[
						"check",
						"checkbox_frame\tstatement"
					],
					[
						"format",
						"formatted_time"
					],
					[
						"total",
						"total_time_elapsed\tstatement"
					],
					[
						"L",
						"Labeled_Frame\tclass"
					],
					[
						"log",
						"Scrolling_Log"
					],
					[
						"Scrol",
						"scrolledtext\tmodule"
					],
					[
						"Lable",
						"LabelFrame"
					],
					[
						"class",
						"class\tkeyword"
					],
					[
						"canvas",
						"canvas_frame\tstatement"
					],
					[
						"config",
						"ConfigUpdate"
					],
					[
						"main",
						"main_Lframe\tstatement"
					],
					[
						"grid",
						"grid_propagate\tfunction"
					],
					[
						"postcode_v",
						"postcode_val_label\tstatement"
					],
					[
						"postcode_",
						"postcode_value"
					],
					[
						"MERO",
						"MERO_ABL_POSTCODE"
					],
					[
						"post",
						"postcode_stored\tstatement"
					],
					[
						"label",
						"LabelFrame\tclass"
					],
					[
						"up",
						"update_idletasks\tfunction"
					],
					[
						"umc",
						"umcChoice\tstatement"
					],
					[
						"wri",
						"writeMux\tfunction"
					],
					[
						"dfmp4",
						"dfpm4_fields\tstatement"
					],
					[
						"cldo",
						"cldoLow\tstatement"
					]
				]
			},
			"buffers":
			[
				{
					"contents": "// Place your settings in the file \"Packages/User/Preferences.sublime-settings\",\n// which overrides the settings in here.\n//\n// Settings may also be placed in syntax-specific setting files, for\n// example, in Packages/User/Python.sublime-settings for python files.\n{\n\t// Sets the colors used within the text area.\n\t// The value \"auto\" will switch between the \"light_color_scheme\" and\n\t// \"dark_color_scheme\" based on the operating system appearance.\n\t\"color_scheme\": \"Mariana.sublime-color-scheme\",\n\n\t// Controls the \"color_scheme\" when set to \"auto\"\n\t\"light_color_scheme\": \"Breakers.sublime-color-scheme\",\n\t\"dark_color_scheme\": \"Mariana.sublime-color-scheme\",\n\n\t// Note that the font_face and font_size are overridden in the platform\n\t// specific settings file, for example, \"Preferences (Linux).sublime-settings\".\n\t// Because of this, setting them here will have no effect: you must set them\n\t// in your User File Preferences.\n\t\"font_face\": \"\",\n\t\"font_size\": 10,\n\n\t// Valid options on all platforms are:\n\t//  - \"no_bold\": Disables bold text\n\t//  - \"no_italic\": Disables italic text\n\t// Antialiasing options:\n\t//  - \"no_antialias\": Disables antialiasing\n\t//  - \"gray_antialias\": Uses grayscale antialiasing instead of subpixel\n\t// Ligature options:\n\t//  - \"no_liga\": Disables standard ligatures (OpenType liga feature)\n\t//  - \"no_clig\": Disables contextual ligatures (OpenType clig feature)\n\t//  - \"no_calt\": Disables contextual alternatives (OpenType calt feature)\n\t//  - \"dlig\": Enables discretionary ligatures (OpenType dlig feature)\n\t//  - \"ss01\": Enables OpenType stylistic set 1. Can enable sets 1 to 10\n\t//        by changing the last two digits.\n\t// Windows-only options:\n\t//  - \"directwrite\": (default) Use DirectWrite for font rendering\n\t//  - \"gdi\": Use GDI for font rendering\n\t//  - \"dwrite_cleartype_classic\": Only applicable to \"directwrite\" mode,\n\t//        should render fonts similar to traditional GDI\n\t//  - \"dwrite_cleartype_natural\": Only applicable to \"directwrite\" mode,\n\t//        should render fonts similar to ClearType \"natural quality\" GDI\n\t//  - \"subpixel_antialias\": Force ClearType antialiasing when disabled\n\t//        at system level\n\t// Mac-only options:\n\t//  - \"no_round\": Don't round glyph widths for monospace fonts when\n\t//        \"font_size\" is small.\n\t\"font_options\": [],\n\t// Font options for theme text. Valid options are the same as\n\t// \"font_options\", except \"no_bold\" and \"no_italic\" are not supported\n\t\"theme_font_options\": [],\n\n\t// Characters that are considered to separate words\n\t\"word_separators\": \"./\\\\()\\\"'-:,.;<>~!@#$%^&*|+=[]{}`~?\",\n\n\t// Set to false to prevent line numbers being drawn in the gutter\n\t\"line_numbers\": true,\n\n\t// Set to false to hide the gutter altogether\n\t\"gutter\": true,\n\n\t// Spacing between the gutter and the text\n\t\"margin\": 4,\n\n\t// Fold buttons are the triangles shown in the gutter to fold regions of text\n\t\"fold_buttons\": true,\n\n\t// Hides the fold buttons unless the mouse is over the gutter\n\t\"fade_fold_buttons\": true,\n\n\t// Indicate modified lines in the gutter\n\t// - true: Enables modified line indicators on all files\n\t// - \"auto\": Enables modified line indicators on tracked files within Git\n\t// - false: Disables modified line indicators\n\t\"mini_diff\": true,\n\n\t// Columns in which to display vertical rulers\n\t\"rulers\": [],\n\n\t// Set to true to turn spell checking on by default\n\t\"spell_check\": false,\n\n\t// The number of spaces a tab is considered equal to\n\t\"tab_size\": 4,\n\n\t// Set to true to insert spaces when tab is pressed\n\t\"translate_tabs_to_spaces\": false,\n\n\t// If translate_tabs_to_spaces is true, use_tab_stops will make tab and\n\t// backspace insert/delete up to the next tabstop\n\t\"use_tab_stops\": true,\n\n\t// Set to false to disable detection of tabs vs. spaces on load\n\t\"detect_indentation\": true,\n\n\t// Calculates indentation automatically when pressing enter\n\t\"auto_indent\": true,\n\n\t// Makes auto indent a little smarter, e.g., by indenting the next line\n\t// after an if statement in C. Requires auto_indent to be enabled.\n\t\"smart_indent\": true,\n\n\t// Adds whitespace up to the first open bracket when indenting. Requires\n\t// auto_indent to be enabled.\n\t\"indent_to_bracket\": false,\n\n\t// Trims white space added by auto_indent when moving the caret off the\n\t// line.\n\t\"trim_automatic_white_space\": true,\n\n\t// Disables horizontal scrolling if enabled.\n\t// May be set to true, false, or \"auto\", where it will be disabled for\n\t// source code, and otherwise enabled.\n\t\"word_wrap\": \"auto\",\n\n\t// Set to a value other than 0 to force wrapping at that column rather than\n\t// the window width. See \"wrap_width_style\" for extra options.\n\t\"wrap_width\": 0,\n\n\t// Controls how the \"wrap_width\" setting is applied. The following options\n\t// are available:\n\t// - \"constant\": Always wrap at exactly the wrap width.\n\t// - \"min\": Wrap at the wrap width or less if there is less space available.\n\t\"wrap_width_style\": \"constant\",\n\n\t// Set to false to prevent word wrapped lines from being indented to the same\n\t// level\n\t\"indent_subsequent_lines\": true,\n\n\t// Draws text centered in the window rather than left aligned\n\t\"draw_centered\": false,\n\n\t// Controls auto pairing of quotes, brackets etc\n\t\"auto_match_enabled\": true,\n\n\t// Automatically close HTML and XML tags when </ is entered.\n\t\"auto_close_tags\": true,\n\n\t// Word list to use for spell checking\n\t\"dictionary\": \"Packages/Language - English/en_US.dic\",\n\n\t// Sets which scopes are checked for spelling errors\n\t\"spelling_selector\": \"markup.raw, source string.quoted - punctuation - meta.preprocessor.include, source comment - source comment.block.preprocessor, -(source, constant, keyword, storage, support, variable, markup.underline.link, meta.tag)\",\n\n\t// Set to true to draw a border around the visible rectangle on the minimap.\n\t// The color of the border will be determined by the \"minimap_border\" key\n\t// in the color scheme\n\t\"draw_minimap_border\": false,\n\n\t// Always visualise the viewport on the minimap, as opposed to only\n\t// showing it on mouse over\n\t\"always_show_minimap_viewport\": false,\n\n\t// If enabled, will highlight any line with a caret\n\t\"highlight_line\": false,\n\n\t// If enabled, will highlight the gutter for any line with a caret\n\t\"highlight_gutter\": true,\n\n\t// If enabled, will highlight the line number in the gutter for any line\n\t// with a caret depending on the color scheme\n\t\"highlight_line_number\": true,\n\n\t// Valid values are \"smooth\", \"phase\", \"blink\" and \"solid\". Previous\n\t// versions of Sublime Text used \"smooth\" by default.\n\t\"caret_style\": \"solid\",\n\n\t// These settings control the size of the caret\n\t\"caret_extra_top\": 4,\n\t\"caret_extra_bottom\": 4,\n\t\"caret_extra_width\": 1,\n\n\t// When enabled, the caret will be drawn as a rectangle, using the width\n\t// of the current character\n\t\"block_caret\": false,\n\n\t// Set to false to disable underlining the brackets surrounding the caret\n\t\"match_brackets\": true,\n\n\t// Set to false if you'd rather only highlight the brackets when the caret is\n\t// next to one\n\t\"match_brackets_content\": true,\n\n\t// Set to false to not highlight square brackets. This only takes effect if\n\t// match_brackets is true\n\t\"match_brackets_square\": true,\n\n\t// Set to false to not highlight curly brackets. This only takes effect if\n\t// match_brackets is true\n\t\"match_brackets_braces\": true,\n\n\t// Set to false to not highlight angle brackets. This only takes effect if\n\t// match_brackets is true\n\t\"match_brackets_angle\": false,\n\n\t// Enable visualization of the matching tag in HTML and XML\n\t\"match_tags\": true,\n\n\t// Highlights other occurrences of the currently selected text\n\t\"match_selection\": true,\n\n\t// Additional spacing at the top of each line, in pixels\n\t\"line_padding_top\": 0,\n\n\t// Additional spacing at the bottom of each line, in pixels\n\t\"line_padding_bottom\": 0,\n\n\t// Set to false to disable scrolling past the end of the buffer.\n\t// On Mac, this value is overridden in the platform specific settings, so\n\t// you'll need to place this line in your user settings to override it.\n\t//\n\t// This setting may also be set to a number between 0.0 and 1.0 to specify\n\t// how much scrolling past the end of the buffer should be allowed. 0.5\n\t// scrolls halfway and 0.0 is the same as false.\n\t\"scroll_past_end\": true,\n\n\t// Set the number of context lines to show when scrolling to reveal. This\n\t// affects all selection changes, like selection dragging, page-up/page-down\n\t// and moving the caret.\n\t\"scroll_context_lines\": 0,\n\n\t// This controls what happens when pressing up or down when on the first\n\t// or last line.\n\t// On Mac, this value is overridden in the platform specific settings, so\n\t// you'll need to place this line in your user settings to override it.\n\t\"move_to_limit_on_up_down\": false,\n\n\t// Controls when white space is drawn. Any of the following options may be\n\t// combined:\n\t// - \"selection\": Draw white space under the current selection.\n\t// - \"leading\": Draw any white space between the beginning of a line and the\n\t//              first character.\n\t// - \"enclosed\": Draw white space enclosed by other characters.\n\t// - \"trailing\": Draw white space following the last character on a line.\n\t// - \"isolated\": Draw white space on lines containing no other characters.\n\t// - \"all\": All of the above, ie. always draw white space.\n\t//\n\t// These options may be further refined by appending any of the following\n\t// separated by an underscore:\n\t// - \"none\": Don't draw this kind of white space.\n\t// - \"tabs\": Only draw tabs here.\n\t// - \"spaces\": Only draw spaces here.\n\t// - \"mixed\": Only draw white space that does not match the indentation\n\t//            style. For example if \"translate_tabs_to_spaces\" is true only\n\t//            draw tabs.\n\t// - \"mixed_tabs\": Like \"mixed\" but only draw tabs.\n\t// - \"mixed_spaces\": Like \"mixed\" but only draw spaces.\n\t// - \"all\": Draw both tabs and spaces. This is the default.\n\t//\n\t// Note that options are applied in sequence. So a later option may override\n\t// an earlier one.\n\t//\n\t// Examples:\n\t// - [\"selection\", \"trailing\", \"isolated\"]:\n\t//     Draw white space at the end of any lines and under the selection.\n\t//\n\t// - [\"all_tabs\", \"selection\"]:\n\t//     Draw tabs anywhere and any white space under the selection.\n\t//\n\t// - [\"all_mixed\"]:\n\t//     Draw any white space that does not match the indentation style.\n\t//\n\t// - [\"leading_mixed\", \"isolated_mixed\"]:\n\t//     Draw any indentation that does not match the indentation style.\n\t//\n\t// - [\"selection_mixed_tabs\"]:\n\t//     Draw only tabs under the selection and only if the indentation style\n\t//     is spaces.\n\t//\n\t// - [\"all_tabs\", \"selection\"]:\n\t//     Draw all tabs and any white space under the selection.\n\t//\n\t// - [\"all\", \"selection_none\"]:\n\t//     Inverse of the default. Draw white space everywhere except under the\n\t//     selection.\n\t\"draw_white_space\": [\"selection\"],\n\n\t// Controls how non-ascii white space is drawn.\n\t// - \"none\": Draw unicode white space verbatim, eg. hiding zero-width\n\t//           spaces.\n\t// - \"punctuation\": Draw codepoints of unicode white space defined as\n\t//                  punctuation. This includes NBSP, but excludes the CJK\n\t//                  Ideographic Space.\n\t// - \"all\": Draw codepoints of all non-ascii space characters.\n\t\"draw_unicode_white_space\": \"punctuation\",\n\n\t// Control characters (or white space if enabled) can be drawn as either hex\n\t// or using their abbreviation:\n\t// - \"hex\": Draw characters using their hex encoding, ie. <0xA0>\n\t// - \"names\": Draw characters using their abbreviation, ie. <NBSP>\n\t\"control_character_style\": \"hex\",\n\n\t// Controls what type of columns selection description (\"Line X, Column Y\"\n\t// in the status bar) uses:\n\t// - \"virtual\": Count virtual columns. Tabs count as their width in spaces.\n\t// - \"real\": Count real columns. Tabs count as one column.\n\t\"selection_description_column_type\": \"virtual\",\n\n\t// Set to false to turn off the indentation guides.\n\t// The color and width of the indent guides may be customized by editing\n\t// the corresponding .tmTheme file, and specifying the colors \"guide\",\n\t// \"activeGuide\" and \"stackGuide\"\n\t\"draw_indent_guides\": true,\n\n\t// Controls how the indent guides are drawn. Options may be combined, with\n\t// valid options being:\n\t//  - \"draw_normal\" - will draw plain indent guides for every indentation\n\t//    group\n\t//  - \"draw_active\" - will draw indent guides for the group\n\t//    containing the caret in a different color\n\t//  - \"draw_active_single\" - will draw the right-most indent guide in the\n\t//    group containing the caret in a different color\n\t//  - \"solid\" - can be combined with any of the draw_* options to draw\n\t//    solid instead of stippled lines\n\t\"indent_guide_options\": [\"draw_normal\"],\n\n\t// Controls where trailing white space is removed on save.\n\t// - \"none\": Do not remove any trailing white space on save.\n\t// - \"all\": Remove all trailing white space on save.\n\t// - \"not_on_caret\": Only remove white space that won't affect the caret.\n\t//                   When used in conjunction with \"save_on_focus_lost\" and\n\t//                   certain desktop environments that frequently make the\n\t//                   application lose focus this avoids the caret jumping\n\t//                   around a lot.\n\t\"trim_trailing_white_space_on_save\": \"none\",\n\n\t// Only trim white space on save for the parts of a file that have been\n\t// modified by you. If there is trailing white space in other parts of the\n\t// file they are left alone.\n\t\"trim_only_modified_white_space\": true,\n\n\t// Set to true to ensure the last line of the file ends in a newline\n\t// character when saving\n\t\"ensure_newline_at_eof_on_save\": false,\n\n\t// Set to true to automatically save files when switching to a different file\n\t// or application\n\t\"save_on_focus_lost\": false,\n\n\t// The encoding to use when the encoding can't be determined automatically.\n\t// ASCII, UTF-8 and UTF-16 encodings will be automatically detected.\n\t\"fallback_encoding\": \"Western (Windows 1252)\",\n\n\t// Encoding used when saving new files, and files opened with an undefined\n\t// encoding (e.g., plain ascii files). If a file is opened with a specific\n\t// encoding (either detected or given explicitly), this setting will be\n\t// ignored, and the file will be saved with the encoding it was opened\n\t// with.\n\t\"default_encoding\": \"UTF-8\",\n\n\t// Files containing null bytes are opened as hexadecimal by default\n\t\"enable_hexadecimal_encoding\": true,\n\n\t// Determines what character(s) are used to terminate each line in new files.\n\t// Valid values are 'system' (whatever the OS uses), 'windows' (CRLF) and\n\t// 'unix' (LF only).\n\t\"default_line_ending\": \"system\",\n\n\t// When enabled, hovering over a word will show a popup listing all\n\t// possible locations for the definition symbol. Requires index_files.\n\t\"show_definitions\": true,\n\n\t// When enabled, pressing tab will insert the best matching completion.\n\t// When disabled, tab will only trigger snippets or insert a tab.\n\t// Shift+tab can be used to insert an explicit tab when tab_completion is\n\t// enabled.\n\t\"tab_completion\": true,\n\n\t// Enable auto complete to be triggered automatically when typing.\n\t\"auto_complete\": true,\n\n\t// The maximum file size where auto complete will be automatically triggered.\n\t\"auto_complete_size_limit\": 4194304,\n\n\t// The delay, in ms, before the auto complete window is shown after typing\n\t\"auto_complete_delay\": 50,\n\n\t// Controls what scopes auto complete will be triggered in\n\t\"auto_complete_selector\": \"meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc\",\n\n\t// Additional situations to trigger auto complete\n\t\"auto_complete_triggers\":\n\t[\n\t\t{\"selector\": \"text.html, text.xml\", \"characters\": \"<\"},\n\t\t{\"selector\": \"punctuation.accessor\", \"rhs_empty\": true},\n\t],\n\n\t// By default, auto complete will commit the current completion on enter.\n\t// This setting can be used to make it complete on tab instead.\n\t// Completing on tab is generally a superior option, as it removes\n\t// ambiguity between committing the completion and inserting a newline.\n\t\"auto_complete_commit_on_tab\": false,\n\n\t// Controls if auto complete is shown when snippet fields are active.\n\t// Only relevant if auto_complete_commit_on_tab is true.\n\t\"auto_complete_with_fields\": false,\n\n\t// Controls what happens when pressing the up key while the first item in\n\t// the auto complete window is selected: if false, the window is hidden,\n\t// otherwise the last item in the window is selected. Likewise for the\n\t// down key when the last item is selected.\n\t\"auto_complete_cycle\": false,\n\n\t// Auto complete will used indexed data to provide completions from other\n\t// files when this is enabled\n\t\"auto_complete_use_index\": true,\n\n\t// If previously-selected completions should be automatically selected\n\t\"auto_complete_use_history\": false,\n\n\t// Controls how the auto complete results are reordered when typing:\n\t// - \"none\" will fully reorder the results according to how well the\n\t//   completion matches the typed text.\n\t// - \"some\" will partially reorder the results, taking into account how\n\t//   well the completion matches whats typed, and likelihood of the\n\t//   completion.\n\t// - \"strict\" will never reorder the results.\n\t\"auto_complete_preserve_order\": \"some\",\n\n\t// Add trailing symbols (e.g., '.', '()') if the auto complete engine\n\t// thinks they're likely enough\n\t\"auto_complete_trailing_symbols\": false,\n\n\t// Add a space after completions if the auto complete engine thinks\n\t// they're likely enough\n\t\"auto_complete_trailing_spaces\": true,\n\n\t// Snippets will not be included in the auto complete when this is\n\t// false. They can still be triggered by typing their tab trigger in, and\n\t// pressing tab when auto complete is not showing.\n\t\"auto_complete_include_snippets\": true,\n\n\t// When this is set to false, snippets won't be present in the auto\n\t// complete dialog when typing, instead they'll only be shown in the auto\n\t// complete dialog when it's explicitly triggered\n\t\"auto_complete_include_snippets_when_typing\": true,\n\n\t// Syntax will not be detected for files larger than this size. This makes\n\t// loading large files significantly faster. Set to 0 to always perform\n\t// syntax detection. The default is 16MiB.\n\t\"syntax_detection_size_limit\": 16777216,\n\n\t// A list of wildcard patterns specifying which snippet files to ignore.\n\t// For example, to ignore all the default C++ snippets, set this to\n\t// [\"C++/*\"]\n\t\"ignored_snippets\": [],\n\n\t// These settings hide various parts of the UI automatically when typing.\n\t// Moving the mouse will show them again.\n\t\"auto_hide_menu\": false,\n\t\"auto_hide_tabs\": false,\n\t\"auto_hide_status_bar\": false,\n\n\t// Related to auto_hide_tabs, if this is enabled, tabs will be momentarily\n\t// displayed when switching files. Tabs will automatically hidden upon\n\t// resuming typing or after a fixed amount of time.\n\t\"reveal_tabs_with_timeout\": false,\n\n\t// When false, disables alt-tapping revealing the menu when hidden on Linux\n\t// and Windows. Does not affect auto hiding or toggling the menu through\n\t// the command palette.\n\t\"reveal_menu\": true,\n\n\t// If true, when typing the mouse pointer/cursor will be hidden. Moving the\n\t// pointer will unhide it. This setting has no effect on macOS.\n\t\"hide_pointer_while_typing\": true,\n\n\t// By default, shift+tab will only unindent if the selection spans\n\t// multiple lines. When pressing shift+tab at other times, it'll insert a\n\t// tab character - this allows tabs to be inserted when tab_completion is\n\t// enabled. Set this to true to make shift+tab always unindent, instead of\n\t// inserting tabs.\n\t\"shift_tab_unindent\": false,\n\n\t// If true, the copy and cut commands will operate on the current line\n\t// when the selection is empty, rather than doing nothing.\n\t\"copy_with_empty_selection\": true,\n\n\t// If true, the selected text will be copied into the find panel when it's\n\t// shown.\n\t// On Mac, this value is overridden in the platform specific settings.\n\t\"find_selected_text\": true,\n\n\t// When auto_find_in_selection is enabled, the \"Find in Selection\" flag will\n\t// be enabled automatically when multiple lines of text are selected.\n\t// \"find_only\" or \"replace_only\" may also be used to only enable this\n\t// behavior for the find or replace panel respectively.\n\t\"auto_find_in_selection\": false,\n\n\t// This determines whether the find panel is closed when the \"Find All\"\n\t// or \"Replace All\" buttons are pressed. Note this does not change the\n\t// keybinding behavior.\n\t\"close_find_after_find_all\": true,\n\t\"close_find_after_replace_all\": true,\n\n\t// Whether to highlight find results in the scrollbar\n\t\"highlight_find_results_in_scrollbar\": true,\n\n\t// The maximum output size for find-in-files. Prevents searches with a large\n\t// number of results from using too much memory. Use 0 to remove this limit.\n\t\"find_in_files_max_result_size\": 16777216, // 16MB\n\n\t// When drag_text is enabled, clicking on selected text will begin a\n\t// drag-drop operation.\n\t\"drag_text\": true,\n\n\t//\n\t// User Interface Settings\n\t//\n\n\t// The theme controls the look of Sublime Text's UI (buttons, tabs, scroll\n\t// bars, etc)\n\t// The value \"auto\" will switch between the \"light_theme\" and \"dark_theme\"\n\t// based on the operating system appearance.\n\t\"theme\": \"auto\",\n\n\t// Controls the \"theme\" when to \"auto\"\n\t\"light_theme\": \"Default.sublime-theme\",\n\t\"dark_theme\": \"Default Dark.sublime-theme\",\n\n\t// Adaptive theme only: controls if a custom or default title bar is used.\n\t// Note that on Windows, the hamburger menu is used whenever this is\n\t// enabled and the adaptive theme is in use.\n\t\"themed_title_bar\": true,\n\n\t// Controls the style of file tabs for the Default, Default Dark, and\n\t// Adaptive themes.\n\t// Options: \"rounded\", \"square\"\n\t//   The value \"angled\" provides the tab style from Sublime Text 3, but is\n\t//   only compatible with the Default and Adaptive themes, and will not\n\t//   support new features like inactive pane dimming.\n\t\"file_tab_style\": \"rounded\",\n\n\t// If inactive sheets should have their background slightly modified to\n\t// make input focus more obvious.\n\t\"inactive_sheet_dimming\": true,\n\n\t// Set to 0 to disable smooth scrolling. Set to a value between 0 and 1 to\n\t// scroll slower, or set to larger than 1 to scroll faster\n\t\"scroll_speed\": 1.0,\n\n\t// Controls side bar animation when expanding or collapsing folders\n\t\"tree_animation_enabled\": true,\n\n\t// Controls animation throughout the application\n\t\"animation_enabled\": true,\n\n\t// Makes tabs with modified files more visible\n\t\"highlight_modified_tabs\": false,\n\n\t// Hides the tab close button when false\n\t\"show_tab_close_buttons\": true,\n\n\t// Determines which side the close button is on. The default for OSX is true\n\t// (on the left) and for other platforms it's false (on the right).\n\t\"show_tab_close_buttons_on_left\": false,\n\n\t// Show folders in the side bar in bold\n\t\"bold_folder_labels\": false,\n\n\t// Draw divider lines between sections of the UI when using the Adaptive theme\n\t\"adaptive_dividers\": false,\n\n\t// Draw shadows under popup windows\n\t\"popup_shadows\": true,\n\n\t// Mac only. Controls use of macOS tabs in 10.12 and newer. Each native tab\n\t// contains an entire project, thus allowing multiple projects in a single\n\t// window. Valid values are \"system\", \"preferred\" and \"disabled\".\n\t\"native_tabs\": \"system\",\n\n\t// Valid values are \"system\", \"enabled\" and \"disabled\"\n\t\"overlay_scroll_bars\": \"system\",\n\n\t// Allows tabs to scroll left and right, instead of simply shrinking\n\t\"enable_tab_scrolling\": true,\n\n\t// Hides the buttons for scrolling tabs left/right, requiring use of a\n\t// trackpad or mouse scroll wheel\n\t\"hide_tab_scrolling_buttons\": false,\n\n\t// Hides the new tab button\n\t\"hide_new_tab_button\": false,\n\n\t// Display the toggle sidebar button in the status bar\n\t\"show_sidebar_button\": true,\n\n\t// Display the git status in the status bar, requires the show_git_status\n\t// setting to be enabled\n\t\"show_git_status_in_status_bar\": true,\n\n\t// Display file encoding in the status bar\n\t\"show_encoding\": false,\n\n\t// Display line endings in the status bar\n\t\"show_line_endings\": false,\n\n\t// Display indentation in the status bar\n\t\"show_indentation\": true,\n\n\t// Display syntax in the status bar\n\t\"show_syntax\": true,\n\n\t// Magnifies the entire user interface. Sublime Text must be restarted for\n\t// this to take effect. 1.0 is normal scale, 0.0 allows for auto-detection\n\t// based on text scale with older Linux configurations that don't fully\n\t// support GTK display scaling.\n\t\"ui_scale\": 0.0,\n\n\t// Enables hardware accelerated rendering. This moves rendering to your GPU,\n\t// allowing for faster rendering at higher resolutions. Changing this\n\t// setting requires an application restart to take effect.\n\t// - \"none\": Performs CPU rendering.\n\t// - \"opengl\": Uses OpenGL for rendering. Minimum required version is 4.1\n\t//\n\t// On Mac, this value is overridden in the platform specific settings.\n\t\"hardware_acceleration\": \"none\",\n\n\t//\n\t// Application Behavior Settings\n\t//\n\n\t// Exiting the application with hot_exit enabled will cause it to close\n\t// immediately without prompting. Unsaved modifications and open files will\n\t// be preserved and restored when next starting.\n\t//\n\t// Closing a window with an associated project will also close the window\n\t// without prompting, preserving unsaved changes in the workspace file\n\t// alongside the project.\n\t//\n\t// Hot exit has different modes to choose from:\n\t// - \"always\": Always perform a hot exit when the application exits. This\n\t//             includes when the last window is closed on relevant\n\t//             platforms.\n\t// - \"only_on_quit\": Only perform a hot exit when the application is asked\n\t//                   to exit, not when the last window is closed. This\n\t//                   setting is only used on Windows and Linux.\n\t// - \"disabled\": Disable hot exit.\n\t\"hot_exit\": \"always\",\n\n\t// remember_full_screen will allow Sublime Text to start in full screen\n\t// mode if it was exited in full screen mode. When set to false, Sublime\n\t// Text will never start in full screen mode.\n\t\"remember_full_screen\": false,\n\n\t// remember_workspace makes Sublime Text remember what workspace each window\n\t// was in last. When set to false the OS left to determine which workspace\n\t// a window is opened in. This doesn't work with Wayland.\n\t\"remember_workspace\": true,\n\n\t// Mac only. If the user's default shell should be invoked to obtain the\n\t// user's customized environment variables. May be a boolean, or a string\n\t// of the path the shell to invoke. Sublime Text must be restarted for this\n\t// to take effect.\n\t\"shell_environment\": true,\n\n\t// Whether to reload a file if it has changed on disk.\n\t\"reload_file_on_change\": true,\n\n\t// Always prompt before reloading a file, even if the file hasn't been\n\t// modified. If a file has unsaved changes, a prompt will always be shown.\n\t// Will only show if \"reload_file_on_change\" is true.\n\t\"always_prompt_for_file_reload\": false,\n\n\t// When reopening Sublime Text close saved files that have been deleted from\n\t// the filesystem (Unsaved files will not be closed). If this setting is\n\t// false no files will be closed, instead they will be restored as empty\n\t// files.\n\t//\n\t// This is useful when working from an unstable networked file system where\n\t// tabs would be lost if the connection wasn't active.\n\t\"close_deleted_files\": true,\n\n\t// When files are opened from a file explorer or from the command line, this\n\t// controls whether a new window is created or not.\n\t// - \"never\": Never open a new window unless no window is open.\n\t// - \"always\": Always open files in a new window.\n\t// - \"finder_only\": (macOS only) Only open files in a new window when\n\t//                  opening them from finder or dragging onto the dock icon.\n\t//\n\t// On Mac, this value is overridden in the platform specific settings.\n\t\"open_files_in_new_window\": \"never\",\n\n\t// Mac only: This controls if an empty window is created at startup or not.\n\t\"create_window_at_startup\": true,\n\n\t// Mac only: Show recent files on the Touch Bar.\n\t\"show_navigation_bar\": true,\n\n\t// Set to true to close windows as soon as the last file is closed, unless\n\t// there's a folder open within the window.\n\t// On Mac, this value is overridden in the platform specific settings, so\n\t// you'll need to place this line in your user settings to override it.\n\t\"close_windows_when_empty\": false,\n\n\t// Show the full path to files in the title bar. On Mac, this value is\n\t// overridden in the platform specific settings, with a default value of\n\t// false.\n\t\"show_full_path\": true,\n\n\t// Show the relative path to files in the title bar. This overrides\n\t// show_full_path for files that are listed in the side bar, however\n\t// show_full_path is still used for other files.\n\t\"show_rel_path\": false,\n\n\t// Show \"project - file\" or \"file - project\" in the title bar.\n\t\"show_project_first\": false,\n\n\t// Shows the Build Results panel when building. If set to false, the Build\n\t// Results can be shown via the Tools/Build Results menu.\n\t\"show_panel_on_build\": true,\n\n\t// Shows build errors just under the line on which they occur.\n\t\"show_errors_inline\": true,\n\n\t// Shows git repository information next to files in sidebar and in\n\t// the status bar. Sublime Text has to be restarted for this to take\n\t// effect.\n\t\"show_git_status\": true,\n\n\t// Enables showing git status for a git repository in the user's home\n\t// directory. This is disabled by default since it is typically accidental\n\t// and can cause heavy CPU usage related to file system watches.\n\t\"allow_git_home_dir\": false,\n\n\t// This setting determines whether tracked Git files should be diffed\n\t// against the index or HEAD.\n\t// Valid values are \"index\" or \"head\"\n\t\"git_diff_target\": \"index\",\n\n\t// The path to the Sublime Merge executable. This should only be set if\n\t// Sublime Merge is not installed in a standard location, such as when\n\t// using a portable install.\n\t\"sublime_merge_path\": \"\",\n\n\t// Preview file contents when clicking on a file in the side bar. Double\n\t// clicking or editing the preview will open the file and assign it a tab.\n\t// - true: Always preview on click, including right click\n\t// - false: Never preview\n\t// - \"only_left\": Only preview on left click, right click will change the\n\t//                selection but not preview the file.\n\t\"preview_on_click\": true,\n\n\t// Controls the maximum number of lines kept in the console's history. Note\n\t// a large limit will increase memory usage. Use 0 to remove any limit.\n\t\"console_max_history_lines\": 3000,\n\n\t// folder_exclude_patterns and file_exclude_patterns control which files\n\t// are listed in folders on the side bar. These can also be set on a per-\n\t// project basis.\n\t\"folder_exclude_patterns\": [\".svn\", \".git\", \".hg\", \"CVS\", \".Trash\", \".Trash-*\"],\n\t\"file_exclude_patterns\": [\"*.pyc\", \"*.pyo\", \"*.exe\", \"*.dll\", \"*.obj\",\"*.o\", \"*.a\", \"*.lib\", \"*.so\", \"*.dylib\", \"*.ncb\", \"*.sdf\", \"*.suo\", \"*.pdb\", \"*.idb\", \".DS_Store\", \".directory\", \"desktop.ini\", \"*.class\", \"*.psd\", \"*.db\", \"*.sublime-workspace\"],\n\t// These files will still show up in the side bar, but won't be included in\n\t// Goto Anything or Find in Files\n\t\"binary_file_patterns\": [\"*.jpg\", \"*.jpeg\", \"*.png\", \"*.gif\", \"*.ttf\", \"*.tga\", \"*.dds\", \"*.ico\", \"*.eot\", \"*.pdf\", \"*.swf\", \"*.jar\", \"*.zip\"],\n\n\t// File indexing parses all files in the side bar, and builds an index of\n\t// their symbols. This is required for Goto Definition to work.\n\t\"index_files\": true,\n\n\t// Set the number threads to use for indexing. A value of 0 will make\n\t// Sublime Text guess based on the number of cores. Use the index_files\n\t// setting to disable all workers. This requires a restart to take effect.\n\t\"index_workers\": 0,\n\n\t// Sets whether the indexer should exclude files ignored by git\n\t\"index_exclude_gitignore\": true,\n\n\t// Whether unknown file extensions should be checked for indexing or skipped\n\t// entirely. If a file extension is not being recognised we suggest\n\t// setting/changing the default syntax for that extension instead of turning\n\t// this setting off.\n\t\"index_skip_unknown_extensions\": true,\n\n\t// index_exclude_patterns indicate which files won't be indexed.\n\t\"index_exclude_patterns\": [\"*.log\"],\n\n\t// When Vintage, the vi emulation package, is enabled\n\t// (see ignored_packages, below), this setting controls if files are opened\n\t// in command mode or insert mode by default\n\t\"vintage_start_in_command_mode\": false,\n\n\t// Yank commands can place the text in either an internal register, or in\n\t// the system clipboard.\n\t\"vintage_use_clipboard\": false,\n\n\t// By default Vintage will interpret all ctrl+<key> key bindings as\n\t// regular Sublime Text key bindings. Set this to true to make ctrl keys\n\t// act as they do in vim, instead (e.g., ctrl+f to move forward a page).\n\t\"vintage_ctrl_keys\": false,\n\n\t// relative_line_numbers will draw each line number as the distance from\n\t// the current line. Useful in conjunction with Vintage.\n\t\"relative_line_numbers\": false,\n\n\t// List any packages to ignore here. When removing entries from this list,\n\t// a restart may be required if the package contains plugins.\n\t\"ignored_packages\": [\"Vintage\"]\n}\n",
					"file": "/Users/Phteben/Library/Application Support/Sublime Text/Packages/Default/Preferences.sublime-settings",
					"file_size": -1,
					"file_write_time": -1,
					"settings":
					{
						"buffer_size": 32876,
						"line_ending": "Unix",
						"read_only": true,
						"scratch": true,
						"unsaved": true
					}
				},
				{
					"file": "/Users/Phteben/Library/Application Support/Sublime Text/Packages/User/Preferences.sublime-settings",
					"settings":
					{
						"buffer_size": 5501,
						"encoding": "UTF-8",
						"line_ending": "Unix"
					},
					"undo_stack":
					[
						[
							14,
							1,
							"insert",
							{
								"characters": "false"
							},
							"BgAAAJMEAAAAAAAAlAQAAAAAAAAAAAAAlAQAAAAAAACUBAAAAAAAAAQAAAB0cnVllAQAAAAAAACVBAAAAAAAAAAAAACVBAAAAAAAAJYEAAAAAAAAAAAAAJYEAAAAAAAAlwQAAAAAAAAAAAAAlwQAAAAAAACYBAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAkwQAAAAAAACXBAAAAAAAAAAAAAAAAPC/"
						],
						[
							23,
							1,
							"insert",
							{
								"characters": "false"
							},
							"BgAAANAHAAAAAAAA0QcAAAAAAAAAAAAA0QcAAAAAAADRBwAAAAAAAAQAAAB0cnVl0QcAAAAAAADSBwAAAAAAAAAAAADSBwAAAAAAANMHAAAAAAAAAAAAANMHAAAAAAAA1AcAAAAAAAAAAAAA1AcAAAAAAADVBwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAA0AcAAAAAAADUBwAAAAAAAAAAAAAAAPC/"
						],
						[
							24,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAANUHAAAAAAAA1gcAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAA1QcAAAAAAADVBwAAAAAAAAAAAAAAAPC/"
						],
						[
							25,
							1,
							"left_delete",
							null,
							"AQAAANUHAAAAAAAA1QcAAAAAAAABAAAAIA",
							"AQAAAAAAAAABAAAA1gcAAAAAAADWBwAAAAAAAAAAAAAAAPC/"
						]
					]
				}
			],
			"build_system": "",
			"build_system_choices":
			[
				[
					[
						[
							"Packages/Default/Syntax Tests.sublime-build",
							""
						],
						[
							"Packages/Default/Syntax Tests.sublime-build",
							"All Syntaxes"
						],
						[
							"Packages/Default/Syntax Tests.sublime-build",
							"Performance"
						],
						[
							"Packages/Default/Syntax Tests.sublime-build",
							"Regex Compatibility"
						]
					],
					[
						"Packages/Default/Syntax Tests.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							""
						],
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							"Traditional"
						],
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							"PdfLaTeX"
						],
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							"XeLaTeX"
						],
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							"LuaLaTeX"
						],
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							"Basic Builder"
						],
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							"Basic Builder - PdfLaTeX"
						],
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							"Basic Builder - XeLaTeX"
						],
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							"Basic Builder - LuaLaTeX"
						],
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							"Script Builder"
						]
					],
					[
						"Packages/LaTeXTools/LaTeX.sublime-build",
						""
					]
				]
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"breakpoint",
						"Python Breakpoints: Toggle"
					],
					[
						"foldal",
						"Code Folding: Fold All"
					],
					[
						"connect",
						"Helium: Connect Kernel"
					],
					[
						"helium",
						"Helium: Connect Kernel"
					],
					[
						"key",
						"Preferences: Key Bindings"
					],
					[
						"scheme",
						"PackageDev: Edit Current Color Scheme"
					],
					[
						"arg",
						"Format Arguments"
					],
					[
						"helium res",
						"Helium: Restart Kernel"
					],
					[
						"theme",
						"PackageDev: Edit Current Theme"
					],
					[
						"fold",
						"Code Folding: Fold All"
					],
					[
						"black",
						"Sublack: Format file"
					],
					[
						"open",
						"PackageResourceViewer: Open Resource"
					],
					[
						"alignment",
						"Preferences: Alignment File Settings – Syntax Specific – User"
					],
					[
						"fields",
						"MultiEditUtils: Selection as Fields"
					],
					[
						"syntax python",
						"Set Syntax: Python"
					],
					[
						"open re",
						"PackageResourceViewer: Open Resource"
					],
					[
						"py",
						"Set Syntax: Python"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"syntax scheme",
						"Set Syntax: Sublime Text Color Scheme (JSON)"
					],
					[
						"extract",
						"PackageResourceViewer: Extract Package"
					],
					[
						"book",
						"Bookmarks: Toggle"
					],
					[
						"select to ",
						"Selection: Expand to Brackets"
					],
					[
						"table mode",
						"AlignTab: Live Preview Mode"
					],
					[
						"tablemode",
						"AlignTab: Exit Table Mode"
					],
					[
						"exit t",
						"AlignTab: Exit Table Mode"
					],
					[
						"aligntab",
						"AlignTab: Table Mode"
					],
					[
						"reindent",
						"Indentation: Reindent Lines"
					],
					[
						"color scheme",
						"PackageDev: Edit Current Color Scheme"
					],
					[
						"color",
						"Color Hint"
					],
					[
						"syntax shell",
						"Set Syntax: Bourne Again Shell (bash)"
					],
					[
						"html",
						"HTMLPrettify"
					],
					[
						"sftp",
						"Preferences: SFTP Settings"
					],
					[
						"markdown",
						"MarkdownLivePreview: Open Preview"
					],
					[
						"preview",
						"OmniMarkupPreviewer: Preview Current Markup in Browser"
					],
					[
						"side",
						"Side-by-Side: Select a File"
					],
					[
						"wrap",
						"Word Wrap: Toggle"
					],
					[
						"syntax markdown",
						"Set Syntax: Markdown GFM"
					],
					[
						"remove",
						"Package Control: Remove Package"
					],
					[
						"syntax markd",
						"Set Syntax: MultiMarkdown"
					],
					[
						"markdonw",
						"Markdown Preview: Preview in Browser"
					],
					[
						"r",
						"Reload All Files"
					],
					[
						"line",
						"Line Endings Unify"
					],
					[
						"shell",
						"Set Syntax: Bourne Again Shell (bash)"
					],
					[
						"syntax",
						"Set Syntax: Python"
					],
					[
						"swa",
						"BracketHighlighter: Swap Quotes"
					],
					[
						"swap q",
						"BracketHighlighter: Swap Quotes"
					],
					[
						"quote",
						"BracketHighlighter: Swap Quotes"
					],
					[
						"scope",
						"Scope Hunter: Toggle Instant Scoper"
					],
					[
						"new syntax",
						"PackageDev: New Syntax Definition"
					],
					[
						"show all",
						"SublimeLinter: Show All Errors"
					],
					[
						"reload",
						"Reload All Files"
					],
					[
						"sublime linter",
						"SublimeLinter: Show All Errors"
					],
					[
						"linter",
						"Preferences: SublimeLinter Settings"
					],
					[
						"ecc",
						"ECC: Settings"
					],
					[
						"inter",
						"Set Syntax: swig-interface"
					],
					[
						"syntac",
						"Set Syntax: C"
					],
					[
						"syntax defin",
						"Set Syntax: Sublime Text Syntax Definition (YAML)"
					],
					[
						"syntac c",
						"Set Syntax: C"
					],
					[
						"uint",
						"Set Syntax: ucfconstraints"
					],
					[
						"build",
						"Build With: Syntax Tests"
					],
					[
						"build w",
						"Build With: Syntax Tests"
					],
					[
						"reloa",
						"Reload All Files"
					],
					[
						"clanf",
						"Clang Format: Format Selection"
					],
					[
						"clang",
						"Clang Format: Format Selection"
					],
					[
						"select",
						"Selection: Expand to Scope"
					],
					[
						"expand",
						"Selection: Expand to Indentation"
					],
					[
						"disable",
						"Package Control: Disable Package"
					],
					[
						"sublack",
						"Sublack: Format file"
					],
					[
						"python",
						"Set Syntax: Python"
					],
					[
						"ruler",
						"CursorRuler: Toggle Enabled/Disabled"
					],
					[
						"jkv",
						"Set Syntax: JSON Key-Value"
					],
					[
						"json",
						"Set Syntax: JSON"
					],
					[
						"serial yaml",
						"Serialized Data Converter: JSON to YAML"
					],
					[
						"sftp li",
						"SFTP: Enter License Key"
					],
					[
						"subla",
						"Sublack: Format file"
					],
					[
						"sub",
						"Sublack: Format file"
					],
					[
						"kv",
						"Set Syntax: JSON Key-Value"
					],
					[
						"convert to json b",
						"Build With: Convert to ... - JSON"
					],
					[
						"format ya",
						"Pretty YAML: Reformat (Pretty Print) YAML"
					],
					[
						"serial",
						"Serialized Data Converter: JSON to YAML"
					],
					[
						"REPL python",
						"SublimeREPL: Python"
					],
					[
						"syntaxpython",
						"Set Syntax: Python"
					],
					[
						"sublime repl py",
						"SublimeREPL: Python - IPython"
					],
					[
						"discover",
						"Package Control: Discover Packages"
					],
					[
						"docs",
						"Anaconda: Display object docs"
					],
					[
						"side ",
						"Side-by-Side: Select a File"
					],
					[
						"ana",
						"Anaconda: Display object docs"
					],
					[
						"tcsh synt",
						"Set Syntax: (T)csh Shell Script"
					],
					[
						"syntax csh",
						"Set Syntax: (T)csh Shell Script"
					],
					[
						"csh",
						"Preferences: ColorHints Settings"
					],
					[
						"format",
						"Format Arguments"
					],
					[
						"cance",
						"SFTP: Cancel Upload"
					],
					[
						"align file",
						"Preferences: Alignment File Settings – Syntax Specific – User"
					],
					[
						"preser",
						"MultiEditUtils: Preserve Case"
					],
					[
						"argu",
						"Format Arguments"
					],
					[
						"cancel",
						"SFTP: Cancel Upload"
					],
					[
						"show",
						"SFTP: Show Panel"
					],
					[
						"shoe",
						"SublimeLinter: Show All Errors"
					],
					[
						"show s",
						"SFTP: Show Panel"
					],
					[
						"convert to json ser",
						"Serialized Data Converter: YAML to JSON"
					],
					[
						"build yaml",
						"Build With: Convert to ... - YAML (Block Style)"
					],
					[
						"disc",
						"Package Control: Discover Packages"
					],
					[
						"hjs",
						"Set Syntax: Hjson"
					],
					[
						"sysv",
						"Set Syntax: SystemVerilog"
					],
					[
						"argumen",
						"Format Arguments"
					],
					[
						"preserve",
						"MultiEditUtils: Preserve Case"
					],
					[
						"sort",
						"Sort Lines"
					],
					[
						"convert",
						"Convert Case: snake_case"
					],
					[
						"replace",
						"Replace characters in selection with spaces"
					],
					[
						"single lines",
						"Reduce strings of >=2 lines into a single line within each selection"
					],
					[
						"reduce",
						"Reduce strings of >=2 spaces into a single space within selection"
					],
					[
						"disco",
						"Package Control: Discover Packages"
					],
					[
						"onstall",
						"Package Control: Install Package"
					],
					[
						"align",
						"Preferences: Alignment File Settings – Syntax Specific – User"
					],
					[
						"install ",
						"Package Control: Install Package"
					],
					[
						"preserv",
						"MultiEditUtils: Preserve Case"
					],
					[
						"word",
						"WordHighlight: Toggle Enabled"
					],
					[
						"yaml defau",
						"Build With: Convert to ... - YAML (Default Style)"
					],
					[
						"convert to yaml",
						"Serialized Data Converter: JSON to YAML (Save)"
					],
					[
						"vindent",
						"Verilog: Reindent"
					],
					[
						"sftp ca",
						"SFTP: Cancel Upload"
					],
					[
						"sftp p",
						"SFTP: Show Panel"
					],
					[
						"table ",
						"AlignTab: Live Preview Mode"
					],
					[
						"sync scroll",
						"SyncScroll: Toggle Current View Scroll Sync"
					],
					[
						"sftp pan",
						"SFTP: Show Panel"
					],
					[
						"fz",
						"SublimeZilla: Import FileZilla Server"
					],
					[
						"block",
						"Toggle Block Comment"
					],
					[
						"split",
						"MultiEditUtils: Split selection"
					]
				],
				"width": 0.0
			},
			"console":
			{
				"height": 487.0,
				"history":
				[
					"sublime.find_resources(\"*.hidden-tmTheme\")",
					"sublime.find_resources(\"*.hidden-color-scheme\")",
					"sublime.log_commands(True)",
					"{\n  \"title\": \"Remote Desktop\",\n  \"rules\": [\n    {\n      \"description\": \"Swap command and control\",\n      \"manipulators\": [\n        {\n          \"type\": \"basic\",\n          \"from\": {\n            \"key_code\": \"left_control\",\n            \"modifiers\": {\n              \"optional\": [\n                \"any\"\n              ]\n            }\n          },\n          \"to\": [\n            {\n              \"key_code\": \"left_command\"\n            }\n          ],\n          \"conditions\": [\n            {\n              \"type\": \"frontmost_application_if\",\n              \"bundle_identifiers\": [\n                \"com\\\\.microsoft\\\\.rdc\\\\.mac\"\n              ]\n            }\n          ]\n        },\n        {\n          \"type\": \"basic\",\n          \"from\": {\n            \"key_code\": \"left_command\",\n            \"modifiers\": {\n              \"optional\": [\n                \"any\"\n              ]\n            }\n          },\n          \"to\": [\n            {\n              \"key_code\": \"left_control\"\n            }\n          ],\n          \"conditions\": [\n            {\n              \"type\": \"frontmost_application_if\",\n              \"bundle_identifiers\": [\n                \"com\\\\.microsoft\\\\.rdc\\\\.mac\"\n              ]\n            }\n          ]\n        },\n        {\n          \"type\": \"basic\",\n          \"from\": {\n            \"key_code\": \"right_control\",\n            \"modifiers\": {\n              \"optional\": [\n                \"any\"\n              ]\n            }\n          },\n          \"to\": [\n            {\n              \"key_code\": \"right_command\"\n            }\n          ],\n          \"conditions\": [\n            {\n              \"type\": \"frontmost_application_if\",\n              \"bundle_identifiers\": [\n                \"com\\\\.microsoft\\\\.rdc\\\\.mac\"\n              ]\n            }\n          ]\n        },\n        {\n          \"type\": \"basic\",\n          \"from\": {\n            \"key_code\": \"right_command\",\n            \"modifiers\": {\n              \"optional\": [\n                \"any\"\n              ]\n            }\n          },\n          \"to\": [\n            {\n              \"key_code\": \"right_control\"\n            }\n          ],\n          \"conditions\": [\n            {\n              \"type\": \"frontmost_application_if\",\n              \"bundle_identifiers\": [\n                \"com\\\\.microsoft\\\\.rdc\\\\.mac\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}",
					"rules:\n- description: Swap command and control\n  manipulators:\n  - type: basic\n    from:\n      key_code: left_control\n      modifiers:\n        optional:\n        - any\n    to:\n    - key_code: left_command\n    conditions:\n    - type: frontmost_application_if\n      bundle_identifiers:\n      - com\\.microsoft\\.rdc\\.mac\n  - type: basic\n    from:\n      key_code: left_command\n      modifiers:\n        optional:\n        - any\n    to:\n    - key_code: left_control\n    conditions:\n    - type: frontmost_application_if\n      bundle_identifiers:\n      - com\\.microsoft\\.rdc\\.mac\n  - type: basic\n    from:\n      key_code: right_control\n      modifiers:\n        optional:\n        - any\n    to:\n    - key_code: right_command\n    conditions:\n    - type: frontmost_application_if\n      bundle_identifiers:\n      - com\\.microsoft\\.rdc\\.mac\n  - type: basic\n    from:\n      key_code: right_command\n      modifiers:\n        optional:\n        - any\n    to:\n    - key_code: right_control\n    conditions:\n    - type: frontmost_application_if\n      bundle_identifiers:\n      - com\\.microsoft\\.rdc\\.mac\n",
					"com.sublimetext.4",
					"{\n          \"description\": \"escape = capslock switch\",\n          \"type\": \"basic\",\n          \"from\": {\n            \"key_code\": \"escape\",\n            \"modifiers\": {\n              \"optional\": [\n                \"caps_lock\"\n              ],\n              \"mandatory\": [\n                \"right_command\",\n                \"right_control\",\n                \"right_shift\",\n                \"right_option\"\n              ]\n            }\n          },\n          \"to\": [\n            {\n              \"key_code\": \"caps_lock\",\n              \"modifiers\": [\n                \"left_control\"\n              ]\n            }\n          ]\n        }",
					"{\n    \"title\": \"Keychron Swap\",\n    \"rules\": [{\n\n            \"description\": \"C2: Swap insert and fn\",\n            \"manipulators\": [{\n                    \"conditions\": [{\n                        \"identifiers\": [{\n                            \"description\": \"Keychron\",\n                            \"product_id\": 591\n                        }],\n                        \"type\": \"device_if\"\n                    }],\n                    \"type\": \"basic\",\n                    \"from\": {\n                        \"key_code\": \"fn\"\n                    },\n                    \"to\": {\n                        \"key_code\": \"insert\"\n                    }\n                },\n                {\n                    \"conditions\": [{\n                        \"identifiers\": [{\n                            \"description\": \"Keychron\",\n                            \"product_id\": 591\n                        }],\n                        \"type\": \"device_if\"\n                    }],\n                    \"type\": \"basic\",\n                    \"from\": {\n                        \"key_code\": \"insert\"\n                    },\n                    \"to\": {\n                        \"key_code\": \"fn\"\n                    }\n                }\n            ]\n        },\n        {\n            \"description\": \"C2: Swap CMD and CTRL\",\n            \"manipulators\": [{\n                    \"conditions\": [{\n                        \"identifiers\": [{\n                            \"description\": \"Keychron\",\n                            \"product_id\": 591\n                        }],\n                        \"type\": \"device_if\"\n                    }],\n                    \"from\": {\n                        \"key_code\": \"left_command\",\n                        \"modifiers\": {\n                            \"optional\": [\n                                \"any\"\n                            ]\n                        }\n                    },\n                    \"to\": [{\n                        \"key_code\": \"left_option\"\n                    }],\n                    \"type\": \"basic\"\n                },\n                {\n                    \"conditions\": [{\n                        \"identifiers\": [{\n                            \"description\": \"Keychron\",\n                            \"product_id\": 591\n                        }],\n                        \"type\": \"device_if\"\n                    }],\n                    \"from\": {\n                        \"key_code\": \"left_option\",\n                        \"modifiers\": {\n                            \"optional\": [\n                                \"any\"\n                            ]\n                        }\n                    },\n                    \"to\": {\n                        \"key_code\": \"left_command\"\n                    },\n                    \"type\": \"basic\"\n                },\n                {\n                    \"conditions\": [{\n                        \"identifiers\": [{\n                            \"description\": \"Keychron\",\n                            \"product_id\": 591\n                        }],\n                        \"type\": \"device_if\"\n                    }],\n                    \"from\": {\n                        \"key_code\": \"right_command\",\n                        \"modifiers\": {\n                            \"optional\": [\n                                \"any\"\n                            ]\n                        }\n                    },\n                    \"to\": [{\n                        \"key_code\": \"right_option\"\n                    }],\n                    \"type\": \"basic\"\n                },\n                {\n                    \"conditions\": [{\n                        \"identifiers\": [{\n                            \"description\": \"Keychron\",\n                            \"product_id\": 591\n                        }],\n                        \"type\": \"device_if\"\n                    }],\n                    \"from\": {\n                        \"key_code\": \"right_option\",\n                        \"modifiers\": {\n                            \"optional\": [\n                                \"any\"\n                            ]\n                        }\n                    },\n                    \"to\": {\n                        \"key_code\": \"right_command\"\n                    },\n                    \"type\": \"basic\"\n                }\n            ]\n        }\n    ]\n}",
					"- identifiers:\n  - description: Keychron\n    product_id: 591\n  type: device_if",
					"https://www.amazon.com/Skin-Tag-Remover-Patches-Fast-Acting/product-reviews/B091JDQN6D/ref=cm_cr_dp_d_show_all_btm?ie=UTF8&reviewerType=all_reviews",
					"{ \"keys\": [\"super+alt+n\"], \"command\": \"normalize_region_ends\" },",
					"command: sublime_linter_assigned {\"linter_names\": [], \"filename\": \"<untitled 800>\"}"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/Users/Phteben/stnatale/bist_gui/Bist_columns.py",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/User/Base File.sublime-settings",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/User/Python.sublime-settings",
				"/Users/Phteben/Untitled13.py",
				"/Users/Phteben/Untitled13.ipynb",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/Helium/.python-version",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/Helium/Helium.sublime-syntax",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/User/SBSCompareScheme.hidden-color-scheme",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/PackageDev/Package/Sublime Text Color Scheme/Sublime Text Color Scheme.sublime-settings",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/User/NATSTE.sublime-color-scheme",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/Color Scheme - Default/NATSTE.sublime-color-scheme",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/Color Scheme - Default/untitled.json",
				"/Users/Phteben/stnatale/swig/pmu_2Dtrain.i",
				"/Users/Phteben/stnatale/bist_gui/bist_compare_v1.py",
				"/Users/Phteben/stnatale/ddr4bist/firmware/snps_source/include/hwt_common_api.h",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/dwc_lpddr54_cuamd_tsmc7ff18_fw_phyinit_A-2020.09_20201019 copy/firmware/A-2020.09/training/source/build/eye_export_lib_preproc.c",
				"/Users/Phteben/stnatale/swig/logs/py_firstly.log",
				"/Users/Phteben/stnatale/swig/logs/ctypes_firstly.log",
				"/Users/Phteben/stnatale/swig/logs/snps_build_using_gcc.log",
				"/Users/Phteben/stnatale/swig/logs/ryana_build_using_gcc.log",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/build.sh",
				"/Users/Phteben/stnatale/swig/elf2binhelp.txt",
				"/Users/Phteben/stnatale/swig/ccachelp.txt",
				"/Users/Phteben/stnatale/swig/log.log",
				"/Users/Phteben/stnatale/swig/ctypes.log",
				"/Users/Phteben/stnatale/swig/hwt_common_api.h",
				"/Users/Phteben/stnatale/swig/pmu_2Dtrain.c",
				"/Users/Phteben/stnatale/swig/swig_build2.sh",
				"/Users/Phteben/Documents/andrew07:29:21.md",
				"/Users/Phteben/stnatale/swig/snps_source/include/hwt_common_api.h",
				"/Users/Phteben/stnatale/swig/snps_source/hwt_common_api.h",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/link.lcf",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/arc.tcf",
				"/Users/Phteben/stnatale/swig/swig_build.sh",
				"/Users/Phteben/stnatale/ddr4bist/firmware/snps_source/pmu_2Dtrain2.c",
				"/Users/Phteben/stnatale/sftp-config.json",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/pmu_2Dtrain.c",
				"/Users/Phteben/stnatale/ddr4bist/firmware/snps_source/pmu_2Dtrain.c",
				"/Users/Phteben/stnatale/swig/ldhelp.txt",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/User/Syntaxes/swig-interface.sublime-syntax",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/User/Syntaxes/syntax_test.i",
				"/Users/Phteben/stnatale/ddr4bist/firmware/snps_source/include/pmu_util.h",
				"/Users/Phteben/stnatale/ddr4bist.sublime-project",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/-Karabiner-YAML/karabiner_yaml.sublime-syntax",
				"/Users/Phteben/stnatale/swig/eye.py",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/C++/C.sublime-syntax",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/-Karabiner-YAML/karabiner_json.sublime-syntax",
				"/Users/Phteben/stnatale/swig/build.sh",
				"/Users/Phteben/stnatale/ddr4bist/firmware/bist_source/include/hwt_common_api.h",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/RMB_logs/2d-hist_RMB.py",
				"/Users/Phteben/.zshrc",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/CSR script/Archive/CSRV_parallelTest.py",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/Default/Main.sublime-menu",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/User/Main.sublime-menu",
				"/Users/Phteben/stnatale/swig/example.c",
				"/Volumes/NATALS/cali_core3/Contents/Resources/Python/lib/python2.7/config/Makefile",
				"/Users/Phteben/PycharmProjects/pythonProject/venv/lib/python3.9/site-packages/setuptools/_distutils/command/build_ext.py",
				"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/config-3.8-darwin/config.c",
				"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/Headers/pythonrun.h",
				"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/config-3.8-darwin/python-config.py",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/CursorRuler/CursorRuler.sublime-settings",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/runtc",
				"/Users/Phteben/.config/karabiner/assets/complex_modifications/Middle Click.k-yaml",
				"/Users/Phteben/.config/karabiner/assets/complex_modifications/Middle Click.JSON-k-yaml",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/setup_file.py",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/runtc_auto.py",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/RndFields_source.sv",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/inject_apb_config.py",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/runtc_auto_v2.py",
				"/Users/Phteben/stnatale/ddr4bist/tests/test2/simv.log",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/runtc_auto.csh",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/bist_compare.py",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/terminal 2.log",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/DTO/DTO__/rmbInfo.py",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/DTO/DTO__/AMD_COLORS.py",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/DTO/DTO__/ColumnDTO_RMB.py",
				"/Users/Phteben/Library/.gitignore",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/DTO/DTO__/ColumnExplore_MR.py",
				"/Users/Phteben/.config/karabiner/formats.kb.yaml",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/setup_file.yaml",
				"/Users/Phteben/stnatale/sftp-config.yaml",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/asdfjk",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/sublack/sublack/commands.py",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/User/Anaconda.sublime-settings",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/pathlib/all/pathlib.py",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/DTO/terminal.log",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/inject_runtc.py",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/terminal.log",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/VN_vDropTest/UEFI_reset.py",
				"/Users/Phteben/stnatale/bist_gui/runtc_auto.csh",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/simv.log",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/testbench/inc/RndFields_source.sv",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/DTO/DTO__/RMB_DDR5_Mux_GUI_2.py",
				"/Users/Phteben/stnatale/ddr4bist/firmware/bist_source/pmu_bist.c",
				"/Users/Phteben/stnatale/bist_gui/AMD_COLORS.py",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/DTO/DTO__/ColumnExplore_v2.py",
				"/Users/Phteben/stnatale/ddr4bist/tests/test6/terminal.log",
				"/Users/Phteben/stnatale/bist_gui/runtc_auto.py",
				"/Users/Phteben/stnatale/ddr4bist/bash_bootenv",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/bootenv",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/signing_automation.py",
				"/Users/Phteben/stnatale/ddr4bist/tests/test1/terminal.log",
				"/Users/Phteben/stnatale/ddr4bist/tests/test7/terminal.log",
				"/Users/Phteben/stnatale/ddr4bist/tests/test8/terminal.log",
				"/Users/Phteben/stnatale/ddr4bist/tests/test9/terminal.log",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/Case Conversion/case_conversion.py",
				"/Users/Phteben/Downloads/CLDO_drop_VN.py",
				"/Users/Phteben/stnatale/ddr4bist/tests/test7/simv.log",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/DTO/DTO__/ColumnExplore.py",
				"/Users/Phteben/stnatale/ddr4bist/firmware/bist_source/include/mnPmuSramBistBlock.h",
				"/Users/Phteben/stnatale/ddr4bist/tests/test2/RndFields.sv",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/cmd.run",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/DTO/DTO__/mrInfo.py",
				"/Users/Phteben/stnatale/ddr4bist/tests/test7/apb_config.sv",
				"/Volumes/PORTCAMP/BreadboardKeyboard/main.v",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/testbench/inc/RndFields_source_backup.sv",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/CSR script/VCLDO_regTest_VN.py",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/simv",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/deleteme.txt",
				"/Users/Phteben/stnatale/ddr4bist/tests/test6/simv.log",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/common_test_inc.sv",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/testbench/inc/common_test_inc.sv",
				"/Users/Phteben/stnatale/ddr4bist/tests/test5/terminal.log",
				"/Users/Phteben/stnatale/ddr4bist/tests/test5/simv.log",
				"/Users/Phteben/stnatale/ddr4bist/tests/test4/simv.log",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/bist_compare_v1.py",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/bist_compare_v3.py",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/bist_compare.py"
			],
			"find":
			{
				"height": 25.0
			},
			"find_in_files":
			{
				"height": 99.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"drag",
					"auto",
					"sni",
					"snippe"
				],
				"highlight": false,
				"in_selection": false,
				"preserve_case": false,
				"regex": true,
				"replace_history":
				[
				],
				"reverse": true,
				"scrollbar_highlights": true,
				"show_context": true,
				"use_buffer2": true,
				"use_gitignore": true,
				"whole_word": false,
				"wrap": true
			},
			"groups":
			[
				{
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/Users/Phteben/Library/Application Support/Sublime Text/Packages/Default/Preferences.sublime-settings",
							"selected": true,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 32876,
								"regions":
								{
								},
								"selection":
								[
									[
										32876,
										32876
									]
								],
								"settings":
								{
									"WordCount":
									{
										"changes": -1,
										"modified": true,
										"selection": true,
										"status": -1,
										"syntax": "plain text"
									},
									"apply_syntax_touched": true,
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content"
									],
									"edit_settings_other_view_id": 100,
									"edit_settings_view": "base",
									"function_name_status_row": 799,
									"mini_diff": false,
									"origPos":
									[
										0.0,
										0.0
									],
									"remote_loading": false,
									"rulers":
									[
										-0.1,
										0.2
									],
									"syncScroll": false,
									"synced": false,
									"syntax": "Packages/PackageDev/Package/Sublime Text Settings/Sublime Text Settings.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"stack_multiselect": false,
							"type": "text"
						}
					]
				},
				{
					"sheets":
					[
						{
							"buffer": 1,
							"file": "/Users/Phteben/Library/Application Support/Sublime Text/Packages/User/Preferences.sublime-settings",
							"selected": true,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 5501,
								"regions":
								{
								},
								"selection":
								[
									[
										2005,
										2005
									]
								],
								"settings":
								{
									"WordCount":
									{
										"changes": 14,
										"count": 305,
										"modified": false,
										"selection": false,
										"status": -1,
										"syntax": "plain text"
									},
									"apply_syntax_touched": true,
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
											"1":
											[
												0,
												1
											]
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content"
									],
									"edit_settings_other_view_id": 99,
									"edit_settings_view": "user",
									"function_name_status_row": 60,
									"incomplete_sync": null,
									"origPos":
									[
										0.0,
										597.0
									],
									"remote_loading": false,
									"rulers":
									[
										21.9,
										22.2
									],
									"syncScroll": false,
									"synced": false,
									"syntax": "Packages/PackageDev/Package/Sublime Text Settings/Sublime Text Settings.sublime-syntax",
									"tab_size": 4,
									"tabs_extra_last_activated": 1629026167.46,
									"tabs_extra_last_activated_sheet_index": 0,
									"translate_tabs_to_spaces": false
								},
								"translation.x": 0.0,
								"translation.y": 597.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"stack_multiselect": false,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 25.0
			},
			"input":
			{
				"height": 43.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					],
					[
						1,
						0,
						2,
						1
					]
				],
				"cols":
				[
					0.0,
					0.5,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.SFTP":
			{
				"height": 204.0
			},
			"output.SublimeLinter":
			{
				"height": 127.0
			},
			"output.SublimeLinter Messages":
			{
				"height": 139.0
			},
			"output.SystemVerilog":
			{
				"height": 152.0
			},
			"output.exec":
			{
				"height": 173.0
			},
			"output.find_results":
			{
				"height": 152.0
			},
			"output.help":
			{
				"height": 104.0
			},
			"output.keybinding":
			{
				"height": 104.0
			},
			"output.latextools":
			{
				"height": 164.0
			},
			"output.mdpopups":
			{
				"height": 0.0
			},
			"output.package_dev":
			{
				"height": 104.0
			},
			"pinned_build_system": "Packages/Default/Syntax Tests.sublime-build",
			"position": "8 0 0 0 2560 1415 0 0 2560 1415 ",
			"project": "",
			"replace":
			{
				"height": 64.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 1,
			"settings":
			{
			},
			"show_minimap": true,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": false,
			"side_bar_width": 322.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 869,
			"workspace_name": ""
		},
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"imax",
						"i_maxw"
					],
					[
						"y",
						"y_val"
					],
					[
						"brea",
						"breakpoint"
					],
					[
						"exi",
						"exit"
					],
					[
						"xy",
						"xy_split"
					],
					[
						"arr",
						"arr_list"
					],
					[
						"inter",
						"intersects"
					],
					[
						"uni",
						"unique"
					],
					[
						"mask",
						"mask_coarse"
					],
					[
						"scat",
						"scatter_plts"
					],
					[
						"__",
						"__init__"
					],
					[
						"in",
						"interp_array"
					],
					[
						"interp",
						"interp_array"
					],
					[
						"cent",
						"center_args"
					],
					[
						"block",
						"block_caret_border"
					],
					[
						"under",
						"squiggly_underline"
					],
					[
						"meta",
						"meta_append"
					],
					[
						"weight",
						"weight_eye"
					],
					[
						"twoD",
						"twoD_eye_t_ptr"
					],
					[
						"two",
						"twoD_Eye_t"
					],
					[
						"interface",
						"interface-function"
					],
					[
						"f",
						"function-call"
					],
					[
						"a",
						"meta"
					],
					[
						"p",
						"support"
					],
					[
						"s",
						"storage"
					],
					[
						"e",
						"keyword"
					],
					[
						"inte",
						"interface-line"
					],
					[
						"met",
						"meta_prepend"
					],
					[
						"if",
						"ifmain"
					],
					[
						"for",
						"for"
					],
					[
						"ca",
						"case"
					],
					[
						"batch",
						"batch_setup"
					],
					[
						"tdi",
						"tdi_continue"
					],
					[
						"loc",
						"lock_file"
					],
					[
						"bist",
						"bist_params"
					],
					[
						"param",
						"param_vars"
					],
					[
						"test",
						"test_directory"
					],
					[
						"TL",
						"TLabelframe"
					],
					[
						"inj",
						"inj_addr_list"
					],
					[
						"SIM",
						"SIMV_PATH"
					],
					[
						"def",
						"default_errors"
					],
					[
						"runtc",
						"runtc_cols"
					],
					[
						"runt",
						"runtc_defects"
					],
					[
						"cid",
						"cid_step"
					],
					[
						"bank",
						"bank_step"
					],
					[
						"BIST",
						"BIST_BANKSIZE"
					],
					[
						"ADDR",
						"ADDR_LOWER"
					],
					[
						"ADD",
						"ADDR_LOWER"
					],
					[
						"apb",
						"apb_wr"
					],
					[
						"name",
						"__name__"
					],
					[
						"get",
						"getNewestFileInDir"
					],
					[
						"w",
						"write"
					],
					[
						"mod",
						"mod"
					],
					[
						"subsub",
						"\\subsubsection*{title}                            "
					],
					[
						"phnt",
						"\\phantomsection                                   \thyperref"
					],
					[
						"list",
						"\\listoffigures                                    \tlatex-document"
					],
					[
						"input",
						"\\input{file}                                      "
					],
					[
						"abstra",
						"\\begin{abstract}                                  "
					],
					[
						"inpu",
						"\\input{file}                                      "
					],
					[
						"inp",
						"\\input{file}                                      "
					],
					[
						"r",
						"variables"
					],
					[
						"insert",
						"insert"
					],
					[
						"Z",
						"Zin_min"
					],
					[
						"dm",
						"dmax_l_"
					],
					[
						"db",
						"_db_data"
					],
					[
						"write",
						"writerow\tfunction"
					],
					[
						"set",
						"set_trace\tfunction"
					],
					[
						"comp",
						"_compiled_regex"
					],
					[
						"WR",
						"WRDQ_RSTR\tstatement"
					],
					[
						"WRDQ",
						"WRDQ_REGEX\tstatement"
					],
					[
						"spl",
						"splitlines\tfunction"
					],
					[
						"thread",
						"Thread\tclass"
					],
					[
						"original",
						"original_putty_log\tstatement"
					],
					[
						"fwsi",
						"fw_signing_dir\tstatement"
					],
					[
						"ro",
						"rowconfigure"
					],
					[
						"row",
						"ROWS\tstatement"
					],
					[
						"fo",
						"foreground"
					],
					[
						"_Menu",
						"_Menubutton\tclass"
					],
					[
						"menu",
						"_Menu"
					],
					[
						"postcode",
						"postcode_value\tstatement"
					],
					[
						"frame",
						"frameL1_postcode\tstatement"
					],
					[
						"width",
						"_width"
					],
					[
						"column",
						"columnconfigure\tstatement"
					],
					[
						"check",
						"checkbox_frame\tstatement"
					],
					[
						"format",
						"formatted_time"
					],
					[
						"total",
						"total_time_elapsed\tstatement"
					],
					[
						"L",
						"Labeled_Frame\tclass"
					],
					[
						"log",
						"Scrolling_Log"
					],
					[
						"Scrol",
						"scrolledtext\tmodule"
					],
					[
						"Lable",
						"LabelFrame"
					],
					[
						"class",
						"class\tkeyword"
					],
					[
						"canvas",
						"canvas_frame\tstatement"
					],
					[
						"config",
						"ConfigUpdate"
					],
					[
						"main",
						"main_Lframe\tstatement"
					],
					[
						"grid",
						"grid_propagate\tfunction"
					],
					[
						"postcode_v",
						"postcode_val_label\tstatement"
					],
					[
						"postcode_",
						"postcode_value"
					],
					[
						"MERO",
						"MERO_ABL_POSTCODE"
					],
					[
						"post",
						"postcode_stored\tstatement"
					],
					[
						"label",
						"LabelFrame\tclass"
					],
					[
						"up",
						"update_idletasks\tfunction"
					],
					[
						"umc",
						"umcChoice\tstatement"
					],
					[
						"wri",
						"writeMux\tfunction"
					],
					[
						"dfmp4",
						"dfpm4_fields\tstatement"
					],
					[
						"cldo",
						"cldoLow\tstatement"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/Users/Phteben/Eye.py",
					"settings":
					{
						"buffer_size": 20795,
						"encoding": "UTF-8",
						"line_ending": "Unix"
					},
					"undo_stack":
					[
						[
							4557,
							1,
							"insert_snippet",
							{
								"contents": "\"${0:$SELECTION}\""
							},
							"BAAAAPYhAAAAAAAA9iEAAAAAAAABAAAAbPYhAAAAAAAA+SEAAAAAAAAAAAAAFCMAAAAAAAAUIwAAAAAAAAEAAABsFCMAAAAAAAAXIwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAxjgAAAAAAADGOAAAAAAAAAAAAAAAAPC/AQAAAAIAAAD2IQAAAAAAAPchAAAAAAAAAAAAAAAA8L8SIwAAAAAAABMjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4565,
							2,
							"left_delete",
							null,
							"AgAAAIAeAAAAAAAAgB4AAAAAAAAdAAAAICAgICAgICByID0gW10KICAgICAgICBsID0gW11/HgAAAAAAAH8eAAAAAAAAAQAAAAo",
							"AgAAAAAAAAABAAAAyjgAAAAAAADKOAAAAAAAAAAAAAAAAPC/AQAAAAEAAACdHgAAAAAAAIAeAAAAAAAAAAAAAAAA8L8"
						],
						[
							4586,
							1,
							"paste",
							null,
							"BAAAALQjAAAAAAAAtCMAAAAAAAABAAAAbLQjAAAAAAAAuiMAAAAAAAAAAAAAgyMAAAAAAACDIwAAAAAAAAEAAABygyMAAAAAAACJIwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAArDgAAAAAAACsOAAAAAAAAAAAAAAAAPC/AQAAAAIAAACEIwAAAAAAAIMjAAAAAAAAAAAAAAAA8L+1IwAAAAAAALQjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4588,
							1,
							"left_delete",
							null,
							"AgAAALwjAAAAAAAAvCMAAAAAAAABAAAAYoYjAAAAAAAAhiMAAAAAAAABAAAAdA",
							"AgAAAAAAAAABAAAAtjgAAAAAAAC2OAAAAAAAAAAAAAAAAPC/AQAAAAIAAACHIwAAAAAAAIcjAAAAAAAAAAAAAAAA8L+9IwAAAAAAAL0jAAAAAAAAAAAAAAAA8L8"
						],
						[
							4590,
							1,
							"insert",
							{
								"characters": "l"
							},
							"AQAAAIYjAAAAAAAAhyMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAtDgAAAAAAAC0OAAAAAAAAAAAAAAAAPC/AQAAAAEAAACGIwAAAAAAAIYjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4593,
							1,
							"insert",
							{
								"characters": "r"
							},
							"AQAAAIYjAAAAAAAAhyMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAtTgAAAAAAAC1OAAAAAAAAAAAAAAAAPC/AQAAAAEAAACGIwAAAAAAAIYjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4597,
							1,
							"left_delete",
							null,
							"AQAAAIcjAAAAAAAAhyMAAAAAAAABAAAAbA",
							"AgAAAAAAAAABAAAAtjgAAAAAAAC2OAAAAAAAAAAAAAAAAPC/AQAAAAEAAACIIwAAAAAAAIgjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4600,
							1,
							"insert",
							{
								"characters": "r"
							},
							"AQAAALwjAAAAAAAAvSMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAtTgAAAAAAAC1OAAAAAAAAAAAAAAAAPC/AQAAAAEAAAC8IwAAAAAAALwjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4610,
							1,
							"left_delete",
							null,
							"AQAAALwjAAAAAAAAvCMAAAAAAAABAAAAcg",
							"AgAAAAAAAAABAAAAtjgAAAAAAAC2OAAAAAAAAAAAAAAAAPC/AQAAAAEAAAC9IwAAAAAAAL0jAAAAAAAAAAAAAAAA8L8"
						],
						[
							4611,
							1,
							"insert",
							{
								"characters": "l"
							},
							"AQAAALwjAAAAAAAAvSMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAtTgAAAAAAAC1OAAAAAAAAAAAAAAAAPC/AQAAAAEAAAC8IwAAAAAAALwjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4614,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAALAjAAAAAAAAsSMAAAAAAAAAAAAAsSMAAAAAAAC5IwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAtjgAAAAAAAC2OAAAAAAAAAAAAAAAAPC/AQAAAAEAAACwIwAAAAAAALAjAAAAAAAA////////738"
						],
						[
							4615,
							1,
							"run_macro_file",
							{
								"file": "res://Packages/Default/Delete to Hard BOL.sublime-macro"
							},
							"AQAAALEjAAAAAAAAsSMAAAAAAAAIAAAAICAgICAgICA",
							"AgAAAAAAAAABAAAAvzgAAAAAAAC/OAAAAAAAAAAAAAAAAPC/AQAAAAEAAAC5IwAAAAAAALkjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4616,
							1,
							"left_delete",
							null,
							"AQAAALAjAAAAAAAAsCMAAAAAAAABAAAACg",
							"AgAAAAAAAAABAAAAtzgAAAAAAAC3OAAAAAAAAAAAAAAAAPC/AQAAAAEAAACxIwAAAAAAALEjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4618,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAAOYjAAAAAAAA5yMAAAAAAAAAAAAA5yMAAAAAAADvIwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAtjgAAAAAAAC2OAAAAAAAAAAAAAAAAPC/AQAAAAEAAADmIwAAAAAAAOYjAAAAAAAAAAAAAACQgEA"
						],
						[
							4623,
							1,
							"insert",
							{
								"characters": "d"
							},
							"AwAAAM4kAAAAAAAAzyQAAAAAAAAAAAAAvSQAAAAAAAC+JAAAAAAAAAAAAADnIwAAAAAAAOcjAAAAAAAACAAAACAgICAgICAg",
							"AgAAAAAAAAABAAAAvzgAAAAAAAC/OAAAAAAAAAAAAAAAAPC/AQAAAAIAAAC9JAAAAAAAAL0kAAAAAAAAAAAAAAAA8L/OJAAAAAAAAM4kAAAAAAAAAAAAAAAA8L8"
						],
						[
							4625,
							1,
							"insert_snippet",
							{
								"contents": "[${0:$SELECTION}]"
							},
							"BAAAALYkAAAAAAAAtiQAAAAAAAABAAAAbLYkAAAAAAAAuSQAAAAAAAAAAAAAyiQAAAAAAADKJAAAAAAAAAEAAAByyiQAAAAAAADNJAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAuTgAAAAAAAC5OAAAAAAAAAAAAAAAAPC/AQAAAAIAAAC2JAAAAAAAALckAAAAAAAAAAAAAAAA8L/IJAAAAAAAAMkkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4626,
							1,
							"insert_snippet",
							{
								"contents": "\"${0:$SELECTION}\""
							},
							"BAAAALckAAAAAAAAtyQAAAAAAAABAAAAbLckAAAAAAAAuiQAAAAAAAAAAAAAzSQAAAAAAADNJAAAAAAAAAEAAAByzSQAAAAAAADQJAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAvTgAAAAAAAC9OAAAAAAAAAAAAAAAAPC/AQAAAAIAAAC3JAAAAAAAALgkAAAAAAAAAAAAAAAA8L/LJAAAAAAAAMwkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4634,
							1,
							"insert",
							{
								"characters": "S"
							},
							"AgAAANEkAAAAAAAA0iQAAAAAAAAAAAAAuyQAAAAAAAC8JAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAwTgAAAAAAADBOAAAAAAAAAAAAAAAAPC/AQAAAAIAAAC7JAAAAAAAALskAAAAAAAAAAAAAAAA8L/RJAAAAAAAANEkAAAAAAAAAAAAAAAAaUA"
						],
						[
							4635,
							1,
							"left_delete",
							null,
							"AgAAANIkAAAAAAAA0iQAAAAAAAABAAAAU7skAAAAAAAAuyQAAAAAAAABAAAAUw",
							"AgAAAAAAAAABAAAAwzgAAAAAAADDOAAAAAAAAAAAAAAAAPC/AQAAAAIAAAC8JAAAAAAAALwkAAAAAAAAAAAAAAAA8L/TJAAAAAAAANMkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4641,
							1,
							"paste",
							null,
							"BAAAAM4jAAAAAAAAziMAAAAAAAABAAAAbM4jAAAAAAAA1CMAAAAAAAAAAAAAmCMAAAAAAACYIwAAAAAAAAEAAABymCMAAAAAAACeIwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAwTgAAAAAAADBOAAAAAAAAAAAAAAAAPC/AQAAAAIAAACZIwAAAAAAAJgjAAAAAAAAAAAAAAAA8L/PIwAAAAAAAM4jAAAAAAAAAAAAAAAA8L8"
						],
						[
							4646,
							1,
							"insert",
							{
								"characters": ".size"
							},
							"CgAAANskAAAAAAAA3CQAAAAAAAAAAAAAxSQAAAAAAADGJAAAAAAAAAAAAADdJAAAAAAAAN4kAAAAAAAAAAAAAMYkAAAAAAAAxyQAAAAAAAAAAAAA3yQAAAAAAADgJAAAAAAAAAAAAADHJAAAAAAAAMgkAAAAAAAAAAAAAOEkAAAAAAAA4iQAAAAAAAAAAAAAyCQAAAAAAADJJAAAAAAAAAAAAADjJAAAAAAAAOQkAAAAAAAAAAAAAMkkAAAAAAAAyiQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAyzgAAAAAAADLOAAAAAAAAAAAAAAAAPC/AQAAAAIAAADFJAAAAAAAAMUkAAAAAAAAAAAAAAAA8L/bJAAAAAAAANskAAAAAAAAAAAAAAAAaUA"
						],
						[
							4650,
							1,
							"insert",
							{
								"characters": "512"
							},
							"BAAAANsBAAAAAAAA3AEAAAAAAAAAAAAA3AEAAAAAAADcAQAAAAAAAAMAAAAyNTbcAQAAAAAAAN0BAAAAAAAAAAAAAN0BAAAAAAAA3gEAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA1TgAAAAAAADVOAAAAAAAAAAAAAAAAPC/AQAAAAEAAADbAQAAAAAAAN4BAAAAAAAAAAAAAAAA8L8"
						],
						[
							4664,
							1,
							"permute_selection",
							{
								"operation": "reverse"
							},
							"AgAAANYjAAAAAAAA1yMAAAAAAAABAAAAcpsjAAAAAAAAnCMAAAAAAAABAAAAbA",
							"AgAAAAAAAAABAAAA1TgAAAAAAADVOAAAAAAAAAAAAAAAAPC/AQAAAAIAAACcIwAAAAAAAJsjAAAAAAAAAAAAAAAA8L/XIwAAAAAAANYjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4675,
							1,
							"permute_selection",
							{
								"operation": "reverse"
							},
							"AgAAAN0kAAAAAAAA3iQAAAAAAAABAAAAcsIkAAAAAAAAwyQAAAAAAAABAAAAbA",
							"AgAAAAAAAAABAAAA1TgAAAAAAADVOAAAAAAAAAAAAAAAAPC/AQAAAAIAAADDJAAAAAAAAMIkAAAAAAAAAAAAAAAA8L/eJAAAAAAAAN0kAAAAAAAAAAAAAAAA8L8"
						],
						[
							4679,
							1,
							"left_delete",
							null,
							"AgAAAOAkAAAAAAAA4CQAAAAAAAAFAAAALnNpemXFJAAAAAAAAMUkAAAAAAAABQAAAC5zaXpl",
							"AgAAAAAAAAABAAAA1TgAAAAAAADVOAAAAAAAAAAAAAAAAPC/AQAAAAIAAADFJAAAAAAAAMokAAAAAAAAAAAAAAAA8L/gJAAAAAAAAOUkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4683,
							1,
							"reindent",
							null,
							"AQAAADYjAAAAAAAATiMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAyzgAAAAAAADLOAAAAAAAAAAAAAAAAPC/AQAAAAEAAAA2IwAAAAAAADYjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4691,
							4,
							"left_delete",
							null,
							"BAAAAEojAAAAAAAASiMAAAAAAAAEAAAAICAgIEYjAAAAAAAARiMAAAAAAAAEAAAAICAgIEIjAAAAAAAAQiMAAAAAAAAEAAAAICAgID4jAAAAAAAAPiMAAAAAAAAEAAAAICAgIA",
							"AgAAAAAAAAABAAAA4zgAAAAAAADjOAAAAAAAAAAAAAAAAPC/AQAAAAEAAABOIwAAAAAAAE4jAAAAAAAAAAAAAACgdEA"
						],
						[
							4692,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AwAAAD4jAAAAAAAAPyMAAAAAAAAAAAAAPyMAAAAAAABHIwAAAAAAAAAAAAA2IwAAAAAAADYjAAAAAAAACAAAACAgICAgICAg",
							"AgAAAAAAAAABAAAA0zgAAAAAAADTOAAAAAAAAAAAAAAAAPC/AQAAAAEAAAA+IwAAAAAAAD4jAAAAAAAAAAAAAAAA8L8"
						],
						[
							4695,
							1,
							"insert",
							{
								"characters": "if"
							},
							"AgAAAD8jAAAAAAAAQCMAAAAAAAAAAAAAQCMAAAAAAABBIwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA1DgAAAAAAADUOAAAAAAAAAAAAAAAAPC/AQAAAAEAAAA/IwAAAAAAAD8jAAAAAAAAAAAAAAAAVEA"
						],
						[
							4696,
							1,
							"insert",
							{
								"characters": " d"
							},
							"AgAAAEEjAAAAAAAAQiMAAAAAAAAAAAAAQiMAAAAAAABDIwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA1jgAAAAAAADWOAAAAAAAAAAAAAAAAPC/AQAAAAEAAABBIwAAAAAAAEEjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4697,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAEMjAAAAAAAARSMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA2DgAAAAAAADYOAAAAAAAAAAAAAAAAPC/AQAAAAEAAABDIwAAAAAAAEMjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4698,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAAEQjAAAAAAAARiMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA2jgAAAAAAADaOAAAAAAAAAAAAAAAAPC/AQAAAAEAAABEIwAAAAAAAEQjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4699,
							1,
							"insert",
							{
								"characters": "r"
							},
							"AQAAAEUjAAAAAAAARiMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA3DgAAAAAAADcOAAAAAAAAAAAAAAAAPC/AQAAAAEAAABFIwAAAAAAAEUjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4705,
							1,
							"insert",
							{
								"characters": ".shape"
							},
							"BgAAAEgjAAAAAAAASSMAAAAAAAAAAAAASSMAAAAAAABKIwAAAAAAAAAAAABKIwAAAAAAAEsjAAAAAAAAAAAAAEsjAAAAAAAATCMAAAAAAAAAAAAATCMAAAAAAABNIwAAAAAAAAAAAABNIwAAAAAAAE4jAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA3TgAAAAAAADdOAAAAAAAAAAAAAAAAPC/AQAAAAEAAABIIwAAAAAAAEgjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4706,
							1,
							"insert",
							{
								"characters": " >"
							},
							"AgAAAE4jAAAAAAAATyMAAAAAAAAAAAAATyMAAAAAAABQIwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA4zgAAAAAAADjOAAAAAAAAAAAAAAAAPC/AQAAAAEAAABOIwAAAAAAAE4jAAAAAAAAAAAAAAAA8L8"
						],
						[
							4707,
							1,
							"insert",
							{
								"characters": " d"
							},
							"AgAAAFAjAAAAAAAAUSMAAAAAAAAAAAAAUSMAAAAAAABSIwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA5TgAAAAAAADlOAAAAAAAAAAAAAAAAPC/AQAAAAEAAABQIwAAAAAAAFAjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4708,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAFIjAAAAAAAAVCMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA5zgAAAAAAADnOAAAAAAAAAAAAAAAAPC/AQAAAAEAAABSIwAAAAAAAFIjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4709,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAAFMjAAAAAAAAVSMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA6TgAAAAAAADpOAAAAAAAAAAAAAAAAPC/AQAAAAEAAABTIwAAAAAAAFMjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4710,
							1,
							"insert",
							{
								"characters": "l.s"
							},
							"AwAAAFQjAAAAAAAAVSMAAAAAAAAAAAAAVSMAAAAAAABWIwAAAAAAAAAAAABWIwAAAAAAAFcjAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA6zgAAAAAAADrOAAAAAAAAAAAAAAAAPC/AQAAAAEAAABUIwAAAAAAAFQjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4711,
							2,
							"left_delete",
							null,
							"AgAAAFYjAAAAAAAAViMAAAAAAAABAAAAc1UjAAAAAAAAVSMAAAAAAAABAAAALg",
							"AgAAAAAAAAABAAAA7jgAAAAAAADuOAAAAAAAAAAAAAAAAPC/AQAAAAEAAABXIwAAAAAAAFcjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4713,
							1,
							"insert",
							{
								"characters": ".shape"
							},
							"BgAAAFcjAAAAAAAAWCMAAAAAAAAAAAAAWCMAAAAAAABZIwAAAAAAAAAAAABZIwAAAAAAAFojAAAAAAAAAAAAAFojAAAAAAAAWyMAAAAAAAAAAAAAWyMAAAAAAABcIwAAAAAAAAAAAABcIwAAAAAAAF0jAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA7DgAAAAAAADsOAAAAAAAAAAAAAAAAPC/AQAAAAEAAABXIwAAAAAAAFcjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4731,
							1,
							"insert_snippet",
							{
								"contents": "(${0:$SELECTION})"
							},
							"BAAAAEIjAAAAAAAAQiMAAAAAAAAMAAAAZFsiciJdLnNoYXBlQiMAAAAAAABQIwAAAAAAAAAAAABTIwAAAAAAAFMjAAAAAAAADAAAAGRbImwiXS5zaGFwZVMjAAAAAAAAYSMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA8jgAAAAAAADyOAAAAAAAAAAAAAAAAPC/AQAAAAIAAABCIwAAAAAAAE4jAAAAAAAAAAAAAAAA8L9RIwAAAAAAAF0jAAAAAAAAAAAAAAAA8L8"
						],
						[
							4733,
							1,
							"insert",
							{
								"characters": "max"
							},
							"BgAAAFMjAAAAAAAAVCMAAAAAAAAAAAAAQiMAAAAAAABDIwAAAAAAAAAAAABVIwAAAAAAAFYjAAAAAAAAAAAAAEMjAAAAAAAARCMAAAAAAAAAAAAAVyMAAAAAAABYIwAAAAAAAAAAAABEIwAAAAAAAEUjAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA9jgAAAAAAAD2OAAAAAAAAAAAAAAAAPC/AQAAAAIAAABCIwAAAAAAAEIjAAAAAAAAAAAAAAAA8L9TIwAAAAAAAFMjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4739,
							1,
							"insert",
							{
								"characters": ":"
							},
							"AQAAAGcjAAAAAAAAaCMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA/DgAAAAAAAD8OAAAAAAAAAAAAAAAAPC/AQAAAAEAAABnIwAAAAAAAGcjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4740,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AwAAAGgjAAAAAAAAaSMAAAAAAAAAAAAAaSMAAAAAAABxIwAAAAAAAAAAAABxIwAAAAAAAHUjAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA/TgAAAAAAAD9OAAAAAAAAAAAAAAAAPC/AQAAAAEAAABoIwAAAAAAAGgjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4751,
							2,
							"swap_line_up",
							null,
							"BAAAAHYjAAAAAAAAdiMAAAAAAAC6AAAAICAgICAgICBkWyJ0Il0gPSBucC5hcnJheShkWyJ0Il0pCiAgICAgICAgZFsiYiJdID0gbnAuYXJyYXkoZFsiYiJdKQogICAgICAgIGRbInIiXSA9IFNvcnRlZEFycmF5KGRbInIiXSwgdW5pcXVlID0gIm1pbiIpLmFycmF5CiAgICAgICAgZFsibCJdID0gU29ydGVkQXJyYXkoZFsibCJdLCB1bmlxdWUgPSAibWluIikuYXJyYXkKaSMAAAAAAAAjJAAAAAAAAAAAAABpIwAAAAAAAGkjAAAAAAAAugAAACAgICAgICAgZFsidCJdID0gbnAuYXJyYXkoZFsidCJdKQogICAgICAgIGRbImIiXSA9IG5wLmFycmF5KGRbImIiXSkKICAgICAgICBkWyJyIl0gPSBTb3J0ZWRBcnJheShkWyJyIl0sIHVuaXF1ZSA9ICJtaW4iKS5hcnJheQogICAgICAgIGRbImwiXSA9IFNvcnRlZEFycmF5KGRbImwiXSwgdW5pcXVlID0gIm1pbiIpLmFycmF5CjcjAAAAAAAA8SMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAACjkAAAAAAAAKOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAvJAAAAAAAAHYjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4755,
							1,
							"insert",
							{
								"characters": "temp"
							},
							"BAAAAC8kAAAAAAAAMCQAAAAAAAAAAAAAMCQAAAAAAAAxJAAAAAAAAAAAAAAxJAAAAAAAADIkAAAAAAAAAAAAADIkAAAAAAAAMyQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAACjkAAAAAAAAKOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAvJAAAAAAAAC8kAAAAAAAAAAAAAAAA8L8"
						],
						[
							4756,
							1,
							"insert",
							{
								"characters": " ="
							},
							"AgAAADMkAAAAAAAANCQAAAAAAAAAAAAANCQAAAAAAAA1JAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAADjkAAAAAAAAOOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAzJAAAAAAAADMkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4757,
							1,
							"insert",
							{
								"characters": " d"
							},
							"AgAAADUkAAAAAAAANiQAAAAAAAAAAAAANiQAAAAAAAA3JAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAEDkAAAAAAAAQOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA1JAAAAAAAADUkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4758,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAADckAAAAAAAAOSQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAEjkAAAAAAAASOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA3JAAAAAAAADckAAAAAAAAAAAAAAAA8L8"
						],
						[
							4759,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAADgkAAAAAAAAOiQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAFDkAAAAAAAAUOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA4JAAAAAAAADgkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4760,
							1,
							"insert",
							{
								"characters": "l"
							},
							"AQAAADkkAAAAAAAAOiQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAFjkAAAAAAAAWOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA5JAAAAAAAADkkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4762,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAADwkAAAAAAAAPiQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAFzkAAAAAAAAXOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA8JAAAAAAAADwkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4763,
							1,
							"run_macro_file",
							{
								"file": "res://Packages/Default/Delete Left Right.sublime-macro"
							},
							"AgAAADwkAAAAAAAAPCQAAAAAAAABAAAAWzwkAAAAAAAAPCQAAAAAAAABAAAAXQ",
							"AgAAAAAAAAABAAAAGTkAAAAAAAAZOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA9JAAAAAAAAD0kAAAAAAAAAAAAAAAA8L8"
						],
						[
							4764,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAADwkAAAAAAAAPiQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAFzkAAAAAAAAXOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA8JAAAAAAAADwkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4765,
							1,
							"insert",
							{
								"characters": "1"
							},
							"AQAAAD0kAAAAAAAAPiQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAGTkAAAAAAAAZOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA9JAAAAAAAAD0kAAAAAAAAAAAAAAAA8L8"
						],
						[
							4767,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAAD8kAAAAAAAAQCQAAAAAAAAAAAAAQCQAAAAAAABMJAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAGjkAAAAAAAAaOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA/JAAAAAAAAD8kAAAAAAAAAAAAAAAA8L8"
						],
						[
							4768,
							1,
							"insert",
							{
								"characters": "d"
							},
							"AQAAAEwkAAAAAAAATSQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAJzkAAAAAAAAnOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABMJAAAAAAAAEwkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4769,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAE0kAAAAAAAATyQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAKDkAAAAAAAAoOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABNJAAAAAAAAE0kAAAAAAAAAAAAAAAA8L8"
						],
						[
							4770,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAAE4kAAAAAAAAUCQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAKjkAAAAAAAAqOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABOJAAAAAAAAE4kAAAAAAAAAAAAAAAA8L8"
						],
						[
							4771,
							1,
							"insert",
							{
								"characters": "l"
							},
							"AQAAAE8kAAAAAAAAUCQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAALDkAAAAAAAAsOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABPJAAAAAAAAE8kAAAAAAAAAAAAAAAA8L8"
						],
						[
							4773,
							1,
							"insert",
							{
								"characters": " ="
							},
							"AgAAAFIkAAAAAAAAUyQAAAAAAAAAAAAAUyQAAAAAAABUJAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAALTkAAAAAAAAtOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABSJAAAAAAAAFIkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4774,
							1,
							"insert",
							{
								"characters": " np.ze"
							},
							"BgAAAFQkAAAAAAAAVSQAAAAAAAAAAAAAVSQAAAAAAABWJAAAAAAAAAAAAABWJAAAAAAAAFckAAAAAAAAAAAAAFckAAAAAAAAWCQAAAAAAAAAAAAAWCQAAAAAAABZJAAAAAAAAAAAAABZJAAAAAAAAFokAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAALzkAAAAAAAAvOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABUJAAAAAAAAFQkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4775,
							1,
							"insert",
							{
								"characters": "rosl"
							},
							"BAAAAFokAAAAAAAAWyQAAAAAAAAAAAAAWyQAAAAAAABcJAAAAAAAAAAAAABcJAAAAAAAAF0kAAAAAAAAAAAAAF0kAAAAAAAAXiQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAANTkAAAAAAAA1OQAAAAAAAAAAAAAAAPC/AQAAAAEAAABaJAAAAAAAAFokAAAAAAAAAAAAAAAA8L8"
						],
						[
							4776,
							1,
							"insert_completion",
							{
								"completion": "zeros_like",
								"format": "snippet",
								"keep_prefix": false,
								"must_insert": false,
								"trigger": "zeros_like"
							},
							"AgAAAFgkAAAAAAAAWCQAAAAAAAAGAAAAemVyb3NsWCQAAAAAAABiJAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAOTkAAAAAAAA5OQAAAAAAAAAAAAAAAPC/AQAAAAEAAABeJAAAAAAAAF4kAAAAAAAAAAAAAAAA8L8"
						],
						[
							4777,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAGIkAAAAAAAAZCQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAPTkAAAAAAAA9OQAAAAAAAAAAAAAAAPC/AQAAAAEAAABiJAAAAAAAAGIkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4779,
							1,
							"insert",
							{
								"characters": "d"
							},
							"AQAAAGMkAAAAAAAAZCQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAPzkAAAAAAAA/OQAAAAAAAAAAAAAAAPC/AQAAAAEAAABjJAAAAAAAAGMkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4780,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAGQkAAAAAAAAZiQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAQDkAAAAAAABAOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABkJAAAAAAAAGQkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4781,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAAGUkAAAAAAAAZyQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAQjkAAAAAAABCOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABlJAAAAAAAAGUkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4782,
							1,
							"insert",
							{
								"characters": "r"
							},
							"AQAAAGYkAAAAAAAAZyQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAARDkAAAAAAABEOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABmJAAAAAAAAGYkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4784,
							1,
							"insert",
							{
								"characters": "\nd"
							},
							"AwAAAGokAAAAAAAAayQAAAAAAAAAAAAAayQAAAAAAAB3JAAAAAAAAAAAAAB3JAAAAAAAAHgkAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAARTkAAAAAAABFOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABqJAAAAAAAAGokAAAAAAAAAAAAAAAA8L8"
						],
						[
							4785,
							1,
							"left_delete",
							null,
							"AQAAAHckAAAAAAAAdyQAAAAAAAABAAAAZA",
							"AgAAAAAAAAABAAAAUzkAAAAAAABTOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB4JAAAAAAAAHgkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4786,
							2,
							"left_delete",
							null,
							"AgAAAHMkAAAAAAAAcyQAAAAAAAAEAAAAICAgIG8kAAAAAAAAbyQAAAAAAAAEAAAAICAgIA",
							"AgAAAAAAAAABAAAAUjkAAAAAAABSOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB3JAAAAAAAAHckAAAAAAAAAAAAAAAA8L8"
						],
						[
							4787,
							1,
							"insert",
							{
								"characters": "\t\t"
							},
							"AgAAAG8kAAAAAAAAcyQAAAAAAAAAAAAAcyQAAAAAAAB3JAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASjkAAAAAAABKOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABvJAAAAAAAAG8kAAAAAAAAAAAAAAAA8L8"
						],
						[
							4798,
							1,
							"left_delete",
							null,
							"AgAAAGkkAAAAAAAAaSQAAAAAAAABAAAAKWokAAAAAAAAaiQAAAAAAAAMAAAAICAgICAgICAgICAg",
							"AgAAAAAAAAABAAAAUjkAAAAAAABSOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABqJAAAAAAAAGokAAAAAAAA////////738"
						],
						[
							4802,
							1,
							"insert",
							{
								"characters": ")"
							},
							"AQAAAGkkAAAAAAAAaiQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAARTkAAAAAAABFOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABpJAAAAAAAAGkkAAAAAAAA////////738"
						],
						[
							4804,
							1,
							"reindent",
							null,
							"AQAAAGskAAAAAAAAdyQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAARjkAAAAAAABGOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABrJAAAAAAAAGskAAAAAAAAAAAAAABAekA"
						],
						[
							4805,
							1,
							"insert",
							{
								"characters": "d"
							},
							"AQAAAHckAAAAAAAAeCQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAUjkAAAAAAABSOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB3JAAAAAAAAHckAAAAAAAAAAAAAAAA8L8"
						],
						[
							4806,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAHgkAAAAAAAAeiQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAUzkAAAAAAABTOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB4JAAAAAAAAHgkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4807,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAAHkkAAAAAAAAeyQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAVTkAAAAAAABVOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB5JAAAAAAAAHkkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4808,
							1,
							"insert",
							{
								"characters": "l"
							},
							"AQAAAHokAAAAAAAAeyQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAVzkAAAAAAABXOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB6JAAAAAAAAHokAAAAAAAAAAAAAAAA8L8"
						],
						[
							4810,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAHwkAAAAAAAAfSQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAWDkAAAAAAABYOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB8JAAAAAAAAHwkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4811,
							1,
							"left_delete",
							null,
							"AQAAAHwkAAAAAAAAfCQAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAWTkAAAAAAABZOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB9JAAAAAAAAH0kAAAAAAAAAAAAAAAA8L8"
						],
						[
							4813,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAH0kAAAAAAAAfiQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAWDkAAAAAAABYOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB9JAAAAAAAAH0kAAAAAAAAAAAAAAAA8L8"
						],
						[
							4814,
							1,
							"insert",
							{
								"characters": "="
							},
							"AQAAAH4kAAAAAAAAfyQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAWTkAAAAAAABZOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB+JAAAAAAAAH4kAAAAAAAAAAAAAAAA8L8"
						],
						[
							4815,
							1,
							"insert",
							{
								"characters": " d"
							},
							"AgAAAH8kAAAAAAAAgCQAAAAAAAAAAAAAgCQAAAAAAACBJAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAWjkAAAAAAABaOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/JAAAAAAAAH8kAAAAAAAAAAAAAAAA8L8"
						],
						[
							4816,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAIEkAAAAAAAAgyQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAXDkAAAAAAABcOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACBJAAAAAAAAIEkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4817,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAAIIkAAAAAAAAhCQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAXjkAAAAAAABeOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACCJAAAAAAAAIIkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4818,
							1,
							"insert",
							{
								"characters": "r"
							},
							"AQAAAIMkAAAAAAAAhCQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAYDkAAAAAAABgOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACDJAAAAAAAAIMkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4820,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAIYkAAAAAAAAiCQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAYTkAAAAAAABhOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACGJAAAAAAAAIYkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4821,
							1,
							"insert",
							{
								"characters": "0"
							},
							"AQAAAIckAAAAAAAAiCQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAYzkAAAAAAABjOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACHJAAAAAAAAIckAAAAAAAAAAAAAAAA8L8"
						],
						[
							4825,
							1,
							"insert",
							{
								"characters": "np.st"
							},
							"BQAAAIAkAAAAAAAAgSQAAAAAAAAAAAAAgSQAAAAAAACCJAAAAAAAAAAAAACCJAAAAAAAAIMkAAAAAAAAAAAAAIMkAAAAAAAAhCQAAAAAAAAAAAAAhCQAAAAAAACFJAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAZDkAAAAAAABkOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACAJAAAAAAAAIAkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4826,
							1,
							"left_delete",
							null,
							"AQAAAIQkAAAAAAAAhCQAAAAAAAABAAAAdA",
							"AgAAAAAAAAABAAAAaTkAAAAAAABpOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACFJAAAAAAAAIUkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4827,
							1,
							"insert",
							{
								"characters": "tack"
							},
							"BAAAAIQkAAAAAAAAhSQAAAAAAAAAAAAAhSQAAAAAAACGJAAAAAAAAAAAAACGJAAAAAAAAIckAAAAAAAAAAAAAIckAAAAAAAAiCQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAaDkAAAAAAABoOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACEJAAAAAAAAIQkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4831,
							1,
							"insert_snippet",
							{
								"contents": "(${0:$SELECTION})"
							},
							"AgAAAIgkAAAAAAAAiCQAAAAAAAAJAAAAZFsiciJdWzBdiCQAAAAAAACTJAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAbDkAAAAAAABsOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACIJAAAAAAAAJEkAAAAAAAA////////738"
						],
						[
							4837,
							1,
							"insert",
							{
								"characters": "v"
							},
							"AQAAAIMkAAAAAAAAhCQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAbjkAAAAAAABuOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACDJAAAAAAAAIMkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4840,
							1,
							"insert",
							{
								"characters": ","
							},
							"AQAAAJMkAAAAAAAAlCQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAbzkAAAAAAABvOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACTJAAAAAAAAJMkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4841,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAJQkAAAAAAAAlSQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAcDkAAAAAAABwOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUJAAAAAAAAJQkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4850,
							1,
							"insert",
							{
								"characters": "d"
							},
							"AQAAAJUkAAAAAAAAliQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAcTkAAAAAAABxOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACVJAAAAAAAAJUkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4851,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAJYkAAAAAAAAmCQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAcjkAAAAAAAByOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACWJAAAAAAAAJYkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4852,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAAJckAAAAAAAAmSQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAdDkAAAAAAAB0OQAAAAAAAAAAAAAAAPC/AQAAAAEAAACXJAAAAAAAAJckAAAAAAAAAAAAAAAA8L8"
						],
						[
							4853,
							1,
							"insert",
							{
								"characters": "l"
							},
							"AQAAAJgkAAAAAAAAmSQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAdjkAAAAAAAB2OQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYJAAAAAAAAJgkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4857,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAHckAAAAAAAAeSQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAdzkAAAAAAAB3OQAAAAAAAAAAAAAAAPC/AQAAAAEAAACcJAAAAAAAAJwkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4859,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAEwkAAAAAAAATiQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAeTkAAAAAAAB5OQAAAAAAAAAAAAAAAPC/AQAAAAEAAABqJAAAAAAAAGokAAAAAAAAAAAAAADgf0A"
						],
						[
							4861,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAC8kAAAAAAAAMSQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAezkAAAAAAAB7OQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA/JAAAAAAAAD8kAAAAAAAAAAAAAACAe0A"
						],
						[
							4863,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAPkjAAAAAAAA+yMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAfTkAAAAAAAB9OQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAPJAAAAAAAAA8kAAAAAAAAAAAAAADAckA"
						],
						[
							4960,
							1,
							"insert",
							{
								"characters": ":"
							},
							"CAAAAL4iAAAAAAAAvyIAAAAAAAAAAAAAvyIAAAAAAAC/IgAAAAAAAB0AAABhbmQgYWJzKHZfbG9jIC0gaV9tYXhoKSA+MC41OqAhAAAAAAAAoSEAAAAAAAAAAAAAoSEAAAAAAAChIQAAAAAAAB0AAABhbmQgYWJzKHZfbG9jIC0gaV9tYXhoKSA+MC41OoIgAAAAAAAAgyAAAAAAAAAAAAAAgyAAAAAAAACDIAAAAAAAAB0AAABhbmQgYWJzKHZfbG9jIC0gaV9tYXhoKSA+MC41OmsfAAAAAAAAbB8AAAAAAAAAAAAAbB8AAAAAAABsHwAAAAAAAB0AAABhbmQgYWJzKHZfbG9jIC0gaV9tYXhoKSA+MC41Og",
							"AgAAAAAAAAABAAAAfzkAAAAAAAB/OQAAAAAAAAAAAAAAAPC/AQAAAAQAAABrHwAAAAAAAIgfAAAAAAAA////////73+CIAAAAAAAAJ8gAAAAAAAA////////73+gIQAAAAAAAL0hAAAAAAAA////////73++IgAAAAAAANsiAAAAAAAA////////738"
						],
						[
							4961,
							2,
							"left_delete",
							null,
							"CAAAAGoiAAAAAAAAaiIAAAAAAAABAAAAOmghAAAAAAAAaCEAAAAAAAABAAAAOmYgAAAAAAAAZiAAAAAAAAABAAAAOmsfAAAAAAAAax8AAAAAAAABAAAAOmYiAAAAAAAAZiIAAAAAAAABAAAAIGUhAAAAAAAAZSEAAAAAAAABAAAAIGQgAAAAAAAAZCAAAAAAAAABAAAAIGofAAAAAAAAah8AAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAADzkAAAAAAAAPOQAAAAAAAAAAAAAAAPC/AQAAAAQAAABsHwAAAAAAAGwfAAAAAAAAAAAAAAAA8L9nIAAAAAAAAGcgAAAAAAAAAAAAAAAA8L9pIQAAAAAAAGkhAAAAAAAAAAAAAAAA8L9rIgAAAAAAAGsiAAAAAAAAAAAAAAAA8L8"
						],
						[
							4962,
							1,
							"insert",
							{
								"characters": ":"
							},
							"BAAAAGMiAAAAAAAAZCIAAAAAAAAAAAAAYyEAAAAAAABkIQAAAAAAAAAAAABjIAAAAAAAAGQgAAAAAAAAAAAAAGofAAAAAAAAax8AAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAABzkAAAAAAAAHOQAAAAAAAAAAAAAAAPC/AQAAAAQAAABqHwAAAAAAAGofAAAAAAAAAAAAAAAA8L9jIAAAAAAAAGMgAAAAAAAAAAAAAAAA8L9jIQAAAAAAAGMhAAAAAAAAAAAAAAAA8L9jIgAAAAAAAGMiAAAAAAAAAAAAAAAA8L8"
						],
						[
							4977,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"CAAAAMEiAAAAAAAAwiIAAAAAAAAAAAAAwiIAAAAAAADaIgAAAAAAAAAAAADAIQAAAAAAAMEhAAAAAAAAAAAAAMEhAAAAAAAA2SEAAAAAAAAAAAAAviAAAAAAAAC/IAAAAAAAAAAAAAC/IAAAAAAAANcgAAAAAAAAAAAAAMQfAAAAAAAAxR8AAAAAAAAAAAAAxR8AAAAAAADdHwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAACzkAAAAAAAALOQAAAAAAAAAAAAAAAPC/AQAAAAQAAADEHwAAAAAAAMQfAAAAAAAAAAAAAAAA8L++IAAAAAAAAL4gAAAAAAAAAAAAAAAA8L/AIQAAAAAAAMAhAAAAAAAAAAAAAAAA8L/BIgAAAAAAAMEiAAAAAAAAAAAAAAAA8L8"
						],
						[
							4978,
							1,
							"left_delete",
							null,
							"BAAAACEjAAAAAAAAISMAAAAAAAAEAAAAICAgIAciAAAAAAAAByIAAAAAAAAEAAAAICAgIOwgAAAAAAAA7CAAAAAAAAAEAAAAICAgINkfAAAAAAAA2R8AAAAAAAAEAAAAICAgIA",
							"AgAAAAAAAAABAAAAbzkAAAAAAABvOQAAAAAAAAAAAAAAAPC/AQAAAAQAAADdHwAAAAAAAN0fAAAAAAAAAAAAAAAA8L/wIAAAAAAAAPAgAAAAAAAAAAAAAAAA8L8LIgAAAAAAAAsiAAAAAAAAAAAAAAAA8L8lIwAAAAAAACUjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4979,
							1,
							"left_delete",
							null,
							"BAAAABEjAAAAAAAAESMAAAAAAAAEAAAAICAgIPshAAAAAAAA+yEAAAAAAAAEAAAAICAgIOQgAAAAAAAA5CAAAAAAAAAEAAAAICAgINUfAAAAAAAA1R8AAAAAAAAEAAAAICAgIA",
							"AgAAAAAAAAABAAAAXzkAAAAAAABfOQAAAAAAAAAAAAAAAPC/AQAAAAQAAADZHwAAAAAAANkfAAAAAAAAAAAAAAAA8L/oIAAAAAAAAOggAAAAAAAAAAAAAAAA8L//IQAAAAAAAP8hAAAAAAAAAAAAAAAA8L8VIwAAAAAAABUjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4980,
							1,
							"left_delete",
							null,
							"BAAAAAEjAAAAAAAAASMAAAAAAAAEAAAAICAgIO8hAAAAAAAA7yEAAAAAAAAEAAAAICAgINwgAAAAAAAA3CAAAAAAAAAEAAAAICAgINEfAAAAAAAA0R8AAAAAAAAEAAAAICAgIA",
							"AgAAAAAAAAABAAAATzkAAAAAAABPOQAAAAAAAAAAAAAAAPC/AQAAAAQAAADVHwAAAAAAANUfAAAAAAAAAAAAAAAA8L/gIAAAAAAAAOAgAAAAAAAAAAAAAAAA8L/zIQAAAAAAAPMhAAAAAAAAAAAAAAAA8L8FIwAAAAAAAAUjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4981,
							1,
							"insert",
							{
								"characters": "else:"
							},
							"FAAAAPUiAAAAAAAA9iIAAAAAAAAAAAAA5yEAAAAAAADoIQAAAAAAAAAAAADYIAAAAAAAANkgAAAAAAAAAAAAANEfAAAAAAAA0h8AAAAAAAAAAAAA+SIAAAAAAAD6IgAAAAAAAAAAAADqIQAAAAAAAOshAAAAAAAAAAAAANogAAAAAAAA2yAAAAAAAAAAAAAA0h8AAAAAAADTHwAAAAAAAAAAAAD9IgAAAAAAAP4iAAAAAAAAAAAAAO0hAAAAAAAA7iEAAAAAAAAAAAAA3CAAAAAAAADdIAAAAAAAAAAAAADTHwAAAAAAANQfAAAAAAAAAAAAAAEjAAAAAAAAAiMAAAAAAAAAAAAA8CEAAAAAAADxIQAAAAAAAAAAAADeIAAAAAAAAN8gAAAAAAAAAAAAANQfAAAAAAAA1R8AAAAAAAAAAAAABSMAAAAAAAAGIwAAAAAAAAAAAADzIQAAAAAAAPQhAAAAAAAAAAAAAOAgAAAAAAAA4SAAAAAAAAAAAAAA1R8AAAAAAADWHwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAPzkAAAAAAAA/OQAAAAAAAAAAAAAAAPC/AQAAAAQAAADRHwAAAAAAANEfAAAAAAAAAAAAAAAA8L/YIAAAAAAAANggAAAAAAAAAAAAAAAA8L/nIQAAAAAAAOchAAAAAAAAAAAAAAAA8L/1IgAAAAAAAPUiAAAAAAAAAAAAAAAA8L8"
						],
						[
							4982,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"DAAAAAkjAAAAAAAACiMAAAAAAAAAAAAACiMAAAAAAAAWIwAAAAAAAAAAAAAWIwAAAAAAABojAAAAAAAAAAAAAPYhAAAAAAAA9yEAAAAAAAAAAAAA9yEAAAAAAAADIgAAAAAAAAAAAAADIgAAAAAAAAciAAAAAAAAAAAAAOIgAAAAAAAA4yAAAAAAAAAAAAAA4yAAAAAAAADvIAAAAAAAAAAAAADvIAAAAAAAAPMgAAAAAAAAAAAAANYfAAAAAAAA1x8AAAAAAAAAAAAA1x8AAAAAAADjHwAAAAAAAAAAAADjHwAAAAAAAOcfAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAUzkAAAAAAABTOQAAAAAAAAAAAAAAAPC/AQAAAAQAAADWHwAAAAAAANYfAAAAAAAAAAAAAAAA8L/iIAAAAAAAAOIgAAAAAAAAAAAAAAAA8L/2IQAAAAAAAPYhAAAAAAAAAAAAAAAA8L8JIwAAAAAAAAkjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4991,
							1,
							"paste",
							null,
							"BAAAAE0jAAAAAAAAcCMAAAAAAAAAAAAAKSIAAAAAAABMIgAAAAAAAAAAAAAEIQAAAAAAACYhAAAAAAAAAAAAAOcfAAAAAAAACSAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAlzkAAAAAAACXOQAAAAAAAAAAAAAAAPC/AQAAAAQAAADnHwAAAAAAAOcfAAAAAAAAAAAAAAAgckAEIQAAAAAAAAQhAAAAAAAAAAAAAAAgckApIgAAAAAAACkiAAAAAAAAAAAAAAAgckBNIwAAAAAAAE0jAAAAAAAAAAAAAAAgckA"
						],
						[
							4996,
							1,
							"insert",
							{
								"characters": "0"
							},
							"CAAAAMsjAAAAAAAAzCMAAAAAAAAAAAAAzCMAAAAAAADMIwAAAAAAAAoAAABhYnModl9sb2MphCIAAAAAAACFIgAAAAAAAAAAAACFIgAAAAAAAIUiAAAAAAAACgAAAGFicyh2X2xvYyk8IQAAAAAAAD0hAAAAAAAAAAAAAD0hAAAAAAAAPSEAAAAAAAAKAAAAYWJzKHZfbG9jKf0fAAAAAAAA/h8AAAAAAAAAAAAA/h8AAAAAAAD+HwAAAAAAAAoAAABhYnModl9sb2Mp",
							"AgAAAAAAAAABAAAAIToAAAAAAAAhOgAAAAAAAAAAAAAAAPC/AQAAAAQAAAAHIAAAAAAAAP0fAAAAAAAAAAAAAAAA8L9GIQAAAAAAADwhAAAAAAAAAAAAAAAA8L+OIgAAAAAAAIQiAAAAAAAAAAAAAAAA8L/VIwAAAAAAAMsjAAAAAAAAAAAAAAAA8L8"
						],
						[
							5072,
							2,
							"left_delete",
							null,
							"AgAAAMUfAAAAAAAAxR8AAAAAAAA7AAAAICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIGRbInIiXS5hcHBlbmQoW3lfdmFsLCAwXSnEHwAAAAAAAMQfAAAAAAAAAQAAAAo",
							"AgAAAAAAAAABAAAA/TkAAAAAAAD9OQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAIAAAAAAAAMUfAAAAAAAAAAAAAAAA8L8"
						],
						[
							5073,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAAMQfAAAAAAAAxR8AAAAAAAAAAAAAxR8AAAAAAADdHwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAwTkAAAAAAADBOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADEHwAAAAAAAMQfAAAAAAAAAAAAAAAA8L8"
						],
						[
							5074,
							7,
							"left_delete",
							null,
							"BwAAANkfAAAAAAAA2R8AAAAAAAAEAAAAICAgINUfAAAAAAAA1R8AAAAAAAAEAAAAICAgINEfAAAAAAAA0R8AAAAAAAAEAAAAICAgIM0fAAAAAAAAzR8AAAAAAAAEAAAAICAgIMkfAAAAAAAAyR8AAAAAAAAEAAAAICAgIMUfAAAAAAAAxR8AAAAAAAAEAAAAICAgIMQfAAAAAAAAxB8AAAAAAAABAAAACg",
							"AgAAAAAAAAABAAAA2jkAAAAAAADaOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADdHwAAAAAAAN0fAAAAAAAAAAAAAAAA8L8"
						],
						[
							5085,
							1,
							"run_macro_file",
							{
								"file": "res://Packages/Default/Delete Line.sublime-macro"
							},
							"BAAAAA8iAAAAAAAADyIAAAAAAAArAAAAICAgICAgICAgICAgICAgIGRbImwiXS5hcHBlbmQoW3lfdmFsLCAgMF0pCv0hAAAAAAAA/SEAAAAAAAASAAAAICAgICAgICAgICAgZWxzZToK0SAAAAAAAADRIAAAAAAAACoAAAAgICAgICAgICAgICAgICAgZFsiciJdLmFwcGVuZChbeV92YWwsIDBdKQq/IAAAAAAAAL8gAAAAAAAAEgAAACAgICAgICAgICAgIGVsc2U6Cg",
							"AgAAAAAAAAABAAAAwTkAAAAAAADBOQAAAAAAAAAAAAAAAPC/AQAAAAQAAADLIAAAAAAAAM8gAAAAAAAAAAAAAAAA8L/hIAAAAAAAAOEgAAAAAAAAAAAAAAAA8L8JIgAAAAAAAA0iAAAAAAAAAAAAAAAA8L8fIgAAAAAAAB8iAAAAAAAAAAAAAAAA8L8"
						],
						[
							5091,
							1,
							"run_macro_file",
							{
								"file": "res://Packages/Default/Delete Line.sublime-macro"
							},
							"AQAAAL8gAAAAAAAAvyAAAAAAAAABAAAACg",
							"AgAAAAAAAAABAAAASDkAAAAAAABIOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAC/IAAAAAAAAL8gAAAAAAAAAAAAAAAA8L8"
						],
						[
							5094,
							2,
							"left_delete",
							null,
							"AgAAAMEiAAAAAAAAwSIAAAAAAAARAAAAICAgICAgICAgICAgZWxzZTrAIgAAAAAAAMAiAAAAAAAAAQAAAAo",
							"AgAAAAAAAAABAAAARzkAAAAAAABHOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADSIgAAAAAAAMEiAAAAAAAAAAAAAAAA8L8"
						],
						[
							5103,
							1,
							"unindent",
							null,
							"AQAAAMEiAAAAAAAAwSIAAAAAAAAEAAAAICAgIA",
							"AgAAAAAAAAABAAAANTkAAAAAAAA1OQAAAAAAAAAAAAAAAPC/AQAAAAEAAADRIgAAAAAAANEiAAAAAAAAAAAAAAAA8L8"
						],
						[
							5104,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAAM0iAAAAAAAAziIAAAAAAAAAAAAAziIAAAAAAADaIgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAMTkAAAAAAAAxOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADNIgAAAAAAAM0iAAAAAAAAAAAAAAAA8L8"
						],
						[
							5108,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAAM0iAAAAAAAAziIAAAAAAAAAAAAAziIAAAAAAADaIgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAPjkAAAAAAAA+OQAAAAAAAAAAAAAAAPC/AQAAAAEAAADNIgAAAAAAAM0iAAAAAAAAAAAAAAAAXkA"
						],
						[
							5109,
							4,
							"left_delete",
							null,
							"BAAAANYiAAAAAAAA1iIAAAAAAAAEAAAAICAgINIiAAAAAAAA0iIAAAAAAAAEAAAAICAgIM4iAAAAAAAAziIAAAAAAAAEAAAAICAgIM0iAAAAAAAAzSIAAAAAAAABAAAACg",
							"AgAAAAAAAAABAAAASzkAAAAAAABLOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADaIgAAAAAAANoiAAAAAAAAAAAAAAAA8L8"
						],
						[
							5110,
							1,
							"insert",
							{
								"characters": "if"
							},
							"AgAAAM0iAAAAAAAAziIAAAAAAAAAAAAAziIAAAAAAADPIgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAPjkAAAAAAAA+OQAAAAAAAAAAAAAAAPC/AQAAAAEAAADNIgAAAAAAAM0iAAAAAAAAAAAAAAAA8L8"
						],
						[
							5111,
							1,
							"insert",
							{
								"characters": " d"
							},
							"AgAAAM8iAAAAAAAA0CIAAAAAAAAAAAAA0CIAAAAAAADRIgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAQDkAAAAAAABAOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADPIgAAAAAAAM8iAAAAAAAAAAAAAAAA8L8"
						],
						[
							5112,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAANEiAAAAAAAA0yIAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAQjkAAAAAAABCOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADRIgAAAAAAANEiAAAAAAAAAAAAAAAA8L8"
						],
						[
							5113,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAANIiAAAAAAAA1CIAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAARDkAAAAAAABEOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADSIgAAAAAAANIiAAAAAAAAAAAAAAAA8L8"
						],
						[
							5114,
							1,
							"insert",
							{
								"characters": "l"
							},
							"AQAAANMiAAAAAAAA1CIAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAARjkAAAAAAABGOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADTIgAAAAAAANMiAAAAAAAAAAAAAAAA8L8"
						],
						[
							5116,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAANYiAAAAAAAA2CIAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAARzkAAAAAAABHOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADWIgAAAAAAANYiAAAAAAAAAAAAAAAA8L8"
						],
						[
							5117,
							1,
							"insert",
							{
								"characters": "-1"
							},
							"AgAAANciAAAAAAAA2CIAAAAAAAAAAAAA2CIAAAAAAADZIgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASTkAAAAAAABJOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADXIgAAAAAAANciAAAAAAAAAAAAAAAA8L8"
						],
						[
							5122,
							1,
							"insert",
							{
								"characters": "not"
							},
							"AwAAANAiAAAAAAAA0SIAAAAAAAAAAAAA0SIAAAAAAADSIgAAAAAAAAAAAADSIgAAAAAAANMiAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASzkAAAAAAABLOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADQIgAAAAAAANAiAAAAAAAAAAAAAAAA8L8"
						],
						[
							5123,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAANMiAAAAAAAA1CIAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAATjkAAAAAAABOOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADTIgAAAAAAANMiAAAAAAAAAAAAAAAA8L8"
						],
						[
							5127,
							1,
							"insert",
							{
								"characters": "0"
							},
							"AgAAANsiAAAAAAAA3CIAAAAAAAAAAAAA3CIAAAAAAADcIgAAAAAAAAIAAAAtMQ",
							"AgAAAAAAAAABAAAATzkAAAAAAABPOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADdIgAAAAAAANsiAAAAAAAAAAAAAAAA8L8"
						],
						[
							5129,
							1,
							"insert",
							{
								"characters": " =="
							},
							"AwAAAN0iAAAAAAAA3iIAAAAAAAAAAAAA3iIAAAAAAADfIgAAAAAAAAAAAADfIgAAAAAAAOAiAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAATjkAAAAAAABOOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADdIgAAAAAAAN0iAAAAAAAAAAAAAAAA8L8"
						],
						[
							5130,
							1,
							"insert",
							{
								"characters": " y"
							},
							"AgAAAOAiAAAAAAAA4SIAAAAAAAAAAAAA4SIAAAAAAADiIgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAUTkAAAAAAABROQAAAAAAAAAAAAAAAPC/AQAAAAEAAADgIgAAAAAAAOAiAAAAAAAAAAAAAAAA8L8"
						],
						[
							5134,
							1,
							"insert_completion",
							{
								"completion": "y_val",
								"format": "snippet",
								"keep_prefix": false,
								"must_insert": false,
								"trigger": "y_val"
							},
							"AgAAAOEiAAAAAAAA4SIAAAAAAAABAAAAeeEiAAAAAAAA5iIAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAUzkAAAAAAABTOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADiIgAAAAAAAOIiAAAAAAAAAAAAAAAA8L8"
						],
						[
							5136,
							1,
							"indent",
							null,
							"AQAAAOciAAAAAAAA6yIAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAVzkAAAAAAABXOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAMIwAAAAAAAAwjAAAAAAAAAAAAAAAgd0A"
						],
						[
							5143,
							1,
							"duplicate_lines",
							null,
							"AQAAAMEiAAAAAAAAEiMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAWzkAAAAAAABbOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADNIgAAAAAAABEjAAAAAAAA////////738"
						],
						[
							5144,
							12,
							"swap_line_up",
							null,
							"GAAAABIjAAAAAAAAEiMAAAAAAABRAAAAICAgICAgICAgICAgaWYgbm90IGRbImwiXVswXSA9PSB5X3ZhbAogICAgICAgICAgICAgICAgZFsibCJdLmFwcGVuZChbeV92YWwsICAwXSkK5yIAAAAAAAA4IwAAAAAAAAAAAADnIgAAAAAAAOciAAAAAAAAUQAAACAgICAgICAgICAgIGlmIG5vdCBkWyJsIl1bMF0gPT0geV92YWwKICAgICAgICAgICAgICAgIGRbImwiXS5hcHBlbmQoW3lfdmFsLCAgMF0pCsEiAAAAAAAAEiMAAAAAAAAAAAAAwSIAAAAAAADBIgAAAAAAAFEAAAAgICAgICAgICAgICBpZiBub3QgZFsibCJdWzBdID09IHlfdmFsCiAgICAgICAgICAgICAgICBkWyJsIl0uYXBwZW5kKFt5X3ZhbCwgIDBdKQqjIgAAAAAAAPQiAAAAAAAAAAAAAKMiAAAAAAAAoyIAAAAAAABRAAAAICAgICAgICAgICAgaWYgbm90IGRbImwiXVswXSA9PSB5X3ZhbAogICAgICAgICAgICAgICAgZFsibCJdLmFwcGVuZChbeV92YWwsICAwXSkKZyIAAAAAAAC4IgAAAAAAAAAAAABnIgAAAAAAAGciAAAAAAAAUQAAACAgICAgICAgICAgIGlmIG5vdCBkWyJsIl1bMF0gPT0geV92YWwKICAgICAgICAgICAgICAgIGRbImwiXS5hcHBlbmQoW3lfdmFsLCAgMF0pCkAiAAAAAAAAkSIAAAAAAAAAAAAAQCIAAAAAAABAIgAAAAAAAFEAAAAgICAgICAgICAgICBpZiBub3QgZFsibCJdWzBdID09IHlfdmFsCiAgICAgICAgICAgICAgICBkWyJsIl0uYXBwZW5kKFt5X3ZhbCwgIDBdKQoIIgAAAAAAAFkiAAAAAAAAAAAAAAgiAAAAAAAACCIAAAAAAABRAAAAICAgICAgICAgICAgaWYgbm90IGRbImwiXVswXSA9PSB5X3ZhbAogICAgICAgICAgICAgICAgZFsibCJdLmFwcGVuZChbeV92YWwsICAwXSkKwCEAAAAAAAARIgAAAAAAAAAAAADAIQAAAAAAAMAhAAAAAAAAUQAAACAgICAgICAgICAgIGlmIG5vdCBkWyJsIl1bMF0gPT0geV92YWwKICAgICAgICAgICAgICAgIGRbImwiXS5hcHBlbmQoW3lfdmFsLCAgMF0pCqIhAAAAAAAA8yEAAAAAAAAAAAAAoiEAAAAAAACiIQAAAAAAAFEAAAAgICAgICAgICAgICBpZiBub3QgZFsibCJdWzBdID09IHlfdmFsCiAgICAgICAgICAgICAgICBkWyJsIl0uYXBwZW5kKFt5X3ZhbCwgIDBdKQpmIQAAAAAAALchAAAAAAAAAAAAAGYhAAAAAAAAZiEAAAAAAABRAAAAICAgICAgICAgICAgaWYgbm90IGRbImwiXVswXSA9PSB5X3ZhbAogICAgICAgICAgICAgICAgZFsibCJdLmFwcGVuZChbeV92YWwsICAwXSkKPyEAAAAAAACQIQAAAAAAAAAAAAA/IQAAAAAAAD8hAAAAAAAAUQAAACAgICAgICAgICAgIGlmIG5vdCBkWyJsIl1bMF0gPT0geV92YWwKICAgICAgICAgICAgICAgIGRbImwiXS5hcHBlbmQoW3lfdmFsLCAgMF0pCgchAAAAAAAAWCEAAAAAAAAAAAAAByEAAAAAAAAHIQAAAAAAAFEAAAAgICAgICAgICAgICBpZiBub3QgZFsibCJdWzBdID09IHlfdmFsCiAgICAgICAgICAgICAgICBkWyJsIl0uYXBwZW5kKFt5X3ZhbCwgIDBdKQq/IAAAAAAAABAhAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAArDkAAAAAAACsOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAeIwAAAAAAAGIjAAAAAAAAAAAAAAAA8L8"
						],
						[
							5166,
							1,
							"insert",
							{
								"characters": "r"
							},
							"BAAAAPggAAAAAAAA+SAAAAAAAAAAAAAA+SAAAAAAAAD5IAAAAAAAAAEAAABs1SAAAAAAAADWIAAAAAAAAAAAAADWIAAAAAAAANYgAAAAAAAAAQAAAGw",
							"AgAAAAAAAAABAAAArDkAAAAAAACsOQAAAAAAAAAAAAAAAPC/AQAAAAIAAADVIAAAAAAAANYgAAAAAAAAAAAAAAAA8L/4IAAAAAAAAPkgAAAAAAAAAAAAAAAA8L8"
						],
						[
							5172,
							1,
							"insert",
							{
								"characters": ":"
							},
							"AgAAADcjAAAAAAAAOCMAAAAAAAAAAAAA5CAAAAAAAADlIAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAArDkAAAAAAACsOQAAAAAAAAAAAAAAAPC/AQAAAAIAAADkIAAAAAAAAOQgAAAAAAAAAAAAAAAA8L83IwAAAAAAADcjAAAAAAAAAAAAAAAA8L8"
						],
						[
							5180,
							1,
							"insert",
							{
								"characters": "-1"
							},
							"BgAAAC0jAAAAAAAALiMAAAAAAAAAAAAALiMAAAAAAAAuIwAAAAAAAAEAAAAw2SAAAAAAAADaIAAAAAAAAAAAAADaIAAAAAAAANogAAAAAAAAAQAAADAuIwAAAAAAAC8jAAAAAAAAAAAAANogAAAAAAAA2yAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAArjkAAAAAAACuOQAAAAAAAAAAAAAAAPC/AQAAAAIAAADaIAAAAAAAANkgAAAAAAAAAAAAAAAA8L8uIwAAAAAAAC0jAAAAAAAAAAAAAAAA8L8"
						],
						[
							5182,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AgAAANwgAAAAAAAA3iAAAAAAAAAAAAAAMyMAAAAAAAA1IwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAsDkAAAAAAACwOQAAAAAAAAAAAAAAAPC/AQAAAAIAAADcIAAAAAAAANwgAAAAAAAAAAAAAAAA8L8xIwAAAAAAADEjAAAAAAAAAAAAAAAA8L8"
						],
						[
							5183,
							1,
							"insert",
							{
								"characters": "0"
							},
							"AgAAADQjAAAAAAAANSMAAAAAAAAAAAAA3SAAAAAAAADeIAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAtDkAAAAAAAC0OQAAAAAAAAAAAAAAAPC/AQAAAAIAAADdIAAAAAAAAN0gAAAAAAAAAAAAAAAA8L80IwAAAAAAADQjAAAAAAAAAAAAAAAA8L8"
						],
						[
							5201,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AwAAAMoeAAAAAAAAyx4AAAAAAAAAAAAAyx4AAAAAAADTHgAAAAAAAAAAAADTHgAAAAAAANceAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAtjkAAAAAAAC2OQAAAAAAAAAAAAAAAPC/AQAAAAEAAADKHgAAAAAAAMoeAAAAAAAAAAAAAAAA8L8"
						],
						[
							5202,
							1,
							"paste",
							null,
							"AQAAANceAAAAAAAAHx8AAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAwzkAAAAAAADDOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADXHgAAAAAAANceAAAAAAAAAAAAAAAA8L8"
						],
						[
							5203,
							1,
							"unindent",
							null,
							"AQAAAPseAAAAAAAA+x4AAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAACzoAAAAAAAALOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAfHwAAAAAAAB8fAAAAAAAAAAAAAAAA8L8"
						],
						[
							5204,
							3,
							"indent",
							null,
							"AwAAAPseAAAAAAAA/x4AAAAAAAAAAAAA+x4AAAAAAAD/HgAAAAAAAAAAAAD7HgAAAAAAAP8eAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAACjoAAAAAAAAKOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAeHwAAAAAAAB4fAAAAAAAAAAAAAAAA8L8"
						],
						[
							5207,
							1,
							"left_delete",
							null,
							"AQAAANceAAAAAAAA1x4AAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAFjoAAAAAAAAWOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADYHgAAAAAAANgeAAAAAAAAAAAAAABAYEA"
						],
						[
							5225,
							3,
							"left_delete",
							null,
							"BgAAAB0fAAAAAAAAHR8AAAAAAAAKAAAAYWJzKHZfbG9jKe0eAAAAAAAA7R4AAAAAAAAKAAAAYWJzKHZfbG9jKRIfAAAAAAAAEh8AAAAAAAABAAAAIOweAAAAAAAA7B4AAAAAAAABAAAAIBAfAAAAAAAAEB8AAAAAAAABAAAAIOseAAAAAAAA6x4AAAAAAAABAAAALA",
							"AgAAAAAAAAABAAAAFToAAAAAAAAVOgAAAAAAAAAAAAAAAPC/AQAAAAIAAADtHgAAAAAAAPceAAAAAAAAAAAAAAAA8L8dHwAAAAAAACcfAAAAAAAAAAAAAAAA8L8"
						],
						[
							5231,
							1,
							"left_delete",
							null,
							"AQAAAA4fAAAAAAAADh8AAAAAAAABAAAALA",
							"AgAAAAAAAAABAAAA/TkAAAAAAAD9OQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAPHwAAAAAAAA8fAAAAAAAAAAAAAAAA8L8"
						],
						[
							5234,
							1,
							"insert",
							{
								"characters": ","
							},
							"AgAAAA4fAAAAAAAADx8AAAAAAAAAAAAA6x4AAAAAAADsHgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA/DkAAAAAAAD8OQAAAAAAAAAAAAAAAPC/AQAAAAIAAADrHgAAAAAAAOseAAAAAAAAAAAAAAAAdEAOHwAAAAAAAA4fAAAAAAAAAAAAAAAAdEA"
						],
						[
							5235,
							1,
							"insert",
							{
								"characters": " 00"
							},
							"BgAAABAfAAAAAAAAER8AAAAAAAAAAAAA7B4AAAAAAADtHgAAAAAAAAAAAAASHwAAAAAAABMfAAAAAAAAAAAAAO0eAAAAAAAA7h4AAAAAAAAAAAAAFB8AAAAAAAAVHwAAAAAAAAAAAADuHgAAAAAAAO8eAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA/jkAAAAAAAD+OQAAAAAAAAAAAAAAAPC/AQAAAAIAAADsHgAAAAAAAOweAAAAAAAAAAAAAAAA8L8QHwAAAAAAABAfAAAAAAAAAAAAAAAA8L8"
						],
						[
							5236,
							1,
							"left_delete",
							null,
							"AgAAABUfAAAAAAAAFR8AAAAAAAABAAAAMO4eAAAAAAAA7h4AAAAAAAABAAAAMA",
							"AgAAAAAAAAABAAAABDoAAAAAAAAEOgAAAAAAAAAAAAAAAPC/AQAAAAIAAADvHgAAAAAAAO8eAAAAAAAAAAAAAAAA8L8WHwAAAAAAABYfAAAAAAAAAAAAAAAA8L8"
						],
						[
							5251,
							1,
							"run_macro_file",
							{
								"file": "res://Packages/Default/Delete Line.sublime-macro"
							},
							"AgAAAGMjAAAAAAAAYyMAAAAAAABWAAAAICAgICAgICAgICAgaWYgbm90IGRbImwiXVstMV1bMF0gPT0geV92YWw6CiAgICAgICAgICAgICAgICBkWyJsIl0uYXBwZW5kKFt5X3ZhbCwgIDBdKQoLIQAAAAAAAAshAAAAAAAAVgAAACAgICAgICAgICAgIGlmIG5vdCBkWyJyIl1bLTFdWzBdID09IHlfdmFsOgogICAgICAgICAgICAgICAgZFsiciJdLmFwcGVuZChbeV92YWwsICAwXSkK",
							"AgAAAAAAAAABAAAAAjoAAAAAAAACOgAAAAAAAAAAAAAAAPC/AQAAAAIAAABgIQAAAAAAACMhAAAAAAAAAAAAAAAA8L+4IwAAAAAAAIcjAAAAAAAAAAAAAAAA8L8"
						],
						[
							5258,
							2,
							"left_delete",
							null,
							"CAAAANIiAAAAAAAA0iIAAAAAAAAGAAAAYXBwZW5k0SEAAAAAAADRIQAAAAAAAAYAAABhcHBlbmTRIAAAAAAAANEgAAAAAAAABgAAAGFwcGVuZNcfAAAAAAAA1x8AAAAAAAAGAAAAYXBwZW5kvyIAAAAAAAC/IgAAAAAAAAEAAAAuxCEAAAAAAADEIQAAAAAAAAEAAAAuyiAAAAAAAADKIAAAAAAAAAEAAAAu1h8AAAAAAADWHwAAAAAAAAEAAAAu",
							"AgAAAAAAAAABAAAAVjkAAAAAAABWOQAAAAAAAAAAAAAAAPC/AQAAAAQAAADXHwAAAAAAAN0fAAAAAAAAAAAAAAAA8L/RIAAAAAAAANcgAAAAAAAAAAAAAAAA8L/RIQAAAAAAANchAAAAAAAAAAAAAAAA8L/SIgAAAAAAANgiAAAAAAAAAAAAAAAA8L8"
						],
						[
							5259,
							1,
							"insert",
							{
								"characters": "[-1]"
							},
							"EAAAALwiAAAAAAAAvSIAAAAAAAAAAAAAwiEAAAAAAADDIQAAAAAAAAAAAADJIAAAAAAAAMogAAAAAAAAAAAAANYfAAAAAAAA1x8AAAAAAAAAAAAAwCIAAAAAAADBIgAAAAAAAAAAAADFIQAAAAAAAMYhAAAAAAAAAAAAAMsgAAAAAAAAzCAAAAAAAAAAAAAA1x8AAAAAAADYHwAAAAAAAAAAAADEIgAAAAAAAMUiAAAAAAAAAAAAAMghAAAAAAAAySEAAAAAAAAAAAAAzSAAAAAAAADOIAAAAAAAAAAAAADYHwAAAAAAANkfAAAAAAAAAAAAAMgiAAAAAAAAySIAAAAAAAAAAAAAyyEAAAAAAADMIQAAAAAAAAAAAADPIAAAAAAAANAgAAAAAAAAAAAAANkfAAAAAAAA2h8AAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAOjkAAAAAAAA6OQAAAAAAAAAAAAAAAPC/AQAAAAQAAADWHwAAAAAAANYfAAAAAAAAAAAAAAAA8L/JIAAAAAAAAMkgAAAAAAAAAAAAAAAA8L/CIQAAAAAAAMIhAAAAAAAAAAAAAAAA8L+8IgAAAAAAALwiAAAAAAAAAAAAAAAA8L8"
						],
						[
							5260,
							1,
							"insert",
							{
								"characters": " ="
							},
							"CAAAAMwiAAAAAAAAzSIAAAAAAAAAAAAAziEAAAAAAADPIQAAAAAAAAAAAADRIAAAAAAAANIgAAAAAAAAAAAAANofAAAAAAAA2x8AAAAAAAAAAAAA0CIAAAAAAADRIgAAAAAAAAAAAADRIQAAAAAAANIhAAAAAAAAAAAAANMgAAAAAAAA1CAAAAAAAAAAAAAA2x8AAAAAAADcHwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASjkAAAAAAABKOQAAAAAAAAAAAAAAAPC/AQAAAAQAAADaHwAAAAAAANofAAAAAAAAAAAAAAAA8L/RIAAAAAAAANEgAAAAAAAAAAAAAAAA8L/OIQAAAAAAAM4hAAAAAAAAAAAAAAAA8L/MIgAAAAAAAMwiAAAAAAAAAAAAAAAA8L8"
						],
						[
							5261,
							1,
							"insert",
							{
								"characters": " "
							},
							"BAAAANQiAAAAAAAA1SIAAAAAAAAAAAAA1CEAAAAAAADVIQAAAAAAAAAAAADVIAAAAAAAANYgAAAAAAAAAAAAANwfAAAAAAAA3R8AAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAUjkAAAAAAABSOQAAAAAAAAAAAAAAAPC/AQAAAAQAAADcHwAAAAAAANwfAAAAAAAAAAAAAAAA8L/VIAAAAAAAANUgAAAAAAAAAAAAAAAA8L/UIQAAAAAAANQhAAAAAAAAAAAAAAAA8L/UIgAAAAAAANQiAAAAAAAAAAAAAAAA8L8"
						],
						[
							5273,
							1,
							"insert",
							{
								"characters": "i_maxh"
							},
							"DgAAABMfAAAAAAAAFB8AAAAAAAAAAAAAFB8AAAAAAAAUHwAAAAAAAAEAAAAw7R4AAAAAAADuHgAAAAAAAAAAAADuHgAAAAAAAO4eAAAAAAAAAQAAADAUHwAAAAAAABUfAAAAAAAAAAAAAO4eAAAAAAAA7x4AAAAAAAAAAAAAFh8AAAAAAAAXHwAAAAAAAAAAAADvHgAAAAAAAPAeAAAAAAAAAAAAABgfAAAAAAAAGR8AAAAAAAAAAAAA8B4AAAAAAADxHgAAAAAAAAAAAAAaHwAAAAAAABsfAAAAAAAAAAAAAPEeAAAAAAAA8h4AAAAAAAAAAAAAHB8AAAAAAAAdHwAAAAAAAAAAAADyHgAAAAAAAPMeAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAVjkAAAAAAABWOQAAAAAAAAAAAAAAAPC/AQAAAAIAAADtHgAAAAAAAO4eAAAAAAAAAAAAAAAA8L8THwAAAAAAABQfAAAAAAAAAAAAAAAA8L8"
						],
						[
							5306,
							1,
							"insert",
							{
								"characters": "1024"
							},
							"BQAAANsBAAAAAAAA3AEAAAAAAAAAAAAA3AEAAAAAAADcAQAAAAAAAAMAAAA1MTLcAQAAAAAAAN0BAAAAAAAAAAAAAN0BAAAAAAAA3gEAAAAAAAAAAAAA3gEAAAAAAADfAQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAYDkAAAAAAABgOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADbAQAAAAAAAN4BAAAAAAAAAAAAAAAA8L8"
						],
						[
							5314,
							1,
							"insert",
							{
								"characters": "2**10"
							},
							"BgAAANsBAAAAAAAA3AEAAAAAAAAAAAAA3AEAAAAAAADcAQAAAAAAAAQAAAAxMDI03AEAAAAAAADdAQAAAAAAAAAAAADdAQAAAAAAAN4BAAAAAAAAAAAAAN4BAAAAAAAA3wEAAAAAAAAAAAAA3wEAAAAAAADgAQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAYTkAAAAAAABhOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADbAQAAAAAAAN8BAAAAAAAAAAAAAAAA8L8"
						],
						[
							5324,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AgAAABQlAAAAAAAAFCUAAAAAAAACAAAAIyDZJAAAAAAAANkkAAAAAAAAAgAAACMg",
							"AgAAAAAAAAABAAAAYjkAAAAAAABiOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABHJQAAAAAAANkkAAAAAAAAAAAAAAAA8L8"
						],
						[
							5328,
							1,
							"insert",
							{
								"characters": "\nprint"
							},
							"BwAAAEMlAAAAAAAARCUAAAAAAAAAAAAARCUAAAAAAABMJQAAAAAAAAAAAABMJQAAAAAAAE0lAAAAAAAAAAAAAE0lAAAAAAAATiUAAAAAAAAAAAAATiUAAAAAAABPJQAAAAAAAAAAAABPJQAAAAAAAFAlAAAAAAAAAAAAAFAlAAAAAAAAUSUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAXjkAAAAAAABeOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABDJQAAAAAAAEMlAAAAAAAAAAAAAADQgUA"
						],
						[
							5329,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAFElAAAAAAAAUyUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAbDkAAAAAAABsOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABRJQAAAAAAAFElAAAAAAAAAAAAAAAA8L8"
						],
						[
							5331,
							1,
							"insert",
							{
								"characters": "left"
							},
							"BAAAAFIlAAAAAAAAUyUAAAAAAAAAAAAAUyUAAAAAAABUJQAAAAAAAAAAAABUJQAAAAAAAFUlAAAAAAAAAAAAAFUlAAAAAAAAViUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAbjkAAAAAAABuOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABSJQAAAAAAAFIlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5333,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAFclAAAAAAAAWSUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAcjkAAAAAAAByOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABXJQAAAAAAAFclAAAAAAAAAAAAAAAA8L8"
						],
						[
							5335,
							1,
							"run_macro_file",
							{
								"file": "res://Packages/Default/Delete Left Right.sublime-macro"
							},
							"AgAAAFclAAAAAAAAVyUAAAAAAAABAAAAKFclAAAAAAAAVyUAAAAAAAABAAAAKQ",
							"AgAAAAAAAAABAAAAdDkAAAAAAAB0OQAAAAAAAAAAAAAAAPC/AQAAAAEAAABYJQAAAAAAAFglAAAAAAAAAAAAAAAA8L8"
						],
						[
							5336,
							1,
							"insert",
							{
								"characters": "print"
							},
							"BQAAAFclAAAAAAAAWCUAAAAAAAAAAAAAWCUAAAAAAABZJQAAAAAAAAAAAABZJQAAAAAAAFolAAAAAAAAAAAAAFolAAAAAAAAWyUAAAAAAAAAAAAAWyUAAAAAAABcJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAcjkAAAAAAAByOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABXJQAAAAAAAFclAAAAAAAAAAAAAAAA8L8"
						],
						[
							5337,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAFwlAAAAAAAAXiUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAdzkAAAAAAAB3OQAAAAAAAAAAAAAAAPC/AQAAAAEAAABcJQAAAAAAAFwlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5338,
							1,
							"insert",
							{
								"characters": "right"
							},
							"BQAAAF0lAAAAAAAAXiUAAAAAAAAAAAAAXiUAAAAAAABfJQAAAAAAAAAAAABfJQAAAAAAAGAlAAAAAAAAAAAAAGAlAAAAAAAAYSUAAAAAAAAAAAAAYSUAAAAAAABiJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAeTkAAAAAAAB5OQAAAAAAAAAAAAAAAPC/AQAAAAEAAABdJQAAAAAAAF0lAAAAAAAAAAAAAAAA8L8"
						],
						[
							5343,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAAFclAAAAAAAAWCUAAAAAAAAAAAAAWCUAAAAAAABgJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAfjkAAAAAAAB+OQAAAAAAAAAAAAAAAPC/AQAAAAEAAABXJQAAAAAAAFclAAAAAAAAAAAAAAAA8L8"
						],
						[
							5346,
							2,
							"swap_line_down",
							null,
							"BAAAAIMlAAAAAAAArCUAAAAAAAAAAAAARCUAAAAAAABEJQAAAAAAACkAAAAgICAgICAgIHByaW50KGxlZnQpCiAgICAgICAgcHJpbnQocmlnaHQpCpklAAAAAAAAwiUAAAAAAAAAAAAAWiUAAAAAAABaJQAAAAAAACkAAAAgICAgICAgIHByaW50KGxlZnQpCiAgICAgICAgcHJpbnQocmlnaHQpCg",
							"AgAAAAAAAAABAAAAhzkAAAAAAACHOQAAAAAAAAAAAAAAAPC/AQAAAAIAAABMJQAAAAAAAEwlAAAAAAAAAAAAAAAAVEBgJQAAAAAAAGAlAAAAAAAAAAAAAAAAVEA"
						],
						[
							5356,
							1,
							"insert",
							{
								"characters": "d"
							},
							"AgAAAColAAAAAAAAKyUAAAAAAAAAAAAA8CQAAAAAAADxJAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAhzkAAAAAAACHOQAAAAAAAAAAAAAAAPC/AQAAAAIAAADwJAAAAAAAAPAkAAAAAAAAAAAAAAAA8L8qJQAAAAAAAColAAAAAAAAAAAAAAAA8L8"
						],
						[
							5358,
							1,
							"insert_snippet",
							{
								"contents": "[${0:$SELECTION}]"
							},
							"BAAAAPEkAAAAAAAA8SQAAAAAAAABAAAAbPEkAAAAAAAA9CQAAAAAAAAAAAAALiUAAAAAAAAuJQAAAAAAAAEAAABsLiUAAAAAAAAxJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAiTkAAAAAAACJOQAAAAAAAAAAAAAAAPC/AQAAAAIAAADxJAAAAAAAAPIkAAAAAAAAAAAAAAAA8L8sJQAAAAAAAC0lAAAAAAAAAAAAAAAA8L8"
						],
						[
							5359,
							1,
							"insert_snippet",
							{
								"contents": "\"${0:$SELECTION}\""
							},
							"BAAAAPIkAAAAAAAA8iQAAAAAAAABAAAAbPIkAAAAAAAA9SQAAAAAAAAAAAAAMSUAAAAAAAAxJQAAAAAAAAEAAABsMSUAAAAAAAA0JQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAjTkAAAAAAACNOQAAAAAAAAAAAAAAAPC/AQAAAAIAAADyJAAAAAAAAPMkAAAAAAAAAAAAAAAA8L8vJQAAAAAAADAlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5365,
							1,
							"overwrite",
							{
								"characters": "r"
							},
							"AgAAADIlAAAAAAAAMyUAAAAAAAAAAAAAMyUAAAAAAAAzJQAAAAAAAAEAAABs",
							"AgAAAAAAAAABAAAAkTkAAAAAAACROQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAyJQAAAAAAADIlAAAAAAAAAAAAAADgdUA"
						],
						[
							5375,
							1,
							"left_delete",
							null,
							"AgAAAEslAAAAAAAASyUAAAAAAAABAAAAMgwlAAAAAAAADCUAAAAAAAABAAAAMg",
							"AgAAAAAAAAABAAAAkTkAAAAAAACROQAAAAAAAAAAAAAAAPC/AQAAAAIAAAANJQAAAAAAAA0lAAAAAAAAAAAAAAAA8L9MJQAAAAAAAEwlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5384,
							1,
							"alignment",
							null,
							"BAAAANkkAAAAAAAA2SQAAAAAAAAAAAAAFiUAAAAAAAAWJQAAAAAAAAAAAADeJAAAAAAAAN8kAAAAAAAAAAAAAB0lAAAAAAAAHSUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAjzkAAAAAAACPOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADZJAAAAAAAAEslAAAAAAAA////////738"
						],
						[
							5390,
							1,
							"insert",
							{
								"characters": "2"
							},
							"AgAAAEslAAAAAAAATCUAAAAAAAAAAAAADSUAAAAAAAAOJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAkDkAAAAAAACQOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAANJQAAAAAAAA0lAAAAAAAAAAAAAAAA8L9LJQAAAAAAAEslAAAAAAAAAAAAAADAgkA"
						],
						[
							5400,
							2,
							"left_delete",
							null,
							"AgAAAN8BAAAAAAAA3wEAAAAAAAABAAAAMN4BAAAAAAAA3gEAAAAAAAABAAAAMQ",
							"AgAAAAAAAAABAAAAkjkAAAAAAACSOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADgAQAAAAAAAOABAAAAAAAAAAAAAAAA8L8"
						],
						[
							5401,
							1,
							"insert",
							{
								"characters": "9"
							},
							"AQAAAN4BAAAAAAAA3wEAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAkDkAAAAAAACQOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADeAQAAAAAAAN4BAAAAAAAAAAAAAAAA8L8"
						],
						[
							5402,
							1,
							"insert",
							{
								"characters": "2"
							},
							"AQAAAN8BAAAAAAAA4AEAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAkTkAAAAAAACROQAAAAAAAAAAAAAAAPC/AQAAAAEAAADfAQAAAAAAAN8BAAAAAAAAAAAAAAAA8L8"
						],
						[
							5403,
							1,
							"left_delete",
							null,
							"AQAAAN8BAAAAAAAA3wEAAAAAAAABAAAAMg",
							"AgAAAAAAAAABAAAAkjkAAAAAAACSOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADgAQAAAAAAAOABAAAAAAAAAAAAAAAA8L8"
						],
						[
							5407,
							1,
							"left_delete",
							null,
							"AgAAAEwlAAAAAAAATCUAAAAAAAABAAAAKQ0lAAAAAAAADSUAAAAAAAABAAAAKQ",
							"AgAAAAAAAAABAAAAkTkAAAAAAACROQAAAAAAAAAAAAAAAPC/AQAAAAIAAAAOJQAAAAAAAA4lAAAAAAAAAAAAAAAA8L9NJQAAAAAAAE0lAAAAAAAAAAAAAABgg0A"
						],
						[
							5409,
							1,
							"insert",
							{
								"characters": "1"
							},
							"BAAAAEolAAAAAAAASyUAAAAAAAAAAAAASyUAAAAAAABLJQAAAAAAAAEAAAAyDCUAAAAAAAANJQAAAAAAAAAAAAANJQAAAAAAAA0lAAAAAAAAAQAAADI",
							"AgAAAAAAAAABAAAAjzkAAAAAAACPOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAANJQAAAAAAAAwlAAAAAAAAAAAAAAAA8L9LJQAAAAAAAEolAAAAAAAAAAAAAAAA8L8"
						],
						[
							5411,
							1,
							"insert",
							{
								"characters": ")"
							},
							"AgAAAEslAAAAAAAATCUAAAAAAAAAAAAADSUAAAAAAAAOJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAjzkAAAAAAACPOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAANJQAAAAAAAA0lAAAAAAAAAAAAAAAA8L9LJQAAAAAAAEslAAAAAAAAAAAAAAAA8L8"
						],
						[
							5418,
							1,
							"insert",
							{
								"characters": "\nprint"
							},
							"BwAAAM8kAAAAAAAA0CQAAAAAAAAAAAAA0CQAAAAAAADYJAAAAAAAAAAAAADYJAAAAAAAANkkAAAAAAAAAAAAANkkAAAAAAAA2iQAAAAAAAAAAAAA2iQAAAAAAADbJAAAAAAAAAAAAADbJAAAAAAAANwkAAAAAAAAAAAAANwkAAAAAAAA3SQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAkTkAAAAAAACROQAAAAAAAAAAAAAAAPC/AQAAAAEAAADPJAAAAAAAAM8kAAAAAAAAAAAAAAAQg0A"
						],
						[
							5419,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAN0kAAAAAAAA3yQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAnzkAAAAAAACfOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADdJAAAAAAAAN0kAAAAAAAAAAAAAAAA8L8"
						],
						[
							5421,
							1,
							"insert",
							{
								"characters": "d"
							},
							"AQAAAN4kAAAAAAAA3yQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAoTkAAAAAAAChOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADeJAAAAAAAAN4kAAAAAAAAAAAAAAAA8L8"
						],
						[
							5422,
							1,
							"left_delete",
							null,
							"AQAAAN4kAAAAAAAA3iQAAAAAAAABAAAAZA",
							"AgAAAAAAAAABAAAAojkAAAAAAACiOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADfJAAAAAAAAN8kAAAAAAAAAAAAAAAA8L8"
						],
						[
							5424,
							1,
							"insert",
							{
								"characters": "max"
							},
							"AwAAAN4kAAAAAAAA3yQAAAAAAAAAAAAA3yQAAAAAAADgJAAAAAAAAAAAAADgJAAAAAAAAOEkAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAoTkAAAAAAAChOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADeJAAAAAAAAN4kAAAAAAAAAAAAAAAA8L8"
						],
						[
							5425,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAOEkAAAAAAAA4yQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAApDkAAAAAAACkOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADhJAAAAAAAAOEkAAAAAAAAAAAAAAAA8L8"
						],
						[
							5426,
							1,
							"insert",
							{
								"characters": "d"
							},
							"AQAAAOIkAAAAAAAA4yQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAApjkAAAAAAACmOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADiJAAAAAAAAOIkAAAAAAAAAAAAAAAA8L8"
						],
						[
							5427,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAOMkAAAAAAAA5SQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAApzkAAAAAAACnOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADjJAAAAAAAAOMkAAAAAAAAAAAAAAAA8L8"
						],
						[
							5428,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAAOQkAAAAAAAA5iQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAqTkAAAAAAACpOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADkJAAAAAAAAOQkAAAAAAAAAAAAAAAA8L8"
						],
						[
							5429,
							1,
							"insert",
							{
								"characters": "h"
							},
							"AQAAAOUkAAAAAAAA5iQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAqzkAAAAAAACrOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADlJAAAAAAAAOUkAAAAAAAAAAAAAAAA8L8"
						],
						[
							5434,
							4,
							"swap_line_down",
							null,
							"CAAAAColAAAAAAAARSUAAAAAAAAAAAAA0CQAAAAAAADQJAAAAAAAABsAAAAgICAgICAgIHByaW50KG1heChkWyJoIl0pKQppJQAAAAAAAIQlAAAAAAAAAAAAAA8lAAAAAAAADyUAAAAAAAAbAAAAICAgICAgICBwcmludChtYXgoZFsiaCJdKSkKfyUAAAAAAACaJQAAAAAAAAAAAABOJQAAAAAAAE4lAAAAAAAAGwAAACAgICAgICAgcHJpbnQobWF4KGRbImgiXSkpCpUlAAAAAAAAsCUAAAAAAAAAAAAAZCUAAAAAAABkJQAAAAAAABsAAAAgICAgICAgIHByaW50KG1heChkWyJoIl0pKQo",
							"AgAAAAAAAAABAAAArDkAAAAAAACsOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqJAAAAAAAAOokAAAAAAAAAAAAAAAA8L8"
						],
						[
							5435,
							2,
							"swap_line_up",
							null,
							"BAAAAHolAAAAAAAAeiUAAAAAAAAbAAAAICAgICAgICBwcmludChtYXgoZFsiaCJdKSkKZCUAAAAAAAB/JQAAAAAAAAAAAABkJQAAAAAAAGQlAAAAAAAAGwAAACAgICAgICAgcHJpbnQobWF4KGRbImgiXSkpCk4lAAAAAAAAaSUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAArDkAAAAAAACsOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUJQAAAAAAAJQlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5441,
							2,
							"swap_line_down",
							null,
							"BAAAAH8lAAAAAAAAmiUAAAAAAAAAAAAATiUAAAAAAABOJQAAAAAAABsAAAAgICAgICAgIHByaW50KG1heChkWyJoIl0pKQqVJQAAAAAAALAlAAAAAAAAAAAAAGQlAAAAAAAAZCUAAAAAAAAbAAAAICAgICAgICBwcmludChtYXgoZFsiaCJdKSkK",
							"AgAAAAAAAAABAAAArDkAAAAAAACsOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABoJQAAAAAAAGglAAAAAAAAAAAAAAAA8L8"
						],
						[
							5444,
							1,
							"insert",
							{
								"characters": "/2"
							},
							"AgAAAJIlAAAAAAAAkyUAAAAAAAAAAAAAkyUAAAAAAACUJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAArDkAAAAAAACsOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACSJQAAAAAAAJIlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5450,
							2,
							"left_delete",
							null,
							"AgAAAJMlAAAAAAAAkyUAAAAAAAABAAAAMpIlAAAAAAAAkiUAAAAAAAABAAAALw",
							"AgAAAAAAAAABAAAArjkAAAAAAACuOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUJQAAAAAAAJQlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5452,
							1,
							"insert",
							{
								"characters": "/2"
							},
							"AgAAAJMlAAAAAAAAlCUAAAAAAAAAAAAAlCUAAAAAAACVJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAArDkAAAAAAACsOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACTJQAAAAAAAJMlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5463,
							1,
							"paste",
							null,
							"BAAAADwlAAAAAAAASSUAAAAAAAAAAAAASSUAAAAAAABJJQAAAAAAABAAAABkWyJoIl1baV9tYXhoXS8x/SQAAAAAAAAKJQAAAAAAAAAAAAAKJQAAAAAAAAolAAAAAAAAEAAAAGRbImgiXVtpX21heGhdLzE",
							"AgAAAAAAAAABAAAArjkAAAAAAACuOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAD9JAAAAAAAAA0lAAAAAAAAAAAAAAAA8L88JQAAAAAAAEwlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5477,
							1,
							"insert",
							{
								"characters": "-"
							},
							"AgAAADclAAAAAAAAOCUAAAAAAAAAAAAA+yQAAAAAAAD8JAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAqDkAAAAAAACoOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAD7JAAAAAAAAPskAAAAAAAAAAAAAAAA8L83JQAAAAAAADclAAAAAAAAAAAAAAAA8L8"
						],
						[
							5482,
							1,
							"permute_selection",
							{
								"operation": "reverse"
							},
							"AgAAAC0lAAAAAAAAOCUAAAAAAAALAAAAZFsiciJdLlRbMV3wJAAAAAAAAPskAAAAAAAACwAAAGRbImwiXS5UWzFd",
							"AgAAAAAAAAABAAAAqjkAAAAAAACqOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAD7JAAAAAAAAPAkAAAAAAAAAAAAAAAA8L84JQAAAAAAAC0lAAAAAAAAAAAAAAAA8L8"
						],
						[
							5483,
							1,
							"permute_selection",
							{
								"operation": "reverse"
							},
							"AgAAAC0lAAAAAAAAOCUAAAAAAAALAAAAZFsibCJdLlRbMV3wJAAAAAAAAPskAAAAAAAACwAAAGRbInIiXS5UWzFd",
							"AgAAAAAAAAABAAAAqjkAAAAAAACqOQAAAAAAAAAAAAAAAPC/AQAAAAIAAADwJAAAAAAAAPskAAAAAAAAAAAAAAAA8L8tJQAAAAAAADglAAAAAAAAAAAAAAAA8L8"
						],
						[
							5485,
							1,
							"paste",
							null,
							"AgAAADklAAAAAAAARCUAAAAAAAAAAAAA/CQAAAAAAAAHJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAqjkAAAAAAACqOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAD8JAAAAAAAAPwkAAAAAAAAAAAAAAAA8L85JQAAAAAAADklAAAAAAAAAAAAAAAA8L8"
						],
						[
							5497,
							1,
							"permute_selection",
							{
								"operation": "reverse"
							},
							"AgAAAEQlAAAAAAAATyUAAAAAAAALAAAAZFsiciJdLlRbMV38JAAAAAAAAAclAAAAAAAACwAAAGRbImwiXS5UWzFd",
							"AgAAAAAAAAABAAAAwDkAAAAAAADAOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAAHJQAAAAAAAPwkAAAAAAAAAAAAAAAA8L9PJQAAAAAAAEQlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5517,
							1,
							"insert",
							{
								"characters": " "
							},
							"BAAAAFAlAAAAAAAAUSUAAAAAAAAAAAAAUSUAAAAAAABRJQAAAAAAAA4AAAAgbWF4KGRbImgiXSkvMgglAAAAAAAACSUAAAAAAAAAAAAACSUAAAAAAAAJJQAAAAAAAA4AAAAgbWF4KGRbImgiXSkvMg",
							"AgAAAAAAAAABAAAAwDkAAAAAAADAOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAAIJQAAAAAAABYlAAAAAAAAAAAAAAAA8L9QJQAAAAAAAF4lAAAAAAAAAAAAAAAA8L8"
						],
						[
							5518,
							1,
							"paste",
							null,
							"AgAAAEQlAAAAAAAAWyUAAAAAAAAAAAAACSUAAAAAAAAgJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAApjkAAAAAAACmOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAAJJQAAAAAAAAklAAAAAAAAAAAAAAAA8L9EJQAAAAAAAEQlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5522,
							1,
							"insert",
							{
								"characters": "i_maxh"
							},
							"DgAAAGclAAAAAAAAaCUAAAAAAAAAAAAAaCUAAAAAAABoJQAAAAAAAAsAAABkWyJsIl0uVFsxXRUlAAAAAAAAFiUAAAAAAAAAAAAAFiUAAAAAAAAWJQAAAAAAAAsAAABkWyJyIl0uVFsxXV4lAAAAAAAAXyUAAAAAAAAAAAAAFiUAAAAAAAAXJQAAAAAAAAAAAABgJQAAAAAAAGElAAAAAAAAAAAAABclAAAAAAAAGCUAAAAAAAAAAAAAYiUAAAAAAABjJQAAAAAAAAAAAAAYJQAAAAAAABklAAAAAAAAAAAAAGQlAAAAAAAAZSUAAAAAAAAAAAAAGSUAAAAAAAAaJQAAAAAAAAAAAABmJQAAAAAAAGclAAAAAAAAAAAAABolAAAAAAAAGyUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA1DkAAAAAAADUOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAAVJQAAAAAAACAlAAAAAAAAAAAAAAAA8L9nJQAAAAAAAHIlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5525,
							1,
							"insert_snippet",
							{
								"contents": "(${0:$SELECTION})"
							},
							"BAAAAAklAAAAAAAACSUAAAAAAAASAAAAZFsibCJdLlRbMV0taV9tYXhoCSUAAAAAAAAdJQAAAAAAAAAAAABYJQAAAAAAAFglAAAAAAAAEgAAAGRbInIiXS5UWzFdLWlfbWF4aFglAAAAAAAAbCUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAyjkAAAAAAADKOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAAbJQAAAAAAAAklAAAAAAAAAAAAAAAA8L9oJQAAAAAAAFYlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5527,
							1,
							"insert",
							{
								"characters": "abs"
							},
							"BgAAAFglAAAAAAAAWSUAAAAAAAAAAAAACSUAAAAAAAAKJQAAAAAAAAAAAABaJQAAAAAAAFslAAAAAAAAAAAAAAolAAAAAAAACyUAAAAAAAAAAAAAXCUAAAAAAABdJQAAAAAAAAAAAAALJQAAAAAAAAwlAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAzjkAAAAAAADOOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAAJJQAAAAAAAAklAAAAAAAAAAAAAAAA8L9YJQAAAAAAAFglAAAAAAAAAAAAAAAA8L8"
						],
						[
							5538,
							1,
							"insert",
							{
								"characters": "np.asarray"
							},
							"FAAAAGslAAAAAAAAbCUAAAAAAAAAAAAAGSUAAAAAAAAaJQAAAAAAAAAAAABtJQAAAAAAAG4lAAAAAAAAAAAAABolAAAAAAAAGyUAAAAAAAAAAAAAbyUAAAAAAABwJQAAAAAAAAAAAAAbJQAAAAAAABwlAAAAAAAAAAAAAHElAAAAAAAAciUAAAAAAAAAAAAAHCUAAAAAAAAdJQAAAAAAAAAAAABzJQAAAAAAAHQlAAAAAAAAAAAAAB0lAAAAAAAAHiUAAAAAAAAAAAAAdSUAAAAAAAB2JQAAAAAAAAAAAAAeJQAAAAAAAB8lAAAAAAAAAAAAAHclAAAAAAAAeCUAAAAAAAAAAAAAHyUAAAAAAAAgJQAAAAAAAAAAAAB5JQAAAAAAAHolAAAAAAAAAAAAACAlAAAAAAAAISUAAAAAAAAAAAAAeyUAAAAAAAB8JQAAAAAAAAAAAAAhJQAAAAAAACIlAAAAAAAAAAAAAH0lAAAAAAAAfiUAAAAAAAAAAAAAIiUAAAAAAAAjJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA1DkAAAAAAADUOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAAZJQAAAAAAABklAAAAAAAAAAAAAAAA8L9rJQAAAAAAAGslAAAAAAAAAAAAAAAA8L8"
						],
						[
							5540,
							1,
							"insert_snippet",
							{
								"contents": "(${0:$SELECTION})"
							},
							"BAAAACMlAAAAAAAAIyUAAAAAAAAGAAAAaV9tYXhoIyUAAAAAAAArJQAAAAAAAAAAAACBJQAAAAAAAIElAAAAAAAABgAAAGlfbWF4aIElAAAAAAAAiSUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA6DkAAAAAAADoOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAAjJQAAAAAAACklAAAAAAAAAAAAAAAA8L9/JQAAAAAAAIUlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5557,
							1,
							"bh_key",
							{
								"plugin":
								{
									"args":
									{
										"remove_block": false,
										"remove_content": false,
										"remove_indent": false
									},
									"command": "bh_modules.bracketremove",
									"type":
									[
										"__all__"
									]
								}
							},
							"BAAAAColAAAAAAAAKiUAAAAAAAABAAAAKSMlAAAAAAAAIyUAAAAAAAABAAAAKIYlAAAAAAAAhiUAAAAAAAABAAAAKX8lAAAAAAAAfyUAAAAAAAABAAAAKA",
							"AgAAAAAAAAABAAAA7DkAAAAAAADsOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAApJQAAAAAAACklAAAAAAAAAAAAAAAA8L+HJQAAAAAAAIclAAAAAAAAAAAAAAAA8L8"
						],
						[
							5560,
							4,
							"left_delete",
							null,
							"CAAAAHglAAAAAAAAeCUAAAAAAAAHAAAAYXNhcnJheRwlAAAAAAAAHCUAAAAAAAAHAAAAYXNhcnJheXAlAAAAAAAAcCUAAAAAAAABAAAALhslAAAAAAAAGyUAAAAAAAABAAAALm4lAAAAAAAAbiUAAAAAAAABAAAAcBolAAAAAAAAGiUAAAAAAAABAAAAcGwlAAAAAAAAbCUAAAAAAAABAAAAbhklAAAAAAAAGSUAAAAAAAABAAAAbg",
							"AgAAAAAAAAABAAAA6DkAAAAAAADoOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAAjJQAAAAAAABwlAAAAAAAAAAAAAAAA8L9/JQAAAAAAAHglAAAAAAAAAAAAAAAA8L8"
						],
						[
							5568,
							1,
							"left_delete",
							null,
							"AgAAAE0lAAAAAAAATSUAAAAAAAAMAAAALWRbImwiXS5UWzFd+yQAAAAAAAD7JAAAAAAAAAwAAAAtZFsiciJdLlRbMV0",
							"AgAAAAAAAAABAAAA1DkAAAAAAADUOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAD7JAAAAAAAAAclAAAAAAAAAAAAAAAA8L9NJQAAAAAAAFklAAAAAAAAAAAAAAAA8L8"
						],
						[
							5576,
							1,
							"left_delete",
							null,
							"AgAAAEMlAAAAAAAAQyUAAAAAAAAXAAAAYWJzKGRbInIiXS5UWzFdLWlfbWF4aCn9JAAAAAAAAP0kAAAAAAAAFwAAAGFicyhkWyJsIl0uVFsxXS1pX21heGgp",
							"AgAAAAAAAAABAAAAvDkAAAAAAAC8OQAAAAAAAAAAAAAAAPC/AQAAAAIAAAD9JAAAAAAAABQlAAAAAAAAAAAAAAAA8L9DJQAAAAAAAFolAAAAAAAAAAAAAAAA8L8"
						],
						[
							5577,
							1,
							"insert",
							{
								"characters": "i_maxh"
							},
							"DAAAACwlAAAAAAAALSUAAAAAAAAAAAAA/SQAAAAAAAD+JAAAAAAAAAAAAAAuJQAAAAAAAC8lAAAAAAAAAAAAAP4kAAAAAAAA/yQAAAAAAAAAAAAAMCUAAAAAAAAxJQAAAAAAAAAAAAD/JAAAAAAAAAAlAAAAAAAAAAAAADIlAAAAAAAAMyUAAAAAAAAAAAAAACUAAAAAAAABJQAAAAAAAAAAAAA0JQAAAAAAADUlAAAAAAAAAAAAAAElAAAAAAAAAiUAAAAAAAAAAAAANiUAAAAAAAA3JQAAAAAAAAAAAAACJQAAAAAAAAMlAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAjjkAAAAAAACOOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAD9JAAAAAAAAP0kAAAAAAAAAAAAAAAA8L8sJQAAAAAAACwlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5578,
							1,
							"insert",
							{
								"characters": "/2"
							},
							"BAAAADglAAAAAAAAOSUAAAAAAAAAAAAAAyUAAAAAAAAEJQAAAAAAAAAAAAA6JQAAAAAAADslAAAAAAAAAAAAAAQlAAAAAAAABSUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAmjkAAAAAAACaOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAADJQAAAAAAAAMlAAAAAAAAAAAAAAAA8L84JQAAAAAAADglAAAAAAAAAAAAAAAA8L8"
						],
						[
							5583,
							1,
							"insert",
							{
								"characters": "imac"
							},
							"BQAAAHglAAAAAAAAeSUAAAAAAAAAAAAAeSUAAAAAAAB5JQAAAAAAAAsAAABtYXgoZFsiaCJdKXklAAAAAAAAeiUAAAAAAAAAAAAAeiUAAAAAAAB7JQAAAAAAAAAAAAB7JQAAAAAAAHwlAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAnjkAAAAAAACeOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACDJQAAAAAAAHglAAAAAAAAAAAAAAAA8L8"
						],
						[
							5584,
							1,
							"left_delete",
							null,
							"AQAAAHslAAAAAAAAeyUAAAAAAAABAAAAYw",
							"AgAAAAAAAAABAAAAlzkAAAAAAACXOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB8JQAAAAAAAHwlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5585,
							1,
							"insert",
							{
								"characters": "xh"
							},
							"AgAAAHslAAAAAAAAfCUAAAAAAAAAAAAAfCUAAAAAAAB9JQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAljkAAAAAAACWOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB7JQAAAAAAAHslAAAAAAAAAAAAAAAA8L8"
						],
						[
							5586,
							1,
							"insert_completion",
							{
								"completion": "i_maxh",
								"format": "text",
								"keep_prefix": false,
								"must_insert": false,
								"trigger": "i_maxh"
							},
							"AgAAAHglAAAAAAAAeCUAAAAAAAAFAAAAaW1heGh4JQAAAAAAAH4lAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAmDkAAAAAAACYOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB9JQAAAAAAAH0lAAAAAAAAAAAAAAAA8L8"
						],
						[
							5596,
							1,
							"duplicate_lines",
							null,
							"AQAAAD4lAAAAAAAAVCUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAmTkAAAAAAACZOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABTJQAAAAAAAFMlAAAAAAAAAAAAAABAakA"
						],
						[
							5597,
							1,
							"swap_line_down",
							null,
							"AgAAAIAlAAAAAAAAliUAAAAAAAAAAAAAVCUAAAAAAABUJQAAAAAAABYAAAAgICAgICAgIHByaW50KGRbInIiXSkK",
							"AgAAAAAAAAABAAAArzkAAAAAAACvOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABpJQAAAAAAAGklAAAAAAAAAAAAAAAA8L8"
						],
						[
							5600,
							1,
							"insert",
							{
								"characters": "+d"
							},
							"AgAAAH4lAAAAAAAAfyUAAAAAAAAAAAAAfyUAAAAAAACAJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAArzkAAAAAAACvOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB+JQAAAAAAAH4lAAAAAAAAAAAAAAAA8L8"
						],
						[
							5601,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAIAlAAAAAAAAgiUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAsTkAAAAAAACxOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACAJQAAAAAAAIAlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5602,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAAIElAAAAAAAAgyUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAszkAAAAAAACzOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACBJQAAAAAAAIElAAAAAAAAAAAAAAAA8L8"
						],
						[
							5603,
							1,
							"insert",
							{
								"characters": "l"
							},
							"AQAAAIIlAAAAAAAAgyUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAtTkAAAAAAAC1OQAAAAAAAAAAAAAAAPC/AQAAAAEAAACCJQAAAAAAAIIlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5617,
							1,
							"insert",
							{
								"characters": "[1]"
							},
							"BgAAAIUlAAAAAAAAhiUAAAAAAAAAAAAAfiUAAAAAAAB/JQAAAAAAAAAAAACHJQAAAAAAAIglAAAAAAAAAAAAAH8lAAAAAAAAgCUAAAAAAAAAAAAAiSUAAAAAAACKJQAAAAAAAAAAAACAJQAAAAAAAIElAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAtjkAAAAAAAC2OQAAAAAAAAAAAAAAAPC/AQAAAAIAAAB+JQAAAAAAAH4lAAAAAAAAAAAAAAAA8L+FJQAAAAAAAIUlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5624,
							1,
							"insert_snippet",
							{
								"contents": "(${0:$SELECTION})"
							},
							"AgAAAHglAAAAAAAAeCUAAAAAAAATAAAAZFsiciJdWzFdK2RbImwiXVsxXXglAAAAAAAAjSUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAvDkAAAAAAAC8OQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB4JQAAAAAAAIslAAAAAAAAAAAAAAAA8L8"
						],
						[
							5626,
							1,
							"insert",
							{
								"characters": "d"
							},
							"AQAAAHklAAAAAAAAeiUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAvjkAAAAAAAC+OQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB5JQAAAAAAAHklAAAAAAAAAAAAAAAA8L8"
						],
						[
							5627,
							1,
							"insert",
							{
								"characters": "[\""
							},
							"AgAAAHolAAAAAAAAeyUAAAAAAAAAAAAAeyUAAAAAAAB8JQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAvzkAAAAAAAC/OQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB6JQAAAAAAAHolAAAAAAAAAAAAAAAA8L8"
						],
						[
							5628,
							1,
							"insert",
							{
								"characters": "r\"][0]"
							},
							"BgAAAHwlAAAAAAAAfSUAAAAAAAAAAAAAfSUAAAAAAAB+JQAAAAAAAAAAAAB+JQAAAAAAAH8lAAAAAAAAAAAAAH8lAAAAAAAAgCUAAAAAAAAAAAAAgCUAAAAAAACBJQAAAAAAAAAAAACBJQAAAAAAAIIlAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAwTkAAAAAAADBOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB8JQAAAAAAAHwlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5629,
							1,
							"insert",
							{
								"characters": ","
							},
							"AQAAAIIlAAAAAAAAgyUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAxzkAAAAAAADHOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACCJQAAAAAAAIIlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5630,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAIMlAAAAAAAAhCUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAyDkAAAAAAADIOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACDJQAAAAAAAIMlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5634,
							1,
							"insert",
							{
								"characters": "np.asarray"
							},
							"CgAAAHglAAAAAAAAeSUAAAAAAAAAAAAAeSUAAAAAAAB6JQAAAAAAAAAAAAB6JQAAAAAAAHslAAAAAAAAAAAAAHslAAAAAAAAfCUAAAAAAAAAAAAAfCUAAAAAAAB9JQAAAAAAAAAAAAB9JQAAAAAAAH4lAAAAAAAAAAAAAH4lAAAAAAAAfyUAAAAAAAAAAAAAfyUAAAAAAACAJQAAAAAAAAAAAACAJQAAAAAAAIElAAAAAAAAAAAAAIElAAAAAAAAgiUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAyTkAAAAAAADJOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB4JQAAAAAAAHglAAAAAAAAAAAAAAAA8L8"
						],
						[
							5641,
							1,
							"insert",
							{
								"characters": "array"
							},
							"BgAAAHslAAAAAAAAfCUAAAAAAAAAAAAAfCUAAAAAAAB8JQAAAAAAAAcAAABhc2FycmF5fCUAAAAAAAB9JQAAAAAAAAAAAAB9JQAAAAAAAH4lAAAAAAAAAAAAAH4lAAAAAAAAfyUAAAAAAAAAAAAAfyUAAAAAAACAJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA0zkAAAAAAADTOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB7JQAAAAAAAIIlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5645,
							4,
							"left_delete",
							null,
							"BAAAAHslAAAAAAAAeyUAAAAAAAAFAAAAYXJyYXl6JQAAAAAAAHolAAAAAAAAAQAAAC55JQAAAAAAAHklAAAAAAAAAQAAAHB4JQAAAAAAAHglAAAAAAAAAQAAAG4",
							"AgAAAAAAAAABAAAA0TkAAAAAAADROQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB7JQAAAAAAAIAlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5648,
							1,
							"bh_key",
							{
								"plugin":
								{
									"command": "bh_modules.swapbrackets",
									"type":
									[
										"__all__"
									]
								}
							},
							"AgAAAJclAAAAAAAAlyUAAAAAAAABAAAAKXglAAAAAAAAeCUAAAAAAAABAAAAKA",
							"AgAAAAAAAAABAAAAyTkAAAAAAADJOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB5JQAAAAAAAHklAAAAAAAAAAAAAAAA8L8"
						],
						[
							5649,
							1,
							"execute_wrap_instance",
							null,
							"AwAAAHglAAAAAAAAeSUAAAAAAAAAAAAAlyUAAAAAAAChJQAAAAAAAAAAAACYJQAAAAAAAJglAAAAAAAACQAAACR7QkhfU0VMfQ",
							"AgAAAAAAAAABAAAAxzkAAAAAAADHOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB4JQAAAAAAAJYlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5681,
							1,
							"insert",
							{
								"characters": ".T"
							},
							"BgAAAJclAAAAAAAAmCUAAAAAAAAAAAAAjSUAAAAAAACOJQAAAAAAAAAAAACCJQAAAAAAAIMlAAAAAAAAAAAAAJolAAAAAAAAmyUAAAAAAAAAAAAAjyUAAAAAAACQJQAAAAAAAAAAAACDJQAAAAAAAIQlAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAyTkAAAAAAADJOQAAAAAAAAAAAAAAAPC/AQAAAAMAAACCJQAAAAAAAIIlAAAAAAAAAAAAAAAA8L+NJQAAAAAAAI0lAAAAAAAAAAAAAAAA8L+XJQAAAAAAAJclAAAAAAAAAAAAAAAA8L8"
						],
						[
							5689,
							1,
							"bh_key",
							{
								"plugin":
								{
									"command": "bh_modules.swapbrackets",
									"type":
									[
										"__all__"
									]
								}
							},
							"AgAAAJ0lAAAAAAAAnSUAAAAAAAABAAAAXXglAAAAAAAAeCUAAAAAAAABAAAAWw",
							"AgAAAAAAAAABAAAAzzkAAAAAAADPOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB5JQAAAAAAAHklAAAAAAAAAAAAAAAA8L8"
						],
						[
							5690,
							1,
							"execute_wrap_instance",
							null,
							"AwAAAHglAAAAAAAAeSUAAAAAAAAAAAAAnSUAAAAAAACnJQAAAAAAAAAAAACeJQAAAAAAAJ4lAAAAAAAACQAAACR7QkhfU0VMfQ",
							"AgAAAAAAAAABAAAAzTkAAAAAAADNOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB4JQAAAAAAAJwlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5692,
							1,
							"bh_key",
							{
								"plugin":
								{
									"command": "bh_modules.swapbrackets",
									"type":
									[
										"__all__"
									]
								}
							},
							"AgAAAJ4lAAAAAAAAniUAAAAAAAABAAAAKXclAAAAAAAAdyUAAAAAAAABAAAAKA",
							"AgAAAAAAAAABAAAAzzkAAAAAAADPOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACeJQAAAAAAAJ4lAAAAAAAAAAAAAAAA8L8"
						],
						[
							5693,
							1,
							"execute_wrap_instance",
							null,
							"AwAAAHclAAAAAAAAeCUAAAAAAAAAAAAAniUAAAAAAACoJQAAAAAAAAAAAACfJQAAAAAAAJ8lAAAAAAAACQAAACR7QkhfU0VMfQ",
							"AgAAAAAAAAABAAAAzTkAAAAAAADNOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB3JQAAAAAAAJ0lAAAAAAAAAAAAAAAA8L8"
						],
						[
							5696,
							1,
							"bh_key",
							{
								"plugin":
								{
									"command": "bh_modules.swapbrackets",
									"type":
									[
										"__all__"
									]
								}
							},
							"AgAAAJ0lAAAAAAAAnSUAAAAAAAABAAAAfXglAAAAAAAAeCUAAAAAAAABAAAAew",
							"AgAAAAAAAAABAAAAzzkAAAAAAADPOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACdJQAAAAAAAJ0lAAAAAAAAAAAAAAAA8L8"
						],
						[
							5697,
							1,
							"execute_wrap_instance",
							null,
							"AwAAAHglAAAAAAAAeSUAAAAAAAAAAAAAnSUAAAAAAACnJQAAAAAAAAAAAACeJQAAAAAAAJ4lAAAAAAAACQAAACR7QkhfU0VMfQ",
							"AgAAAAAAAAABAAAAzTkAAAAAAADNOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB4JQAAAAAAAJwlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5701,
							1,
							"insert",
							{
								"characters": "np.array"
							},
							"CAAAAHglAAAAAAAAeSUAAAAAAAAAAAAAeSUAAAAAAAB6JQAAAAAAAAAAAAB6JQAAAAAAAHslAAAAAAAAAAAAAHslAAAAAAAAfCUAAAAAAAAAAAAAfCUAAAAAAAB9JQAAAAAAAAAAAAB9JQAAAAAAAH4lAAAAAAAAAAAAAH4lAAAAAAAAfyUAAAAAAAAAAAAAfyUAAAAAAACAJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAzzkAAAAAAADPOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB4JQAAAAAAAHglAAAAAAAAAAAAAAAA8L8"
						],
						[
							5704,
							1,
							"insert",
							{
								"characters": ".T"
							},
							"AgAAAKYlAAAAAAAApyUAAAAAAAAAAAAApyUAAAAAAACoJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA1zkAAAAAAADXOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACmJQAAAAAAAKYlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5709,
							2,
							"left_delete",
							null,
							"AgAAAKclAAAAAAAApyUAAAAAAAABAAAAVKYlAAAAAAAApiUAAAAAAAABAAAALg",
							"AgAAAAAAAAABAAAA2TkAAAAAAADZOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACoJQAAAAAAAKglAAAAAAAAAAAAAAAA8L8"
						],
						[
							5724,
							1,
							"insert_snippet",
							{
								"contents": "[${0:$SELECTION}]"
							},
							"AgAAAIElAAAAAAAAgSUAAAAAAAAkAAAAZFsiciJdWzBdLlQsIGRbInIiXVsxXS5UK2RbImwiXVsxXS5UgSUAAAAAAACnJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA1zkAAAAAAADXOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACBJQAAAAAAAKUlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5732,
							1,
							"left_delete",
							null,
							"AwAAAKQlAAAAAAAApCUAAAAAAAACAAAALlSYJQAAAAAAAJglAAAAAAAAAgAAAC5UiyUAAAAAAACLJQAAAAAAAAIAAAAuVA",
							"AgAAAAAAAAABAAAA2TkAAAAAAADZOQAAAAAAAAAAAAAAAPC/AQAAAAMAAACNJQAAAAAAAIslAAAAAAAAAAAAAAAA8L+YJQAAAAAAAJolAAAAAAAAAAAAAAAA8L+kJQAAAAAAAKYlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5751,
							1,
							"insert",
							{
								"characters": "vstack"
							},
							"BwAAAHslAAAAAAAAfCUAAAAAAAAAAAAAfCUAAAAAAAB8JQAAAAAAAAUAAABhcnJheXwlAAAAAAAAfSUAAAAAAAAAAAAAfSUAAAAAAAB+JQAAAAAAAAAAAAB+JQAAAAAAAH8lAAAAAAAAAAAAAH8lAAAAAAAAgCUAAAAAAAAAAAAAgCUAAAAAAACBJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA0zkAAAAAAADTOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB7JQAAAAAAAIAlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5780,
							1,
							"insert",
							{
								"characters": ".T"
							},
							"AgAAAIwlAAAAAAAAjSUAAAAAAAAAAAAAjSUAAAAAAACOJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA1DkAAAAAAADUOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACMJQAAAAAAAIwlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5781,
							1,
							"insert_completion",
							{
								"completion": ".Trash/",
								"format": "snippet",
								"keep_prefix": false,
								"must_insert": false,
								"trigger": ".Trash/"
							},
							"AgAAAIwlAAAAAAAAjCUAAAAAAAACAAAALlSMJQAAAAAAAJMlAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA1jkAAAAAAADWOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACOJQAAAAAAAI4lAAAAAAAAAAAAAAAA8L8"
						],
						[
							5782,
							5,
							"left_delete",
							null,
							"BQAAAJIlAAAAAAAAkiUAAAAAAAABAAAAL5ElAAAAAAAAkSUAAAAAAAABAAAAaJAlAAAAAAAAkCUAAAAAAAABAAAAc48lAAAAAAAAjyUAAAAAAAABAAAAYY4lAAAAAAAAjiUAAAAAAAABAAAAcg",
							"AgAAAAAAAAABAAAA2zkAAAAAAADbOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACTJQAAAAAAAJMlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5785,
							1,
							"insert",
							{
								"characters": ".T"
							},
							"AgAAAJklAAAAAAAAmiUAAAAAAAAAAAAAmiUAAAAAAACbJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA1jkAAAAAAADWOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACZJQAAAAAAAJklAAAAAAAAAAAAAAAA8L8"
						],
						[
							5788,
							1,
							"insert",
							{
								"characters": ".T"
							},
							"AgAAAKYlAAAAAAAApyUAAAAAAAAAAAAApyUAAAAAAACoJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA2DkAAAAAAADYOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACmJQAAAAAAAKYlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5791,
							2,
							"left_delete",
							null,
							"AgAAAKclAAAAAAAApyUAAAAAAAABAAAAVKYlAAAAAAAApiUAAAAAAAABAAAALg",
							"AgAAAAAAAAABAAAA2jkAAAAAAADaOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACoJQAAAAAAAKglAAAAAAAAAAAAAAAA8L8"
						],
						[
							5793,
							1,
							"insert",
							{
								"characters": ","
							},
							"AQAAAKUlAAAAAAAApiUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA2DkAAAAAAADYOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAClJQAAAAAAAKUlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5794,
							1,
							"left_delete",
							null,
							"AQAAAKUlAAAAAAAApSUAAAAAAAABAAAALA",
							"AgAAAAAAAAABAAAA2TkAAAAAAADZOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACmJQAAAAAAAKYlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5795,
							1,
							"insert",
							{
								"characters": ".T"
							},
							"AgAAAKUlAAAAAAAApiUAAAAAAAAAAAAApiUAAAAAAACnJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA2DkAAAAAAADYOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAClJQAAAAAAAKUlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5797,
							1,
							"insert",
							{
								"characters": ".T"
							},
							"AgAAAKglAAAAAAAAqSUAAAAAAAAAAAAAqSUAAAAAAACqJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA2jkAAAAAAADaOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACoJQAAAAAAAKglAAAAAAAAAAAAAAAA8L8"
						],
						[
							5809,
							2,
							"left_delete",
							null,
							"AgAAAKklAAAAAAAAqSUAAAAAAAABAAAAVKglAAAAAAAAqCUAAAAAAAABAAAALg",
							"AgAAAAAAAAABAAAA3DkAAAAAAADcOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACqJQAAAAAAAKolAAAAAAAAAAAAAAAA8L8"
						],
						[
							5821,
							1,
							"left_delete",
							null,
							"AwAAAKUlAAAAAAAApSUAAAAAAAACAAAALlSZJQAAAAAAAJklAAAAAAAAAgAAAC5UjCUAAAAAAACMJQAAAAAAAAIAAAAuVA",
							"AgAAAAAAAAABAAAA2jkAAAAAAADaOQAAAAAAAAAAAAAAAPC/AQAAAAMAAACOJQAAAAAAAIwlAAAAAAAAAAAAAAAA8L+ZJQAAAAAAAJslAAAAAAAAAAAAAAAA8L+lJQAAAAAAAKclAAAAAAAAAAAAAAAA8L8"
						],
						[
							5836,
							1,
							"insert",
							{
								"characters": ".T"
							},
							"BgAAAJ4lAAAAAAAAnyUAAAAAAAAAAAAAlCUAAAAAAACVJQAAAAAAAAAAAACJJQAAAAAAAIolAAAAAAAAAAAAAKElAAAAAAAAoiUAAAAAAAAAAAAAliUAAAAAAACXJQAAAAAAAAAAAACKJQAAAAAAAIslAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA1DkAAAAAAADUOQAAAAAAAAAAAAAAAPC/AQAAAAMAAACJJQAAAAAAAIklAAAAAAAAAAAAAAAA8L+UJQAAAAAAAJQlAAAAAAAAAAAAAAAA8L+eJQAAAAAAAJ4lAAAAAAAAAAAAAAAA8L8"
						],
						[
							5840,
							1,
							"insert",
							{
								"characters": ".T"
							},
							"AgAAAKklAAAAAAAAqiUAAAAAAAAAAAAAqiUAAAAAAACrJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA2jkAAAAAAADaOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACpJQAAAAAAAKklAAAAAAAAAAAAAAAA8L8"
						],
						[
							5854,
							1,
							"left_delete",
							null,
							"AQAAAJslAAAAAAAAmyUAAAAAAAABAAAAKw",
							"AgAAAAAAAAABAAAA3DkAAAAAAADcOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACcJQAAAAAAAJwlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5855,
							1,
							"insert",
							{
								"characters": "-"
							},
							"AQAAAJslAAAAAAAAnCUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA2zkAAAAAAADbOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACbJQAAAAAAAJslAAAAAAAAAAAAAAAA8L8"
						],
						[
							5861,
							1,
							"left_delete",
							null,
							"AQAAAHElAAAAAAAAcSUAAAAAAAAHAAAAIHByaW50KA",
							"AgAAAAAAAAABAAAA3DkAAAAAAADcOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB4JQAAAAAAAHElAAAAAAAAAAAAAAAA8L8"
						],
						[
							5862,
							1,
							"insert",
							{
								"characters": " e"
							},
							"AgAAAHElAAAAAAAAciUAAAAAAAAAAAAAciUAAAAAAABzJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA1TkAAAAAAADVOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABxJQAAAAAAAHElAAAAAAAAAAAAAAAA8L8"
						],
						[
							5863,
							1,
							"left_delete",
							null,
							"AQAAAHIlAAAAAAAAciUAAAAAAAABAAAAZQ",
							"AgAAAAAAAAABAAAA1zkAAAAAAADXOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABzJQAAAAAAAHMlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5864,
							1,
							"insert",
							{
								"characters": "widths"
							},
							"BgAAAHIlAAAAAAAAcyUAAAAAAAAAAAAAcyUAAAAAAAB0JQAAAAAAAAAAAAB0JQAAAAAAAHUlAAAAAAAAAAAAAHUlAAAAAAAAdiUAAAAAAAAAAAAAdiUAAAAAAAB3JQAAAAAAAAAAAAB3JQAAAAAAAHglAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA1jkAAAAAAADWOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAByJQAAAAAAAHIlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5865,
							1,
							"insert",
							{
								"characters": " ="
							},
							"AgAAAHglAAAAAAAAeSUAAAAAAAAAAAAAeSUAAAAAAAB6JQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA3DkAAAAAAADcOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB4JQAAAAAAAHglAAAAAAAAAAAAAAAA8L8"
						],
						[
							5866,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAHolAAAAAAAAeyUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA3jkAAAAAAADeOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB6JQAAAAAAAHolAAAAAAAAAAAAAAAA8L8"
						],
						[
							5868,
							1,
							"left_delete",
							null,
							"AQAAAK4lAAAAAAAAriUAAAAAAAABAAAAKQ",
							"AgAAAAAAAAABAAAA3zkAAAAAAADfOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACvJQAAAAAAAK8lAAAAAAAA////////738"
						],
						[
							5869,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAAK4lAAAAAAAAryUAAAAAAAAAAAAAryUAAAAAAAC3JQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA3jkAAAAAAADeOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACuJQAAAAAAAK4lAAAAAAAAAAAAAAAA8L8"
						],
						[
							5876,
							1,
							"paste",
							null,
							"AQAAAK8lAAAAAAAA5iUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA5zkAAAAAAADnOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAC3JQAAAAAAALclAAAAAAAAAAAAAAAA8L8"
						],
						[
							5880,
							1,
							"insert",
							{
								"characters": "mid"
							},
							"BQAAALclAAAAAAAAuCUAAAAAAAAAAAAAuCUAAAAAAAC4JQAAAAAAAAUAAAByaWdodOIlAAAAAAAA4iUAAAAAAAAIAAAAICAgICAgICC4JQAAAAAAALklAAAAAAAAAAAAALklAAAAAAAAuiUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAHjoAAAAAAAAeOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAC8JQAAAAAAALclAAAAAAAAAAAAAAAA8L8"
						],
						[
							5890,
							1,
							"insert",
							{
								"characters": "0"
							},
							"AgAAANYlAAAAAAAA1yUAAAAAAAAAAAAA1yUAAAAAAADXJQAAAAAAAAEAAAAx",
							"AgAAAAAAAAABAAAAFDoAAAAAAAAUOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADXJQAAAAAAANYlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5897,
							1,
							"insert",
							{
								"characters": "max"
							},
							"BAAAANolAAAAAAAA2yUAAAAAAAAAAAAA2yUAAAAAAADbJQAAAAAAAAgAAABpX21heGgvMtslAAAAAAAA3CUAAAAAAAAAAAAA3CUAAAAAAADdJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAFDoAAAAAAAAUOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADiJQAAAAAAANolAAAAAAAAAAAAAAAA8L8"
						],
						[
							5898,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAN0lAAAAAAAA3yUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAADzoAAAAAAAAPOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADdJQAAAAAAAN0lAAAAAAAAAAAAAAAA8L8"
						],
						[
							5900,
							1,
							"insert",
							{
								"characters": "d"
							},
							"AQAAAN4lAAAAAAAA3yUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAEToAAAAAAAAROgAAAAAAAAAAAAAAAPC/AQAAAAEAAADeJQAAAAAAAN4lAAAAAAAAAAAAAAAA8L8"
						],
						[
							5901,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAN8lAAAAAAAA4SUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAEjoAAAAAAAASOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADfJQAAAAAAAN8lAAAAAAAAAAAAAAAA8L8"
						],
						[
							5902,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAAOAlAAAAAAAA4iUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAFDoAAAAAAAAUOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADgJQAAAAAAAOAlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5903,
							1,
							"insert",
							{
								"characters": "h"
							},
							"AQAAAOElAAAAAAAA4iUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAFjoAAAAAAAAWOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADhJQAAAAAAAOElAAAAAAAAAAAAAAAA8L8"
						],
						[
							5905,
							1,
							"insert",
							{
								"characters": "/2"
							},
							"AgAAAOQlAAAAAAAA5SUAAAAAAAAAAAAA5SUAAAAAAADmJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAFzoAAAAAAAAXOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADkJQAAAAAAAOQlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5908,
							1,
							"insert",
							{
								"characters": "\nprint"
							},
							"BwAAAComAAAAAAAAKyYAAAAAAAAAAAAAKyYAAAAAAAAzJgAAAAAAAAAAAAAzJgAAAAAAADQmAAAAAAAAAAAAADQmAAAAAAAANSYAAAAAAAAAAAAANSYAAAAAAAA2JgAAAAAAAAAAAAA2JgAAAAAAADcmAAAAAAAAAAAAADcmAAAAAAAAOCYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAGToAAAAAAAAZOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAqJgAAAAAAAComAAAAAAAAAAAAAADQgUA"
						],
						[
							5909,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAADgmAAAAAAAAOiYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAJzoAAAAAAAAnOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAA4JgAAAAAAADgmAAAAAAAAAAAAAAAA8L8"
						],
						[
							5911,
							1,
							"insert",
							{
								"characters": "mid"
							},
							"AwAAADkmAAAAAAAAOiYAAAAAAAAAAAAAOiYAAAAAAAA7JgAAAAAAAAAAAAA7JgAAAAAAADwmAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAKToAAAAAAAApOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAA5JgAAAAAAADkmAAAAAAAAAAAAAAAA8L8"
						],
						[
							5937,
							1,
							"insert",
							{
								"characters": "widths"
							},
							"BwAAAM0lAAAAAAAAziUAAAAAAAAAAAAAziUAAAAAAADOJQAAAAAAAAYAAABkWyJyIl3OJQAAAAAAAM8lAAAAAAAAAAAAAM8lAAAAAAAA0CUAAAAAAAAAAAAA0CUAAAAAAADRJQAAAAAAAAAAAADRJQAAAAAAANIlAAAAAAAAAAAAANIlAAAAAAAA0yUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAALDoAAAAAAAAsOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADTJQAAAAAAAM0lAAAAAAAAAAAAAAAA8L8"
						],
						[
							5945,
							1,
							"right_delete",
							null,
							"AQAAAOUlAAAAAAAA5SUAAAAAAAABAAAAMg",
							"AgAAAAAAAAABAAAALDoAAAAAAAAsOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADlJQAAAAAAAOUlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5947,
							1,
							"insert",
							{
								"characters": ")"
							},
							"AQAAAOQlAAAAAAAA5SUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAKzoAAAAAAAArOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADkJQAAAAAAAOQlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5950,
							1,
							"insert",
							{
								"characters": "2"
							},
							"AQAAAOYlAAAAAAAA5yUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAALDoAAAAAAAAsOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADmJQAAAAAAAOYlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5951,
							1,
							"right_delete",
							null,
							"AQAAAOclAAAAAAAA5yUAAAAAAAABAAAAKQ",
							"AgAAAAAAAAABAAAALToAAAAAAAAtOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADnJQAAAAAAAOclAAAAAAAAAAAAAAAA8L8"
						],
						[
							5973,
							1,
							"insert",
							{
								"characters": "i_maxw"
							},
							"DgAAADkmAAAAAAAAOiYAAAAAAAAAAAAAOiYAAAAAAAA6JgAAAAAAAAMAAABtaWS3JQAAAAAAALglAAAAAAAAAAAAALglAAAAAAAAuCUAAAAAAAADAAAAbWlkOCYAAAAAAAA5JgAAAAAAAAAAAAC4JQAAAAAAALklAAAAAAAAAAAAADomAAAAAAAAOyYAAAAAAAAAAAAAuSUAAAAAAAC6JQAAAAAAAAAAAAA8JgAAAAAAAD0mAAAAAAAAAAAAALolAAAAAAAAuyUAAAAAAAAAAAAAPiYAAAAAAAA/JgAAAAAAAAAAAAC7JQAAAAAAALwlAAAAAAAAAAAAAEAmAAAAAAAAQSYAAAAAAAAAAAAAvCUAAAAAAAC9JQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAALDoAAAAAAAAsOgAAAAAAAAAAAAAAAPC/AQAAAAIAAAC3JQAAAAAAALolAAAAAAAAAAAAAAAA8L85JgAAAAAAADwmAAAAAAAAAAAAAAAA8L8"
						],
						[
							5992,
							1,
							"left_delete",
							null,
							"AgAAAPAsAAAAAAAA8CwAAAAAAAADAAAAMzEsyCwAAAAAAADILAAAAAAAAAIAAAAwLA",
							"AgAAAAAAAAABAAAAMjoAAAAAAAAyOgAAAAAAAAAAAAAAAPC/AQAAAAIAAADKLAAAAAAAAMgsAAAAAAAAAAAAAAAA8L/zLAAAAAAAAPAsAAAAAAAAAAAAAAAA8L8"
						],
						[
							5993,
							1,
							"right_delete",
							null,
							"AgAAAO4sAAAAAAAA7iwAAAAAAAABAAAAI8gsAAAAAAAAyCwAAAAAAAABAAAAIw",
							"AgAAAAAAAAABAAAALToAAAAAAAAtOgAAAAAAAAAAAAAAAPC/AQAAAAIAAADILAAAAAAAAMgsAAAAAAAAAAAAAAAA8L/uLAAAAAAAAO4sAAAAAAAAAAAAAAAA8L8"
						],
						[
							5997,
							1,
							"left_delete",
							null,
							"AgAAAO0sAAAAAAAA7SwAAAAAAAABAAAAIMgsAAAAAAAAyCwAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAKzoAAAAAAAArOgAAAAAAAAAAAAAAAPC/AQAAAAIAAADJLAAAAAAAAMksAAAAAAAAAAAAAAAA8L/uLAAAAAAAAO4sAAAAAAAAAAAAAAAA8L8"
						],
						[
							6010,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAPsdAAAAAAAA/R0AAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAKToAAAAAAAApOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAATHgAAAAAAABMeAAAAAAAAAAAAAAAA8L8"
						],
						[
							6031,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAJcrAAAAAAAAmSsAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAbDoAAAAAAABsOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADRKwAAAAAAANErAAAAAAAAAAAAAAAA8L8"
						],
						[
							6043,
							1,
							"insert",
							{
								"characters": "["
							},
							"AgAAAPYsAAAAAAAA9ywAAAAAAAAAAAAA0iwAAAAAAADTLAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA6jwAAAAAAADqPAAAAAAAAAAAAAAAAPC/AQAAAAIAAADSLAAAAAAAANIsAAAAAAAAAAAAAAAA8L/2LAAAAAAAAPYsAAAAAAAAAAAAAABAcEA"
						],
						[
							6044,
							1,
							"left_delete",
							null,
							"AgAAAPcsAAAAAAAA9ywAAAAAAAABAAAAW9IsAAAAAAAA0iwAAAAAAAABAAAAWw",
							"AgAAAAAAAAABAAAA7DwAAAAAAADsPAAAAAAAAAAAAAAAAPC/AQAAAAIAAADTLAAAAAAAANMsAAAAAAAAAAAAAAAA8L/4LAAAAAAAAPgsAAAAAAAAAAAAAAAA8L8"
						],
						[
							6045,
							1,
							"insert",
							{
								"characters": ".T"
							},
							"BAAAAPYsAAAAAAAA9ywAAAAAAAAAAAAA0iwAAAAAAADTLAAAAAAAAAAAAAD4LAAAAAAAAPksAAAAAAAAAAAAANMsAAAAAAAA1CwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA6jwAAAAAAADqPAAAAAAAAAAAAAAAAPC/AQAAAAIAAADSLAAAAAAAANIsAAAAAAAAAAAAAAAA8L/2LAAAAAAAAPYsAAAAAAAAAAAAAAAA8L8"
						],
						[
							6051,
							2,
							"left_delete",
							null,
							"BAAAAPksAAAAAAAA+SwAAAAAAAABAAAAVNMsAAAAAAAA0ywAAAAAAAABAAAAVPcsAAAAAAAA9ywAAAAAAAABAAAALtIsAAAAAAAA0iwAAAAAAAABAAAALg",
							"AgAAAAAAAAABAAAA7jwAAAAAAADuPAAAAAAAAAAAAAAAAPC/AQAAAAIAAADULAAAAAAAANQsAAAAAAAAAAAAAAAA8L/6LAAAAAAAAPosAAAAAAAAAAAAAAAA8L8"
						],
						[
							6053,
							1,
							"insert",
							{
								"characters": "[1]"
							},
							"BgAAAP4sAAAAAAAA/ywAAAAAAAAAAAAA2iwAAAAAAADbLAAAAAAAAAAAAAAALQAAAAAAAAEtAAAAAAAAAAAAANssAAAAAAAA3CwAAAAAAAAAAAAAAi0AAAAAAAADLQAAAAAAAAAAAADcLAAAAAAAAN0sAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA6jwAAAAAAADqPAAAAAAAAAAAAAAAAPC/AQAAAAIAAADaLAAAAAAAANosAAAAAAAAAAAAAAAA8L/+LAAAAAAAAP4sAAAAAAAAAAAAAAAA8L8"
						],
						[
							6066,
							2,
							"left_delete",
							null,
							"AgAAAOslAAAAAAAA6yUAAAAAAAABAAAAMuolAAAAAAAA6iUAAAAAAAABAAAALw",
							"AgAAAAAAAAABAAAA8DwAAAAAAADwPAAAAAAAAAAAAAAAAPC/AQAAAAEAAADsJQAAAAAAAOwlAAAAAAAAAAAAAAAA8L8"
						],
						[
							6073,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAMo7AAAAAAAAyjsAAAAAAAACAAAAIyA",
							"AgAAAAAAAAABAAAA7jwAAAAAAADuPAAAAAAAAAAAAAAAAPC/AQAAAAEAAADlOwAAAAAAAOU7AAAAAAAAAAAAAAAA8L8"
						],
						[
							6075,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAJw7AAAAAAAAnDsAAAAAAAACAAAAIyA",
							"AgAAAAAAAAABAAAA7DwAAAAAAADsPAAAAAAAAAAAAAAAAPC/AQAAAAEAAAC1OwAAAAAAALU7AAAAAAAAAAAAAABAb0A"
						],
						[
							6081,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AgAAANI8AAAAAAAA1DwAAAAAAAAAAAAA7TwAAAAAAADvPAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA6jwAAAAAAADqPAAAAAAAAAAAAAAAAPC/AQAAAAIAAADqPAAAAAAAAOo8AAAAAAAAAAAAAAAA8L8DPQAAAAAAAAM9AAAAAAAAAAAAAAAA8L8"
						],
						[
							6093,
							1,
							"insert",
							{
								"characters": "/2"
							},
							"AgAAAOklAAAAAAAA6iUAAAAAAAAAAAAA6iUAAAAAAADrJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA+ToAAAAAAAD5OgAAAAAAAAAAAAAAAPC/AQAAAAEAAADpJQAAAAAAAOklAAAAAAAAAAAAAAAA8L8"
						],
						[
							6099,
							2,
							"left_delete",
							null,
							"AgAAAOslAAAAAAAA6yUAAAAAAAABAAAAKeolAAAAAAAA6iUAAAAAAAABAAAAMg",
							"AgAAAAAAAAABAAAA+zoAAAAAAAD7OgAAAAAAAAAAAAAAAPC/AQAAAAEAAADsJQAAAAAAAOwlAAAAAAAAAAAAAAAA8L8"
						],
						[
							6100,
							1,
							"left_delete",
							null,
							"AQAAAOklAAAAAAAA6SUAAAAAAAABAAAALw",
							"AgAAAAAAAAABAAAA+ToAAAAAAAD5OgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqJQAAAAAAAOolAAAAAAAAAAAAAAAA8L8"
						],
						[
							6103,
							1,
							"insert",
							{
								"characters": ")"
							},
							"AQAAAOolAAAAAAAA6yUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA+DoAAAAAAAD4OgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqJQAAAAAAAOolAAAAAAAAAAAAAAAA8L8"
						],
						[
							6114,
							1,
							"left_delete",
							null,
							"AQAAAN4BAAAAAAAA3gEAAAAAAAABAAAAOQ",
							"AgAAAAAAAAABAAAA+ToAAAAAAAD5OgAAAAAAAAAAAAAAAPC/AQAAAAEAAADfAQAAAAAAAN8BAAAAAAAAAAAAAAAA8L8"
						],
						[
							6115,
							1,
							"insert",
							{
								"characters": "10"
							},
							"AgAAAN4BAAAAAAAA3wEAAAAAAAAAAAAA3wEAAAAAAADgAQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA+DoAAAAAAAD4OgAAAAAAAAAAAAAAAPC/AQAAAAEAAADeAQAAAAAAAN4BAAAAAAAAAAAAAAAA8L8"
						],
						[
							6121,
							1,
							"insert",
							{
								"characters": "/2"
							},
							"AgAAAOolAAAAAAAA6yUAAAAAAAAAAAAA6yUAAAAAAADsJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA+joAAAAAAAD6OgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqJQAAAAAAAOolAAAAAAAAAAAAAAAA8L8"
						],
						[
							6124,
							2,
							"left_delete",
							null,
							"AgAAAOslAAAAAAAA6yUAAAAAAAABAAAAMuolAAAAAAAA6iUAAAAAAAABAAAALw",
							"AgAAAAAAAAABAAAA/DoAAAAAAAD8OgAAAAAAAAAAAAAAAPC/AQAAAAEAAADsJQAAAAAAAOwlAAAAAAAAAAAAAAAA8L8"
						],
						[
							6126,
							1,
							"insert",
							{
								"characters": "/2"
							},
							"AgAAAOslAAAAAAAA7CUAAAAAAAAAAAAA7CUAAAAAAADtJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA+joAAAAAAAD6OgAAAAAAAAAAAAAAAPC/AQAAAAEAAADrJQAAAAAAAOslAAAAAAAAAAAAAAAA8L8"
						],
						[
							6137,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAANUaAAAAAAAA1hoAAAAAAAAAAAAA1hoAAAAAAADmGgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA/DoAAAAAAAD8OgAAAAAAAAAAAAAAAPC/AQAAAAEAAADVGgAAAAAAANUaAAAAAAAAAAAAAAAA8L8"
						],
						[
							6138,
							2,
							"left_delete",
							null,
							"AgAAAOIaAAAAAAAA4hoAAAAAAAAEAAAAICAgIN4aAAAAAAAA3hoAAAAAAAAEAAAAICAgIA",
							"AgAAAAAAAAABAAAADTsAAAAAAAANOwAAAAAAAAAAAAAAAPC/AQAAAAEAAADmGgAAAAAAAOYaAAAAAAAAAAAAAAAA8L8"
						],
						[
							6139,
							1,
							"insert",
							{
								"characters": "d"
							},
							"AQAAAN4aAAAAAAAA3xoAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAABTsAAAAAAAAFOwAAAAAAAAAAAAAAAPC/AQAAAAEAAADeGgAAAAAAAN4aAAAAAAAAAAAAAAAA8L8"
						],
						[
							6140,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAN8aAAAAAAAA4RoAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAABjsAAAAAAAAGOwAAAAAAAAAAAAAAAPC/AQAAAAEAAADfGgAAAAAAAN8aAAAAAAAAAAAAAAAA8L8"
						],
						[
							6141,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAAOAaAAAAAAAA4hoAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAACDsAAAAAAAAIOwAAAAAAAAAAAAAAAPC/AQAAAAEAAADgGgAAAAAAAOAaAAAAAAAAAAAAAAAA8L8"
						],
						[
							6142,
							1,
							"insert",
							{
								"characters": "g"
							},
							"AQAAAOEaAAAAAAAA4hoAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAACjsAAAAAAAAKOwAAAAAAAAAAAAAAAPC/AQAAAAEAAADhGgAAAAAAAOEaAAAAAAAAAAAAAAAA8L8"
						],
						[
							6143,
							1,
							"left_delete",
							null,
							"AQAAAOEaAAAAAAAA4RoAAAAAAAABAAAAZw",
							"AgAAAAAAAAABAAAACzsAAAAAAAALOwAAAAAAAAAAAAAAAPC/AQAAAAEAAADiGgAAAAAAAOIaAAAAAAAAAAAAAAAA8L8"
						],
						[
							6144,
							1,
							"insert",
							{
								"characters": "h"
							},
							"AQAAAOEaAAAAAAAA4hoAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAACjsAAAAAAAAKOwAAAAAAAAAAAAAAAPC/AQAAAAEAAADhGgAAAAAAAOEaAAAAAAAAAAAAAAAA8L8"
						],
						[
							6147,
							1,
							"insert",
							{
								"characters": "="
							},
							"AQAAAOQaAAAAAAAA5RoAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAACzsAAAAAAAALOwAAAAAAAAAAAAAAAPC/AQAAAAEAAADkGgAAAAAAAOQaAAAAAAAA////////738"
						],
						[
							6148,
							1,
							"insert",
							{
								"characters": " np.array"
							},
							"CQAAAOUaAAAAAAAA5hoAAAAAAAAAAAAA5hoAAAAAAADnGgAAAAAAAAAAAADnGgAAAAAAAOgaAAAAAAAAAAAAAOgaAAAAAAAA6RoAAAAAAAAAAAAA6RoAAAAAAADqGgAAAAAAAAAAAADqGgAAAAAAAOsaAAAAAAAAAAAAAOsaAAAAAAAA7BoAAAAAAAAAAAAA7BoAAAAAAADtGgAAAAAAAAAAAADtGgAAAAAAAO4aAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAADDsAAAAAAAAMOwAAAAAAAAAAAAAAAPC/AQAAAAEAAADlGgAAAAAAAOUaAAAAAAAAAAAAAAAA8L8"
						],
						[
							6149,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAO4aAAAAAAAA8BoAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAFTsAAAAAAAAVOwAAAAAAAAAAAAAAAPC/AQAAAAEAAADuGgAAAAAAAO4aAAAAAAAAAAAAAAAA8L8"
						],
						[
							6151,
							1,
							"insert",
							{
								"characters": "d"
							},
							"AQAAAO8aAAAAAAAA8BoAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAFzsAAAAAAAAXOwAAAAAAAAAAAAAAAPC/AQAAAAEAAADvGgAAAAAAAO8aAAAAAAAAAAAAAAAA8L8"
						],
						[
							6152,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAPAaAAAAAAAA8hoAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAGDsAAAAAAAAYOwAAAAAAAAAAAAAAAPC/AQAAAAEAAADwGgAAAAAAAPAaAAAAAAAAAAAAAAAA8L8"
						],
						[
							6153,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAAPEaAAAAAAAA8xoAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAGjsAAAAAAAAaOwAAAAAAAAAAAAAAAPC/AQAAAAEAAADxGgAAAAAAAPEaAAAAAAAAAAAAAAAA8L8"
						],
						[
							6154,
							1,
							"insert",
							{
								"characters": "h"
							},
							"AQAAAPIaAAAAAAAA8xoAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAHDsAAAAAAAAcOwAAAAAAAAAAAAAAAPC/AQAAAAEAAADyGgAAAAAAAPIaAAAAAAAAAAAAAAAA8L8"
						],
						[
							6156,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAAPYaAAAAAAAA9xoAAAAAAAAAAAAA9xoAAAAAAAD/GgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAHTsAAAAAAAAdOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD2GgAAAAAAAPYaAAAAAAAAAAAAAAAA8L8"
						],
						[
							6158,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAAgbAAAAAAAAChsAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAJjsAAAAAAAAmOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAIGwAAAAAAAAgbAAAAAAAAAAAAAAAAVEA"
						],
						[
							6160,
							1,
							"insert",
							{
								"characters": "imaxh"
							},
							"BQAAAP8aAAAAAAAAABsAAAAAAAAAAAAAABsAAAAAAAABGwAAAAAAAAAAAAABGwAAAAAAAAIbAAAAAAAAAAAAAAIbAAAAAAAAAxsAAAAAAAAAAAAAAxsAAAAAAAAEGwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAKDsAAAAAAAAoOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD/GgAAAAAAAP8aAAAAAAAAAAAAAAAAWUA"
						],
						[
							6161,
							1,
							"insert_completion",
							{
								"completion": "i_maxh",
								"format": "text",
								"keep_prefix": false,
								"must_insert": false,
								"trigger": "i_maxh"
							},
							"AgAAAP8aAAAAAAAA/xoAAAAAAAAFAAAAaW1heGj/GgAAAAAAAAUbAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAALTsAAAAAAAAtOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAEGwAAAAAAAAQbAAAAAAAAAAAAAAAA8L8"
						],
						[
							6162,
							1,
							"insert",
							{
								"characters": " ="
							},
							"AgAAAAUbAAAAAAAABhsAAAAAAAAAAAAABhsAAAAAAAAHGwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAALjsAAAAAAAAuOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAFGwAAAAAAAAUbAAAAAAAAAAAAAAAA8L8"
						],
						[
							6163,
							1,
							"insert",
							{
								"characters": " np.sear"
							},
							"CAAAAAcbAAAAAAAACBsAAAAAAAAAAAAACBsAAAAAAAAJGwAAAAAAAAAAAAAJGwAAAAAAAAobAAAAAAAAAAAAAAobAAAAAAAACxsAAAAAAAAAAAAACxsAAAAAAAAMGwAAAAAAAAAAAAAMGwAAAAAAAA0bAAAAAAAAAAAAAA0bAAAAAAAADhsAAAAAAAAAAAAADhsAAAAAAAAPGwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAMDsAAAAAAAAwOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAHGwAAAAAAAAcbAAAAAAAAAAAAAAAA8L8"
						],
						[
							6164,
							3,
							"delete_word",
							{
								"forward": false
							},
							"AwAAAAsbAAAAAAAACxsAAAAAAAAEAAAAc2VhcgobAAAAAAAAChsAAAAAAAABAAAALggbAAAAAAAACBsAAAAAAAACAAAAbnA",
							"AgAAAAAAAAABAAAAODsAAAAAAAA4OwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAPGwAAAAAAAA8bAAAAAAAAAAAAAAAA8L8"
						],
						[
							6165,
							1,
							"insert",
							{
								"characters": "d"
							},
							"AQAAAAgbAAAAAAAACRsAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAMTsAAAAAAAAxOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAIGwAAAAAAAAgbAAAAAAAAAAAAAAAA8L8"
						],
						[
							6166,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAAkbAAAAAAAACxsAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAMjsAAAAAAAAyOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAJGwAAAAAAAAkbAAAAAAAAAAAAAAAA8L8"
						],
						[
							6167,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAAAobAAAAAAAADBsAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAANDsAAAAAAAA0OwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAKGwAAAAAAAAobAAAAAAAAAAAAAAAA8L8"
						],
						[
							6168,
							1,
							"insert",
							{
								"characters": "h"
							},
							"AQAAAAsbAAAAAAAADBsAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAANjsAAAAAAAA2OwAAAAAAAAAAAAAAAPC/AQAAAAEAAAALGwAAAAAAAAsbAAAAAAAAAAAAAAAA8L8"
						],
						[
							6170,
							1,
							"insert",
							{
								"characters": ".searc"
							},
							"BgAAAA4bAAAAAAAADxsAAAAAAAAAAAAADxsAAAAAAAAQGwAAAAAAAAAAAAAQGwAAAAAAABEbAAAAAAAAAAAAABEbAAAAAAAAEhsAAAAAAAAAAAAAEhsAAAAAAAATGwAAAAAAAAAAAAATGwAAAAAAABQbAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAANzsAAAAAAAA3OwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAOGwAAAAAAAA4bAAAAAAAAAAAAAAAA8L8"
						],
						[
							6171,
							1,
							"insert_completion",
							{
								"completion": "searchsorted($0)",
								"format": "snippet",
								"keep_prefix": false,
								"must_insert": false,
								"trigger": "searchsorted()"
							},
							"AgAAAA8bAAAAAAAADxsAAAAAAAAFAAAAc2VhcmMPGwAAAAAAAB0bAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAPTsAAAAAAAA9OwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAUGwAAAAAAABQbAAAAAAAAAAAAAAAA8L8"
						],
						[
							6191,
							1,
							"insert",
							{
								"characters": ".ar"
							},
							"BAAAAA8bAAAAAAAAEBsAAAAAAAAAAAAAEBsAAAAAAAAQGwAAAAAAAAwAAABzZWFyY2hzb3J0ZWQQGwAAAAAAABEbAAAAAAAAAAAAABEbAAAAAAAAEhsAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAARjsAAAAAAABGOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAbGwAAAAAAAA8bAAAAAAAAAAAAAAAA8L8"
						],
						[
							6192,
							3,
							"left_delete",
							null,
							"AwAAABEbAAAAAAAAERsAAAAAAAABAAAAchAbAAAAAAAAEBsAAAAAAAABAAAAYQ8bAAAAAAAADxsAAAAAAAABAAAALg",
							"AgAAAAAAAAABAAAAPTsAAAAAAAA9OwAAAAAAAAAAAAAAAPC/AQAAAAEAAAASGwAAAAAAABIbAAAAAAAAAAAAAAAA8L8"
						],
						[
							6193,
							1,
							"insert",
							{
								"characters": "argm"
							},
							"BAAAAA8bAAAAAAAAEBsAAAAAAAAAAAAAEBsAAAAAAAARGwAAAAAAAAAAAAARGwAAAAAAABIbAAAAAAAAAAAAABIbAAAAAAAAExsAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAOjsAAAAAAAA6OwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAPGwAAAAAAAA8bAAAAAAAAAAAAAAAA8L8"
						],
						[
							6194,
							1,
							"insert",
							{
								"characters": "ax"
							},
							"AgAAABMbAAAAAAAAFBsAAAAAAAAAAAAAFBsAAAAAAAAVGwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAPjsAAAAAAAA+OwAAAAAAAAAAAAAAAPC/AQAAAAEAAAATGwAAAAAAABMbAAAAAAAAAAAAAAAA8L8"
						],
						[
							6228,
							1,
							"left_delete",
							null,
							"AQAAAB0kAAAAAAAAHSQAAAAAAAD5AAAAICAgICAjIGlmIG1heChkWyJyIl0uc2hhcGUpID4gbWF4KGRbImwiXS5zaGFwZSk6CiAgICAgICAgICAgICMgdGVtcCA9IGRbImwiXVsxXQogICAgICAgICAgICAjIGRbImwiXSA9IG5wLnplcm9zX2xpa2UoZFsiciJdKQogICAgICAgICAgICAjIGRbImwiXSA9IG5wLnZzdGFjayhkWyJyIl1bMF0sIGRbImwiXSkKCiAgICAgICAgIyByWzFdID0gclsxXVsoclsxXSA+IDAuMSldCiAgICAgICAgIyBsWzFdID0gbFsxXVsobFsxXSA+IDAuMSld",
							"AgAAAAAAAAABAAAAjjsAAAAAAACOOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAWJQAAAAAAAB0kAAAAAAAAAAAAAAAA8L8"
						],
						[
							6229,
							1,
							"insert",
							{
								"characters": "\t\t"
							},
							"AgAAAB0kAAAAAAAAHiQAAAAAAAAAAAAAHiQAAAAAAAAiJAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAlToAAAAAAACVOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAdJAAAAAAAAB0kAAAAAAAAAAAAAAAA8L8"
						],
						[
							6230,
							1,
							"insert",
							{
								"characters": "\ncombo"
							},
							"BwAAACIkAAAAAAAAIyQAAAAAAAAAAAAAIyQAAAAAAAArJAAAAAAAAAAAAAArJAAAAAAAACwkAAAAAAAAAAAAACwkAAAAAAAALSQAAAAAAAAAAAAALSQAAAAAAAAuJAAAAAAAAAAAAAAuJAAAAAAAAC8kAAAAAAAAAAAAAC8kAAAAAAAAMCQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAmjoAAAAAAACaOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAiJAAAAAAAACIkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6231,
							1,
							"insert",
							{
								"characters": " ="
							},
							"AgAAADAkAAAAAAAAMSQAAAAAAAAAAAAAMSQAAAAAAAAyJAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAqDoAAAAAAACoOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAwJAAAAAAAADAkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6232,
							1,
							"insert",
							{
								"characters": " np."
							},
							"BAAAADIkAAAAAAAAMyQAAAAAAAAAAAAAMyQAAAAAAAA0JAAAAAAAAAAAAAA0JAAAAAAAADUkAAAAAAAAAAAAADUkAAAAAAAANiQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAqjoAAAAAAACqOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAyJAAAAAAAADIkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6233,
							1,
							"insert",
							{
								"characters": "vstack"
							},
							"BgAAADYkAAAAAAAANyQAAAAAAAAAAAAANyQAAAAAAAA4JAAAAAAAAAAAAAA4JAAAAAAAADkkAAAAAAAAAAAAADkkAAAAAAAAOiQAAAAAAAAAAAAAOiQAAAAAAAA7JAAAAAAAAAAAAAA7JAAAAAAAADwkAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAArjoAAAAAAACuOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAA2JAAAAAAAADYkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6234,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAADwkAAAAAAAAPiQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAtDoAAAAAAAC0OgAAAAAAAAAAAAAAAPC/AQAAAAEAAAA8JAAAAAAAADwkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6236,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAD0kAAAAAAAAPyQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAtjoAAAAAAAC2OgAAAAAAAAAAAAAAAPC/AQAAAAEAAAA9JAAAAAAAAD0kAAAAAAAAAAAAAAAA8L8"
						],
						[
							6237,
							1,
							"insert",
							{
								"characters": "d"
							},
							"AQAAAD4kAAAAAAAAPyQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAuDoAAAAAAAC4OgAAAAAAAAAAAAAAAPC/AQAAAAEAAAA+JAAAAAAAAD4kAAAAAAAAAAAAAAAA8L8"
						],
						[
							6238,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAD8kAAAAAAAAQSQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAuToAAAAAAAC5OgAAAAAAAAAAAAAAAPC/AQAAAAEAAAA/JAAAAAAAAD8kAAAAAAAAAAAAAAAA8L8"
						],
						[
							6239,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAAEAkAAAAAAAAQiQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAuzoAAAAAAAC7OgAAAAAAAAAAAAAAAPC/AQAAAAEAAABAJAAAAAAAAEAkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6240,
							1,
							"insert",
							{
								"characters": "l"
							},
							"AQAAAEEkAAAAAAAAQiQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAvToAAAAAAAC9OgAAAAAAAAAAAAAAAPC/AQAAAAEAAABBJAAAAAAAAEEkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6258,
							1,
							"paste",
							null,
							"AgAAACskAAAAAAAAXyQAAAAAAAAAAAAAXyQAAAAAAABfJAAAAAAAABsAAABjb21ibyA9IG5wLnZzdGFjayhbZFsibCJdXSk",
							"AgAAAAAAAAABAAAAvjoAAAAAAAC+OgAAAAAAAAAAAAAAAPC/AQAAAAEAAABGJAAAAAAAACskAAAAAAAAAAAAAAAAVEA"
						],
						[
							6260,
							1,
							"left_delete",
							null,
							"AQAAAE8kAAAAAAAATyQAAAAAAAABAAAALQ",
							"AgAAAAAAAAABAAAA1zoAAAAAAADXOgAAAAAAAAAAAAAAAPC/AQAAAAEAAABQJAAAAAAAAFAkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6261,
							1,
							"insert",
							{
								"characters": ","
							},
							"AQAAAE8kAAAAAAAAUCQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA1joAAAAAAADWOgAAAAAAAAAAAAAAAPC/AQAAAAEAAABPJAAAAAAAAE8kAAAAAAAAAAAAAAAA8L8"
						],
						[
							6262,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAFAkAAAAAAAAUSQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA1zoAAAAAAADXOgAAAAAAAAAAAAAAAPC/AQAAAAEAAABQJAAAAAAAAFAkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6270,
							1,
							"permute_selection",
							{
								"operation": "reverse"
							},
							"AgAAAFQkAAAAAAAAVSQAAAAAAAABAAAAbEckAAAAAAAASCQAAAAAAAABAAAAcg",
							"AgAAAAAAAAABAAAA2DoAAAAAAADYOgAAAAAAAAAAAAAAAPC/AQAAAAIAAABIJAAAAAAAAEckAAAAAAAAAAAAAAAA8L9VJAAAAAAAAFQkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6278,
							1,
							"left_delete",
							null,
							"AQAAACskAAAAAAAAKyQAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAA2DoAAAAAAADYOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAsJAAAAAAAACwkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6283,
							1,
							"run_macro_file",
							{
								"file": "res://Packages/Default/Delete Line.sublime-macro"
							},
							"AgAAAOQkAAAAAAAA5CQAAAAAAAAWAAAAICAgICAgICBwcmludChkWyJsIl0pCs4kAAAAAAAAziQAAAAAAAAWAAAAICAgICAgICBwcmludChkWyJyIl0pCg",
							"AgAAAAAAAAABAAAA1zoAAAAAAADXOgAAAAAAAAAAAAAAAPC/AQAAAAIAAADiJAAAAAAAAOIkAAAAAAAAAAAAAAAAaUD4JAAAAAAAAPgkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6286,
							1,
							"reindent",
							null,
							"AQAAAFAlAAAAAAAAWCUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAqzoAAAAAAACrOgAAAAAAAAAAAAAAAPC/AQAAAAEAAABQJQAAAAAAAFAlAAAAAAAAAAAAAAAAJEA"
						],
						[
							6287,
							1,
							"insert",
							{
								"characters": "print"
							},
							"BQAAAFglAAAAAAAAWSUAAAAAAAAAAAAAWSUAAAAAAABaJQAAAAAAAAAAAABaJQAAAAAAAFslAAAAAAAAAAAAAFslAAAAAAAAXCUAAAAAAAAAAAAAXCUAAAAAAABdJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAszoAAAAAAACzOgAAAAAAAAAAAAAAAPC/AQAAAAEAAABYJQAAAAAAAFglAAAAAAAAAAAAAAAA8L8"
						],
						[
							6288,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAF0lAAAAAAAAXyUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAuDoAAAAAAAC4OgAAAAAAAAAAAAAAAPC/AQAAAAEAAABdJQAAAAAAAF0lAAAAAAAAAAAAAAAA8L8"
						],
						[
							6290,
							1,
							"insert",
							{
								"characters": "combo"
							},
							"BQAAAF4lAAAAAAAAXyUAAAAAAAAAAAAAXyUAAAAAAABgJQAAAAAAAAAAAABgJQAAAAAAAGElAAAAAAAAAAAAAGElAAAAAAAAYiUAAAAAAAAAAAAAYiUAAAAAAABjJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAujoAAAAAAAC6OgAAAAAAAAAAAAAAAPC/AQAAAAEAAABeJQAAAAAAAF4lAAAAAAAAAAAAAAAA8L8"
						],
						[
							6294,
							1,
							"run_macro_file",
							{
								"file": "res://Packages/Default/Delete Line.sublime-macro"
							},
							"BAAAAKYlAAAAAAAApiUAAAAAAAAWAAAAICAgICAgICBwcmludChpX21heHcpCpElAAAAAAAAkSUAAAAAAAAVAAAAICAgICAgICBwcmludChyaWdodCkKfSUAAAAAAAB9JQAAAAAAABQAAAAgICAgICAgIHByaW50KGxlZnQpCmUlAAAAAAAAZSUAAAAAAAAYAAAAICAgICAgICBwcmludChpX21heGgvMikK",
							"AgAAAAAAAAABAAAAvzoAAAAAAAC/OgAAAAAAAAAAAAAAAPC/AQAAAAUAAAB5JQAAAAAAAHklAAAAAAAAAAAAAAAAaUCQJQAAAAAAAJAlAAAAAAAAAAAAAAAA8L+kJQAAAAAAAKQlAAAAAAAAAAAAAADAZ0ClJQAAAAAAAKUlAAAAAAAAAAAAAAAAaUC6JQAAAAAAALolAAAAAAAAAAAAAAAAaUA"
						],
						[
							6310,
							1,
							"insert",
							{
								"characters": "combo"
							},
							"BQAAACskAAAAAAAALCQAAAAAAAAAAAAALCQAAAAAAAAtJAAAAAAAAAAAAAAtJAAAAAAAAC4kAAAAAAAAAAAAAC4kAAAAAAAALyQAAAAAAAAAAAAALyQAAAAAAAAwJAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAaDoAAAAAAABoOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAArJAAAAAAAACskAAAAAAAAAAAAAAAAVEA"
						],
						[
							6311,
							1,
							"insert",
							{
								"characters": " ="
							},
							"AgAAADAkAAAAAAAAMSQAAAAAAAAAAAAAMSQAAAAAAAAyJAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAbToAAAAAAABtOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAwJAAAAAAAADAkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6312,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAADIkAAAAAAAAMyQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAbzoAAAAAAABvOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAyJAAAAAAAADIkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6333,
							1,
							"reindent",
							null,
							"AQAAAF8jAAAAAAAAdyMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAcDoAAAAAAABwOgAAAAAAAAAAAAAAAPC/AQAAAAEAAABfIwAAAAAAAF8jAAAAAAAAAAAAAAAA8L8"
						],
						[
							6334,
							3,
							"left_delete",
							null,
							"AwAAAHMjAAAAAAAAcyMAAAAAAAAEAAAAICAgIG8jAAAAAAAAbyMAAAAAAAAEAAAAICAgIGsjAAAAAAAAayMAAAAAAAAEAAAAICAgIA",
							"AgAAAAAAAAABAAAAiDoAAAAAAACIOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB3IwAAAAAAAHcjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6337,
							1,
							"insert",
							{
								"characters": "\nh="
							},
							"BQAAAPUeAAAAAAAA9h4AAAAAAAAAAAAA9h4AAAAAAAD+HgAAAAAAAAAAAABoIwAAAAAAAGgjAAAAAAAADAAAACAgICAgICAgICAgIP4eAAAAAAAA/x4AAAAAAAAAAAAA/x4AAAAAAAAAHwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAfDoAAAAAAAB8OgAAAAAAAAAAAAAAAPC/AQAAAAEAAAD1HgAAAAAAAPUeAAAAAAAAAAAAAAAA8L8"
						],
						[
							6338,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAAAfAAAAAAAAAR8AAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAezoAAAAAAAB7OgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAHwAAAAAAAAAfAAAAAAAAAAAAAAAA8L8"
						],
						[
							6339,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAAEfAAAAAAAAAx8AAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAfDoAAAAAAAB8OgAAAAAAAAAAAAAAAPC/AQAAAAEAAAABHwAAAAAAAAEfAAAAAAAAAAAAAAAA8L8"
						],
						[
							6342,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAP8eAAAAAAAAAB8AAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAfjoAAAAAAAB+OgAAAAAAAAAAAAAAAPC/AQAAAAEAAAD/HgAAAAAAAP8eAAAAAAAAAAAAAAAA8L8"
						],
						[
							6347,
							1,
							"reindent",
							null,
							"AQAAAG4jAAAAAAAAhiMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAfzoAAAAAAAB/OgAAAAAAAAAAAAAAAPC/AQAAAAEAAABuIwAAAAAAAG4jAAAAAAAAAAAAAAAAXkA"
						],
						[
							6348,
							4,
							"left_delete",
							null,
							"BAAAAIIjAAAAAAAAgiMAAAAAAAAEAAAAICAgIH4jAAAAAAAAfiMAAAAAAAAEAAAAICAgIHojAAAAAAAAeiMAAAAAAAAEAAAAICAgIHYjAAAAAAAAdiMAAAAAAAAEAAAAICAgIA",
							"AgAAAAAAAAABAAAAlzoAAAAAAACXOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACGIwAAAAAAAIYjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6349,
							1,
							"insert",
							{
								"characters": "\t"
							},
							"AQAAAHYjAAAAAAAAeiMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAhzoAAAAAAACHOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB2IwAAAAAAAHYjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6350,
							1,
							"insert",
							{
								"characters": "h."
							},
							"AgAAAHojAAAAAAAAeyMAAAAAAAAAAAAAeyMAAAAAAAB8IwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAizoAAAAAAACLOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB6IwAAAAAAAHojAAAAAAAAAAAAAAAA8L8"
						],
						[
							6351,
							1,
							"insert",
							{
								"characters": "append"
							},
							"BgAAAHwjAAAAAAAAfSMAAAAAAAAAAAAAfSMAAAAAAAB+IwAAAAAAAAAAAAB+IwAAAAAAAH8jAAAAAAAAAAAAAH8jAAAAAAAAgCMAAAAAAAAAAAAAgCMAAAAAAACBIwAAAAAAAAAAAACBIwAAAAAAAIIjAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAjToAAAAAAACNOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB8IwAAAAAAAHwjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6352,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAIIjAAAAAAAAhCMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAkzoAAAAAAACTOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACCIwAAAAAAAIIjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6355,
							1,
							"insert",
							{
								"characters": "yval"
							},
							"BAAAAIMjAAAAAAAAhCMAAAAAAAAAAAAAhCMAAAAAAACFIwAAAAAAAAAAAACFIwAAAAAAAIYjAAAAAAAAAAAAAIYjAAAAAAAAhyMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAlToAAAAAAACVOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACDIwAAAAAAAIMjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6356,
							1,
							"insert_completion",
							{
								"completion": "y_val",
								"format": "snippet",
								"keep_prefix": false,
								"must_insert": false,
								"trigger": "y_val"
							},
							"AgAAAIMjAAAAAAAAgyMAAAAAAAAEAAAAeXZhbIMjAAAAAAAAiCMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAmToAAAAAAACZOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACHIwAAAAAAAIcjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6357,
							1,
							"insert",
							{
								"characters": "-"
							},
							"AQAAAIgjAAAAAAAAiSMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAmjoAAAAAAACaOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACIIwAAAAAAAIgjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6358,
							1,
							"insert",
							{
								"characters": "min"
							},
							"AwAAAIkjAAAAAAAAiiMAAAAAAAAAAAAAiiMAAAAAAACLIwAAAAAAAAAAAACLIwAAAAAAAIwjAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAmzoAAAAAAACbOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACJIwAAAAAAAIkjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6402,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAIwjAAAAAAAAjiMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAnjoAAAAAAACeOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACMIwAAAAAAAIwjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6403,
							1,
							"insert",
							{
								"characters": "vxy"
							},
							"AwAAAI0jAAAAAAAAjiMAAAAAAAAAAAAAjiMAAAAAAACPIwAAAAAAAAAAAACPIwAAAAAAAJAjAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAoDoAAAAAAACgOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACNIwAAAAAAAI0jAAAAAAAAAAAAAAAA8L8"
						],
						[
							6404,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAJAjAAAAAAAAkiMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAozoAAAAAAACjOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACQIwAAAAAAAJAjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6405,
							1,
							"insert",
							{
								"characters": "1"
							},
							"AQAAAJEjAAAAAAAAkiMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAApToAAAAAAAClOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACRIwAAAAAAAJEjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6407,
							1,
							"insert",
							{
								"characters": ","
							},
							"AQAAAJQjAAAAAAAAlSMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAApjoAAAAAAACmOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACUIwAAAAAAAJQjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6408,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAJUjAAAAAAAAliMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAApzoAAAAAAACnOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACVIwAAAAAAAJUjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6418,
							1,
							"paste",
							null,
							"AQAAAJYjAAAAAAAApyMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAqDoAAAAAAACoOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACWIwAAAAAAAJYjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6430,
							1,
							"cut",
							null,
							"AQAAAJYjAAAAAAAAliMAAAAAAAAGAAAAeV92YWwt",
							"AgAAAAAAAAABAAAAuToAAAAAAAC5OgAAAAAAAAAAAAAAAPC/AQAAAAEAAACWIwAAAAAAAJwjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6432,
							2,
							"right_delete",
							null,
							"AgAAAJcjAAAAAAAAlyMAAAAAAAABAAAAaZcjAAAAAAAAlyMAAAAAAAABAAAAbg",
							"AgAAAAAAAAABAAAAszoAAAAAAACzOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACXIwAAAAAAAJcjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6433,
							1,
							"insert",
							{
								"characters": "ax"
							},
							"AgAAAJcjAAAAAAAAmCMAAAAAAAAAAAAAmCMAAAAAAACZIwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAsToAAAAAAACxOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACXIwAAAAAAAJcjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6437,
							1,
							"insert",
							{
								"characters": "-"
							},
							"AQAAAKEjAAAAAAAAoiMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAszoAAAAAAACzOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAChIwAAAAAAAKEjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6438,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAKIjAAAAAAAAoyMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAtDoAAAAAAAC0OgAAAAAAAAAAAAAAAPC/AQAAAAEAAACiIwAAAAAAAKIjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6439,
							1,
							"paste",
							null,
							"AQAAAKMjAAAAAAAAqSMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAtToAAAAAAAC1OgAAAAAAAAAAAAAAAPC/AQAAAAEAAACjIwAAAAAAAKMjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6440,
							1,
							"left_delete",
							null,
							"AQAAAKgjAAAAAAAAqCMAAAAAAAABAAAALQ",
							"AgAAAAAAAAABAAAAuzoAAAAAAAC7OgAAAAAAAAAAAAAAAPC/AQAAAAEAAACpIwAAAAAAAKkjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6442,
							1,
							"left_delete",
							null,
							"AQAAAKIjAAAAAAAAoiMAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAujoAAAAAAAC6OgAAAAAAAAAAAAAAAPC/AQAAAAEAAACjIwAAAAAAAKMjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6448,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAAKgjAAAAAAAAqSMAAAAAAAAAAAAAqSMAAAAAAAC1IwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAuToAAAAAAAC5OgAAAAAAAAAAAAAAAPC/AQAAAAEAAACoIwAAAAAAAKgjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6449,
							1,
							"left_delete",
							null,
							"AQAAALEjAAAAAAAAsSMAAAAAAAAEAAAAICAgIA",
							"AgAAAAAAAAABAAAAxjoAAAAAAADGOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAC1IwAAAAAAALUjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6450,
							1,
							"insert",
							{
								"characters": "g"
							},
							"AQAAALEjAAAAAAAAsiMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAwjoAAAAAAADCOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACxIwAAAAAAALEjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6451,
							1,
							"left_delete",
							null,
							"AQAAALEjAAAAAAAAsSMAAAAAAAABAAAAZw",
							"AgAAAAAAAAABAAAAwzoAAAAAAADDOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACyIwAAAAAAALIjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6452,
							1,
							"insert",
							{
								"characters": "h"
							},
							"AQAAALEjAAAAAAAAsiMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAwjoAAAAAAADCOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACxIwAAAAAAALEjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6453,
							1,
							"insert",
							{
								"characters": " ="
							},
							"AgAAALIjAAAAAAAAsyMAAAAAAAAAAAAAsyMAAAAAAAC0IwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAwzoAAAAAAADDOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACyIwAAAAAAALIjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6454,
							1,
							"insert",
							{
								"characters": " np.array"
							},
							"CQAAALQjAAAAAAAAtSMAAAAAAAAAAAAAtSMAAAAAAAC2IwAAAAAAAAAAAAC2IwAAAAAAALcjAAAAAAAAAAAAALcjAAAAAAAAuCMAAAAAAAAAAAAAuCMAAAAAAAC5IwAAAAAAAAAAAAC5IwAAAAAAALojAAAAAAAAAAAAALojAAAAAAAAuyMAAAAAAAAAAAAAuyMAAAAAAAC8IwAAAAAAAAAAAAC8IwAAAAAAAL0jAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAxToAAAAAAADFOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAC0IwAAAAAAALQjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6455,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAL0jAAAAAAAAvyMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAzjoAAAAAAADOOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAC9IwAAAAAAAL0jAAAAAAAAAAAAAAAA8L8"
						],
						[
							6457,
							1,
							"insert",
							{
								"characters": "h"
							},
							"AQAAAL4jAAAAAAAAvyMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA0DoAAAAAAADQOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAC+IwAAAAAAAL4jAAAAAAAAAAAAAAAA8L8"
						],
						[
							6463,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAAMElAAAAAAAAwiUAAAAAAAAAAAAAwiUAAAAAAADKJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA0ToAAAAAAADROgAAAAAAAAAAAAAAAPC/AQAAAAEAAADBJQAAAAAAAMElAAAAAAAAAAAAAAAAVEA"
						],
						[
							6465,
							1,
							"insert",
							{
								"characters": "print"
							},
							"BQAAAMElAAAAAAAAwiUAAAAAAAAAAAAAwiUAAAAAAADDJQAAAAAAAAAAAADDJQAAAAAAAMQlAAAAAAAAAAAAAMQlAAAAAAAAxSUAAAAAAAAAAAAAxSUAAAAAAADGJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA2joAAAAAAADaOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADBJQAAAAAAAMElAAAAAAAAAAAAAAAAVEA"
						],
						[
							6466,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAMYlAAAAAAAAyCUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA3zoAAAAAAADfOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADGJQAAAAAAAMYlAAAAAAAAAAAAAAAA8L8"
						],
						[
							6468,
							1,
							"insert",
							{
								"characters": "h"
							},
							"AQAAAMclAAAAAAAAyCUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA4ToAAAAAAADhOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADHJQAAAAAAAMclAAAAAAAAAAAAAAAA8L8"
						],
						[
							6473,
							1,
							"insert",
							{
								"characters": "vstack"
							},
							"BwAAALgjAAAAAAAAuSMAAAAAAAAAAAAAuSMAAAAAAAC5IwAAAAAAAAUAAABhcnJhebkjAAAAAAAAuiMAAAAAAAAAAAAAuiMAAAAAAAC7IwAAAAAAAAAAAAC7IwAAAAAAALwjAAAAAAAAAAAAALwjAAAAAAAAvSMAAAAAAAAAAAAAvSMAAAAAAAC+IwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA4joAAAAAAADiOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAC4IwAAAAAAAL0jAAAAAAAAAAAAAAAA8L8"
						],
						[
							6475,
							1,
							"insert",
							{
								"characters": "[y"
							},
							"AgAAAIMjAAAAAAAAhCMAAAAAAAAAAAAAhCMAAAAAAACFIwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA4zoAAAAAAADjOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACDIwAAAAAAAIMjAAAAAAAAAAAAAABAakA"
						],
						[
							6476,
							1,
							"insert",
							{
								"characters": "val,"
							},
							"BAAAAIUjAAAAAAAAhiMAAAAAAAAAAAAAhiMAAAAAAACHIwAAAAAAAAAAAACHIwAAAAAAAIgjAAAAAAAAAAAAAIgjAAAAAAAAiSMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA5ToAAAAAAADlOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACFIwAAAAAAAIUjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6477,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAIkjAAAAAAAAiiMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA6ToAAAAAAADpOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACJIwAAAAAAAIkjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6479,
							1,
							"insert",
							{
								"characters": "_"
							},
							"AQAAAIUjAAAAAAAAhiMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA6joAAAAAAADqOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACFIwAAAAAAAIUjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6492,
							1,
							"left_delete",
							null,
							"AQAAAIIjAAAAAAAAgiMAAAAAAAABAAAAWw",
							"AgAAAAAAAAABAAAA6zoAAAAAAADrOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACDIwAAAAAAAIMjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6505,
							1,
							"insert_snippet",
							{
								"contents": "(${0:$SELECTION})"
							},
							"AgAAAIIjAAAAAAAAgiMAAAAAAAAtAAAAW3lfdmFsLCB5X3ZhbC1taW4odnh5WzFdKSwgbWF4KHZ4eVsxXSkteV92YWxdgiMAAAAAAACxIwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA6joAAAAAAADqOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACCIwAAAAAAAK8jAAAAAAAA////////738"
						],
						[
							6506,
							1,
							"",
							null,
							"AgAAAGwjAAAAAAAAmSMAAAAAAAAAAAAAsCMAAAAAAACwIwAAAAAAAC0AAABbeV92YWwsIHlfdmFsLW1pbih2eHlbMV0pLCBtYXgodnh5WzFdKS15X3ZhbF0",
							"AgAAAAAAAAABAAAA7DoAAAAAAADsOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACDIwAAAAAAALAjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6513,
							1,
							"left_delete",
							null,
							"AQAAAJkjAAAAAAAAmSMAAAAAAAABAAAAaw",
							"AgAAAAAAAAABAAAA7DoAAAAAAADsOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACaIwAAAAAAAJojAAAAAAAAAAAAAAAA8L8"
						],
						[
							6516,
							1,
							"insert",
							{
								"characters": "k"
							},
							"AQAAAGwjAAAAAAAAbSMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA6zoAAAAAAADrOgAAAAAAAAAAAAAAAPC/AQAAAAEAAABsIwAAAAAAAGwjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6526,
							1,
							"cut",
							null,
							"AQAAAG0jAAAAAAAAbSMAAAAAAAAtAAAAW3lfdmFsLCB5X3ZhbC1taW4odnh5WzFdKSwgbWF4KHZ4eVsxXSkteV92YWxd",
							"AgAAAAAAAAABAAAA7DoAAAAAAADsOgAAAAAAAAAAAAAAAPC/AQAAAAEAAABtIwAAAAAAAJojAAAAAAAA////////738"
						],
						[
							6530,
							1,
							"paste",
							null,
							"AQAAAIMjAAAAAAAAsCMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAvzoAAAAAAAC/OgAAAAAAAAAAAAAAAPC/AQAAAAEAAACDIwAAAAAAAIMjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6544,
							2,
							"right_delete",
							null,
							"AgAAAIQjAAAAAAAAhCMAAAAAAAAFAAAAeV92YWyEIwAAAAAAAIQjAAAAAAAAAQAAACw",
							"AgAAAAAAAAABAAAA7DoAAAAAAADsOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACEIwAAAAAAAIkjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6567,
							1,
							"insert",
							{
								"characters": ","
							},
							"AQAAAMkkAAAAAAAAyiQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA5joAAAAAAADmOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADJJAAAAAAAAMkkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6568,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAMokAAAAAAAAyyQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA5zoAAAAAAADnOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADKJAAAAAAAAMokAAAAAAAAAAAAAAAA8L8"
						],
						[
							6569,
							1,
							"insert",
							{
								"characters": "*h"
							},
							"AgAAAMskAAAAAAAAzCQAAAAAAAAAAAAAzCQAAAAAAADNJAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA6DoAAAAAAADoOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADLJAAAAAAAAMskAAAAAAAAAAAAAAAA8L8"
						],
						[
							6574,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAANAkAAAAAAAA0SQAAAAAAAAAAAAA0SQAAAAAAADZJAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA6joAAAAAAADqOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADQJAAAAAAAANAkAAAAAAAA////////738"
						],
						[
							6575,
							1,
							"run_macro_file",
							{
								"file": "res://Packages/Default/Delete to Hard BOL.sublime-macro"
							},
							"AQAAANEkAAAAAAAA0SQAAAAAAAAIAAAAICAgICAgICA",
							"AgAAAAAAAAABAAAA8zoAAAAAAADzOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADZJAAAAAAAANkkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6576,
							1,
							"left_delete",
							null,
							"AQAAANAkAAAAAAAA0CQAAAAAAAABAAAACg",
							"AgAAAAAAAAABAAAA6zoAAAAAAADrOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADRJAAAAAAAANEkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6579,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAMklAAAAAAAAyyUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA6joAAAAAAADqOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADRJQAAAAAAANElAAAAAAAAAAAAAAAA8L8"
						],
						[
							6589,
							1,
							"insert",
							{
								"characters": ".T"
							},
							"AgAAAM0kAAAAAAAAziQAAAAAAAAAAAAAziQAAAAAAADPJAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA7DoAAAAAAADsOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADNJAAAAAAAAM0kAAAAAAAAAAAAAAAA8L8"
						],
						[
							6598,
							1,
							"left_delete",
							null,
							"AQAAAMgkAAAAAAAAyCQAAAAAAAABAAAAXQ",
							"AgAAAAAAAAABAAAA4joAAAAAAADiOgAAAAAAAAAAAAAAgFZAAQAAAAEAAADJJAAAAAAAAMkkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6600,
							1,
							"insert",
							{
								"characters": "]"
							},
							"AQAAAM4kAAAAAAAAzyQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA4ToAAAAAAADhOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADOJAAAAAAAAM4kAAAAAAAAAAAAAAAA8L8"
						],
						[
							6610,
							2,
							"left_delete",
							null,
							"AgAAAN8BAAAAAAAA3wEAAAAAAAABAAAAMN4BAAAAAAAA3gEAAAAAAAABAAAAMQ",
							"AgAAAAAAAAABAAAA4joAAAAAAADiOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADgAQAAAAAAAOABAAAAAAAAAAAAAAAA8L8"
						],
						[
							6611,
							1,
							"insert",
							{
								"characters": "8"
							},
							"AQAAAN4BAAAAAAAA3wEAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA4DoAAAAAAADgOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADeAQAAAAAAAN4BAAAAAAAAAAAAAAAA8L8"
						],
						[
							6626,
							1,
							"insert",
							{
								"characters": ".shape"
							},
							"BgAAAOglAAAAAAAA6SUAAAAAAAAAAAAA6SUAAAAAAADqJQAAAAAAAAAAAADqJQAAAAAAAOslAAAAAAAAAAAAAOslAAAAAAAA7CUAAAAAAAAAAAAA7CUAAAAAAADtJQAAAAAAAAAAAADtJQAAAAAAAO4lAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA4ToAAAAAAADhOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADoJQAAAAAAAOglAAAAAAAAAAAAAAAA8L8"
						],
						[
							6636,
							1,
							"insert",
							{
								"characters": ".T"
							},
							"AgAAAOglAAAAAAAA6SUAAAAAAAAAAAAA6SUAAAAAAADqJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAANDkAAAAAAAA0OQAAAAAAAAAAAAAAAPC/AQAAAAEAAADoJQAAAAAAAOglAAAAAAAAAAAAAAAA8L8"
						],
						[
							6638,
							5,
							"left_delete",
							null,
							"BQAAAO8lAAAAAAAA7yUAAAAAAAABAAAAZe4lAAAAAAAA7iUAAAAAAAABAAAAcO0lAAAAAAAA7SUAAAAAAAABAAAAYewlAAAAAAAA7CUAAAAAAAABAAAAaOslAAAAAAAA6yUAAAAAAAABAAAAcw",
							"AgAAAAAAAAABAAAANjkAAAAAAAA2OQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwJQAAAAAAAPAlAAAAAAAAAAAAAAAA8L8"
						],
						[
							6639,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAOslAAAAAAAA7SUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAMTkAAAAAAAAxOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADrJQAAAAAAAOslAAAAAAAAAAAAAAAA8L8"
						],
						[
							6640,
							1,
							"insert",
							{
								"characters": "1:"
							},
							"AgAAAOwlAAAAAAAA7SUAAAAAAAAAAAAA7SUAAAAAAADuJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAMzkAAAAAAAAzOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADsJQAAAAAAAOwlAAAAAAAAAAAAAAAA8L8"
						],
						[
							6646,
							2,
							"left_delete",
							null,
							"AgAAAOslAAAAAAAA6yUAAAAAAAABAAAAW+olAAAAAAAA6iUAAAAAAAABAAAALg",
							"AgAAAAAAAAABAAAANTkAAAAAAAA1OQAAAAAAAAAAAAAAAPC/AQAAAAEAAADsJQAAAAAAAOwlAAAAAAAAAAAAAAAA8L8"
						],
						[
							6647,
							1,
							"insert",
							{
								"characters": "["
							},
							"AQAAAOolAAAAAAAA6yUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAMzkAAAAAAAAzOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqJQAAAAAAAOolAAAAAAAAAAAAAAAA8L8"
						],
						[
							6653,
							1,
							"insert",
							{
								"characters": "\np"
							},
							"AwAAAO8lAAAAAAAA8CUAAAAAAAAAAAAA8CUAAAAAAAD4JQAAAAAAAAAAAAD4JQAAAAAAAPklAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAgF5AAQAAAAEAAADvJQAAAAAAAO8lAAAAAAAAAAAAAAAA8L8"
						],
						[
							6654,
							1,
							"insert",
							{
								"characters": "rint"
							},
							"BAAAAPklAAAAAAAA+iUAAAAAAAAAAAAA+iUAAAAAAAD7JQAAAAAAAAAAAAD7JQAAAAAAAPwlAAAAAAAAAAAAAPwlAAAAAAAA/SUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD5JQAAAAAAAPklAAAAAAAAAAAAAAAA8L8"
						],
						[
							6655,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAP0lAAAAAAAA/yUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD9JQAAAAAAAP0lAAAAAAAAAAAAAAAA8L8"
						],
						[
							6657,
							1,
							"insert",
							{
								"characters": "np.var"
							},
							"BgAAAP4lAAAAAAAA/yUAAAAAAAAAAAAA/yUAAAAAAAAAJgAAAAAAAAAAAAAAJgAAAAAAAAEmAAAAAAAAAAAAAAEmAAAAAAAAAiYAAAAAAAAAAAAAAiYAAAAAAAADJgAAAAAAAAAAAAADJgAAAAAAAAQmAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD+JQAAAAAAAP4lAAAAAAAAAAAAAAAA8L8"
						],
						[
							6658,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAAQmAAAAAAAABiYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAEJgAAAAAAAAQmAAAAAAAAAAAAAAAA8L8"
						],
						[
							6660,
							1,
							"insert",
							{
								"characters": "combo"
							},
							"BQAAAAUmAAAAAAAABiYAAAAAAAAAAAAABiYAAAAAAAAHJgAAAAAAAAAAAAAHJgAAAAAAAAgmAAAAAAAAAAAAAAgmAAAAAAAACSYAAAAAAAAAAAAACSYAAAAAAAAKJgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAFJgAAAAAAAAUmAAAAAAAAAAAAAAAA8L8"
						],
						[
							6661,
							1,
							"insert",
							{
								"characters": ".T"
							},
							"AgAAAAomAAAAAAAACyYAAAAAAAAAAAAACyYAAAAAAAAMJgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAKJgAAAAAAAAomAAAAAAAAAAAAAAAA8L8"
						],
						[
							6662,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAAwmAAAAAAAADiYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAMJgAAAAAAAAwmAAAAAAAAAAAAAAAA8L8"
						],
						[
							6663,
							1,
							"insert",
							{
								"characters": "1:"
							},
							"AgAAAA0mAAAAAAAADiYAAAAAAAAAAAAADiYAAAAAAAAPJgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAANJgAAAAAAAA0mAAAAAAAAAAAAAAAA8L8"
						],
						[
							6666,
							1,
							"insert",
							{
								"characters": ","
							},
							"AQAAABAmAAAAAAAAESYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAQJgAAAAAAABAmAAAAAAAAAAAAAAAA8L8"
						],
						[
							6667,
							1,
							"insert",
							{
								"characters": " axis=0"
							},
							"BwAAABEmAAAAAAAAEiYAAAAAAAAAAAAAEiYAAAAAAAATJgAAAAAAAAAAAAATJgAAAAAAABQmAAAAAAAAAAAAABQmAAAAAAAAFSYAAAAAAAAAAAAAFSYAAAAAAAAWJgAAAAAAAAAAAAAWJgAAAAAAABcmAAAAAAAAAAAAABcmAAAAAAAAGCYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAARJgAAAAAAABEmAAAAAAAAAAAAAAAA8L8"
						],
						[
							6692,
							1,
							"insert",
							{
								"characters": "np.var"
							},
							"BgAAAK4kAAAAAAAAryQAAAAAAAAAAAAAryQAAAAAAACwJAAAAAAAAAAAAACwJAAAAAAAALEkAAAAAAAAAAAAALEkAAAAAAAAsiQAAAAAAAAAAAAAsiQAAAAAAACzJAAAAAAAAAAAAACzJAAAAAAAALQkAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAACuJAAAAAAAAK4kAAAAAAAAAAAAAAAA8L8"
						],
						[
							6697,
							1,
							"insert_snippet",
							{
								"contents": "(${0:$SELECTION})"
							},
							"AgAAALQkAAAAAAAAtCQAAAAAAAAfAAAAIGRbImwiXS5UWzFdLCBkWyJyIl0uVFsxXSwgKmguVLQkAAAAAAAA1SQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAC0JAAAAAAAANMkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6698,
							1,
							"insert_snippet",
							{
								"contents": "[${0:$SELECTION}]"
							},
							"AgAAALUkAAAAAAAAtSQAAAAAAAAfAAAAIGRbImwiXS5UWzFdLCBkWyJyIl0uVFsxXSwgKmguVLUkAAAAAAAA1iQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAC1JAAAAAAAANQkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6700,
							1,
							"insert",
							{
								"characters": ","
							},
							"AQAAANYkAAAAAAAA1yQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADWJAAAAAAAANYkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6701,
							1,
							"insert",
							{
								"characters": " axis=0"
							},
							"BwAAANckAAAAAAAA2CQAAAAAAAAAAAAA2CQAAAAAAADZJAAAAAAAAAAAAADZJAAAAAAAANokAAAAAAAAAAAAANokAAAAAAAA2yQAAAAAAAAAAAAA2yQAAAAAAADcJAAAAAAAAAAAAADcJAAAAAAAAN0kAAAAAAAAAAAAAN0kAAAAAAAA3iQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADXJAAAAAAAANckAAAAAAAAAAAAAAAA8L8"
						],
						[
							6709,
							1,
							"left_delete",
							null,
							"AQAAAO8lAAAAAAAA7yUAAAAAAAASAAAAcHJpbnQoY29tYm8uVFsxOl0p",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAABJgAAAAAAAO8lAAAAAAAAAAAAAAAA8L8"
						],
						[
							6712,
							1,
							"left_delete",
							null,
							"AQAAAPglAAAAAAAA+CUAAAAAAAAiAAAAcHJpbnQobnAudmFyKGNvbWJvLlRbMTpdLCBheGlzPTApKQ",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD4JQAAAAAAABomAAAAAAAA////////738"
						],
						[
							6715,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAAOMkAAAAAAAA5CQAAAAAAAAAAAAA5CQAAAAAAADsJAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADjJAAAAAAAAOMkAAAAAAAA////////738"
						],
						[
							6716,
							1,
							"insert",
							{
								"characters": "np.search"
							},
							"CQAAAOwkAAAAAAAA7SQAAAAAAAAAAAAA7SQAAAAAAADuJAAAAAAAAAAAAADuJAAAAAAAAO8kAAAAAAAAAAAAAO8kAAAAAAAA8CQAAAAAAAAAAAAA8CQAAAAAAADxJAAAAAAAAAAAAADxJAAAAAAAAPIkAAAAAAAAAAAAAPIkAAAAAAAA8yQAAAAAAAAAAAAA8yQAAAAAAAD0JAAAAAAAAAAAAAD0JAAAAAAAAPUkAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADsJAAAAAAAAOwkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6717,
							1,
							"insert_completion",
							{
								"completion": "searchsorted",
								"format": "snippet",
								"keep_prefix": false,
								"must_insert": false,
								"trigger": "searchsorted"
							},
							"AgAAAO8kAAAAAAAA7yQAAAAAAAAGAAAAc2VhcmNo7yQAAAAAAAD7JAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD1JAAAAAAAAPUkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6718,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAPskAAAAAAAA/SQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD7JAAAAAAAAPskAAAAAAAAAAAAAAAA8L8"
						],
						[
							6725,
							1,
							"insert",
							{
								"characters": "combo"
							},
							"BgAAAOwkAAAAAAAA7SQAAAAAAAAAAAAA7SQAAAAAAADtJAAAAAAAAAIAAABucO0kAAAAAAAA7iQAAAAAAAAAAAAA7iQAAAAAAADvJAAAAAAAAAAAAADvJAAAAAAAAPAkAAAAAAAAAAAAAPAkAAAAAAAA8SQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADuJAAAAAAAAOwkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6728,
							1,
							"insert",
							{
								"characters": "min"
							},
							"AwAAAP8kAAAAAAAAACUAAAAAAAAAAAAAACUAAAAAAAABJQAAAAAAAAAAAAABJQAAAAAAAAIlAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD/JAAAAAAAAP8kAAAAAAAAAAAAAAAA8L8"
						],
						[
							6732,
							2,
							"delete_word",
							{
								"forward": false
							},
							"AgAAAAIlAAAAAAAAAiUAAAAAAAABAAAAKf8kAAAAAAAA/yQAAAAAAAADAAAAbWlu",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAADJQAAAAAAAAMlAAAAAAAAAAAAAAAA8L8"
						],
						[
							6734,
							1,
							"insert",
							{
								"characters": "argmin"
							},
							"BwAAAPIkAAAAAAAA8yQAAAAAAAAAAAAA8yQAAAAAAADzJAAAAAAAAA0AAABzZWFyY2hzb3J0ZWQo8yQAAAAAAAD0JAAAAAAAAAAAAAD0JAAAAAAAAPUkAAAAAAAAAAAAAPUkAAAAAAAA9iQAAAAAAAAAAAAA9iQAAAAAAAD3JAAAAAAAAAAAAAD3JAAAAAAAAPgkAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD/JAAAAAAAAPIkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6735,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAPgkAAAAAAAA+iQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD4JAAAAAAAAPgkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6741,
							1,
							"insert",
							{
								"characters": "print("
							},
							"BgAAAOwkAAAAAAAA7SQAAAAAAAAAAAAA7SQAAAAAAADuJAAAAAAAAAAAAADuJAAAAAAAAO8kAAAAAAAAAAAAAO8kAAAAAAAA8CQAAAAAAAAAAAAA8CQAAAAAAADxJAAAAAAAAAAAAADxJAAAAAAAAPIkAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADsJAAAAAAAAOwkAAAAAAAAAAAAAAAAVEA"
						],
						[
							6743,
							1,
							"insert",
							{
								"characters": ")"
							},
							"AQAAAAAlAAAAAAAAASUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAJQAAAAAAAAAlAAAAAAAA////////738"
						],
						[
							6748,
							2,
							"left_delete",
							null,
							"AgAAAOIkAAAAAAAA4iQAAAAAAAABAAAAVOEkAAAAAAAA4SQAAAAAAAABAAAALg",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADjJAAAAAAAAOMkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6769,
							1,
							"insert",
							{
								"characters": "[11"
							},
							"AwAAAPUkAAAAAAAA9iQAAAAAAAAAAAAA9iQAAAAAAAD3JAAAAAAAAAAAAAD3JAAAAAAAAPgkAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD1JAAAAAAAAPUkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6770,
							1,
							"left_delete",
							null,
							"AQAAAPckAAAAAAAA9yQAAAAAAAABAAAAMQ",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD4JAAAAAAAAPgkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6771,
							1,
							"insert",
							{
								"characters": "]"
							},
							"AQAAAPckAAAAAAAA+CQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD3JAAAAAAAAPckAAAAAAAAAAAAAAAA8L8"
						],
						[
							6783,
							1,
							"insert",
							{
								"characters": "\nprint"
							},
							"BwAAAPIlAAAAAAAA8yUAAAAAAAAAAAAA8yUAAAAAAAD7JQAAAAAAAAAAAAD7JQAAAAAAAPwlAAAAAAAAAAAAAPwlAAAAAAAA/SUAAAAAAAAAAAAA/SUAAAAAAAD+JQAAAAAAAAAAAAD+JQAAAAAAAP8lAAAAAAAAAAAAAP8lAAAAAAAAACYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADyJQAAAAAAAPIlAAAAAAAAAAAAAAAA8L8"
						],
						[
							6784,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAAAmAAAAAAAAAiYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAJgAAAAAAAAAmAAAAAAAAAAAAAAAA8L8"
						],
						[
							6786,
							1,
							"insert",
							{
								"characters": "imaxw"
							},
							"BQAAAAEmAAAAAAAAAiYAAAAAAAAAAAAAAiYAAAAAAAADJgAAAAAAAAAAAAADJgAAAAAAAAQmAAAAAAAAAAAAAAQmAAAAAAAABSYAAAAAAAAAAAAABSYAAAAAAAAGJgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAABJgAAAAAAAAEmAAAAAAAAAAAAAAAA8L8"
						],
						[
							6787,
							1,
							"insert_completion",
							{
								"completion": "i_maxw",
								"format": "snippet",
								"keep_prefix": false,
								"must_insert": false,
								"trigger": "i_maxw"
							},
							"AgAAAAEmAAAAAAAAASYAAAAAAAAFAAAAaW1heHcBJgAAAAAAAAcmAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAGJgAAAAAAAAYmAAAAAAAAAAAAAAAA8L8"
						],
						[
							6800,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAL4lAAAAAAAAwCUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADyJQAAAAAAAPIlAAAAAAAAAAAAAAAA8L8"
						],
						[
							6802,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAP0lAAAAAAAA/yUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAKJgAAAAAAAAomAAAAAAAAAAAAAABgg0A"
						],
						[
							6803,
							1,
							"insert",
							{
								"characters": "\nimax"
							},
							"BgAAAAwmAAAAAAAADSYAAAAAAAAAAAAADSYAAAAAAAAVJgAAAAAAAAAAAAAVJgAAAAAAABYmAAAAAAAAAAAAABYmAAAAAAAAFyYAAAAAAAAAAAAAFyYAAAAAAAAYJgAAAAAAAAAAAAAYJgAAAAAAABkmAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAMJgAAAAAAAAwmAAAAAAAAAAAAAAAA8L8"
						],
						[
							6805,
							1,
							"insert_completion",
							{
								"completion": "i_maxw",
								"format": "text",
								"keep_prefix": false,
								"must_insert": false,
								"trigger": "i_maxw"
							},
							"AgAAABUmAAAAAAAAFSYAAAAAAAAEAAAAaW1heBUmAAAAAAAAGyYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAZJgAAAAAAABkmAAAAAAAAAAAAAAAA8L8"
						],
						[
							6806,
							1,
							"insert",
							{
								"characters": " ="
							},
							"AgAAABsmAAAAAAAAHCYAAAAAAAAAAAAAHCYAAAAAAAAdJgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAbJgAAAAAAABsmAAAAAAAAAAAAAAAA8L8"
						],
						[
							6807,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAB0mAAAAAAAAHiYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAdJgAAAAAAAB0mAAAAAAAAAAAAAAAA8L8"
						],
						[
							6810,
							1,
							"bh_key",
							{
								"plugin":
								{
									"args":
									{
										"remove_block": false,
										"remove_content": false,
										"remove_indent": false
									},
									"command": "bh_modules.bracketremove",
									"type":
									[
										"__all__"
									]
								}
							},
							"AgAAAAElAAAAAAAAASUAAAAAAAABAAAAKe8kAAAAAAAA7yQAAAAAAAABAAAAKA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADwJAAAAAAAAPAkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6812,
							1,
							"insert",
							{
								"characters": "c"
							},
							"AgAAAOokAAAAAAAA6yQAAAAAAAAAAAAA6yQAAAAAAADrJAAAAAAAAAYAAABwcmludGM",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADwJAAAAAAAAOokAAAAAAAAAAAAAAAAVEA"
						],
						[
							6815,
							1,
							"cut",
							null,
							"AQAAAOokAAAAAAAA6iQAAAAAAAARAAAAY29tYm9bMV0uYXJnbWluKCk",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqJAAAAAAAAPskAAAAAAAA////////738"
						],
						[
							6818,
							1,
							"paste",
							null,
							"AQAAAAYmAAAAAAAAFyYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAGJgAAAAAAAAYmAAAAAAAA////////738"
						],
						[
							6830,
							1,
							"insert",
							{
								"characters": "std"
							},
							"BAAAALEkAAAAAAAAsiQAAAAAAAAAAAAAsiQAAAAAAACyJAAAAAAAAAMAAAB2YXKyJAAAAAAAALMkAAAAAAAAAAAAALMkAAAAAAAAtCQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAACxJAAAAAAAALQkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6839,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAOUlAAAAAAAA5SUAAAAAAAACAAAAIyA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD0JQAAAAAAAPQlAAAAAAAAAAAAAAAA8L8"
						],
						[
							6840,
							1,
							"swap_line_down",
							null,
							"AgAAABYmAAAAAAAALCYAAAAAAAAAAAAA3SUAAAAAAADdJQAAAAAAABYAAAAgICAgICAgIHByaW50KGlfbWF4dykK",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADyJQAAAAAAAPIlAAAAAAAAAAAAAAAA8L8"
						],
						[
							6852,
							1,
							"left_delete",
							null,
							"AQAAAN4BAAAAAAAA3gEAAAAAAAABAAAAOA",
							"AgAAAAAAAAABAAAAKDsAAAAAAAAoOwAAAAAAAAAAAAAAAPC/AQAAAAEAAADfAQAAAAAAAN8BAAAAAAAAAAAAAAAA8L8"
						],
						[
							6853,
							1,
							"insert",
							{
								"characters": "10"
							},
							"AgAAAN4BAAAAAAAA3wEAAAAAAAAAAAAA3wEAAAAAAADgAQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAJzsAAAAAAAAnOwAAAAAAAAAAAAAAAPC/AQAAAAEAAADeAQAAAAAAAN4BAAAAAAAAAAAAAAAA8L8"
						],
						[
							6887,
							4,
							"left_delete",
							null,
							"BAAAAF8UAAAAAAAAXxQAAAAAAAACAAAANTBeFAAAAAAAAF4UAAAAAAAAAQAAACBdFAAAAAAAAF0UAAAAAAAAAQAAACtcFAAAAAAAAFwUAAAAAAAAAQAAACA",
							"AgAAAAAAAAABAAAACjsAAAAAAAAKOwAAAAAAAAAAAAAAAPC/AQAAAAEAAABhFAAAAAAAAF8UAAAAAAAAAAAAAAAA8L8"
						],
						[
							6905,
							1,
							"insert",
							{
								"characters": "var"
							},
							"BAAAAK0kAAAAAAAAriQAAAAAAAAAAAAAriQAAAAAAACuJAAAAAAAAAMAAABzdGSuJAAAAAAAAK8kAAAAAAAAAAAAAK8kAAAAAAAAsCQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAABTsAAAAAAAAFOwAAAAAAAAAAAAAAAPC/AQAAAAEAAACtJAAAAAAAALAkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6931,
							1,
							"left_delete",
							null,
							"AQAAABM6AAAAAAAAEzoAAAAAAAAEAAAAZmlsdA",
							"AgAAAAAAAAABAAAABTsAAAAAAAAFOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAXOgAAAAAAABM6AAAAAAAAAAAAAAAA8L8"
						],
						[
							6942,
							1,
							"insert",
							{
								"characters": "std"
							},
							"BAAAAK0kAAAAAAAAriQAAAAAAAAAAAAAriQAAAAAAACuJAAAAAAAAAMAAAB2YXKuJAAAAAAAAK8kAAAAAAAAAAAAAK8kAAAAAAAAsCQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAATsAAAAAAAABOwAAAAAAAAAAAAAAAPC/AQAAAAEAAACtJAAAAAAAALAkAAAAAAAAAAAAAAAA8L8"
						],
						[
							7067,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAAPslAAAAAAAA/CUAAAAAAAAAAAAA/CUAAAAAAAAEJgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAATsAAAAAAAABOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD7JQAAAAAAAPslAAAAAAAAAAAAAAAwi0A"
						],
						[
							7068,
							1,
							"insert",
							{
								"characters": "i_ma"
							},
							"BAAAAAQmAAAAAAAABSYAAAAAAAAAAAAABSYAAAAAAAAGJgAAAAAAAAAAAAAGJgAAAAAAAAcmAAAAAAAAAAAAAAcmAAAAAAAACCYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAACjsAAAAAAAAKOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAEJgAAAAAAAAQmAAAAAAAAAAAAAAAA8L8"
						],
						[
							7069,
							1,
							"insert",
							{
								"characters": "xh"
							},
							"AgAAAAgmAAAAAAAACSYAAAAAAAAAAAAACSYAAAAAAAAKJgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAADjsAAAAAAAAOOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAIJgAAAAAAAAgmAAAAAAAAAAAAAAAA8L8"
						],
						[
							7070,
							1,
							"insert",
							{
								"characters": " ="
							},
							"AgAAAAomAAAAAAAACyYAAAAAAAAAAAAACyYAAAAAAAAMJgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAEDsAAAAAAAAQOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAKJgAAAAAAAAomAAAAAAAAAAAAAAAA8L8"
						],
						[
							7071,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAAwmAAAAAAAADSYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAEjsAAAAAAAASOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAMJgAAAAAAAAwmAAAAAAAAAAAAAAAA8L8"
						],
						[
							7076,
							1,
							"paste",
							null,
							"AQAAAA0mAAAAAAAAHiYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAEzsAAAAAAAATOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAANJgAAAAAAAA0mAAAAAAAAAAAAAAAA8L8"
						],
						[
							7083,
							1,
							"left_delete",
							null,
							"AQAAAA0mAAAAAAAADSYAAAAAAAARAAAAY29tYm9bMV0uYXJnbWluKCk",
							"AgAAAAAAAAABAAAAJDsAAAAAAAAkOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAANJgAAAAAAAB4mAAAAAAAAAAAAAAAA8L8"
						],
						[
							7084,
							1,
							"run_macro_file",
							{
								"file": "res://Packages/Default/Delete to Hard BOL.sublime-macro"
							},
							"AQAAAPwlAAAAAAAA/CUAAAAAAAARAAAAICAgICAgICBpX21heGggPSA",
							"AgAAAAAAAAABAAAAEzsAAAAAAAATOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAANJgAAAAAAAA0mAAAAAAAAAAAAAAAA8L8"
						],
						[
							7085,
							1,
							"left_delete",
							null,
							"AQAAAPslAAAAAAAA+yUAAAAAAAABAAAACg",
							"AgAAAAAAAAABAAAAAjsAAAAAAAACOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD8JQAAAAAAAPwlAAAAAAAAAAAAAAAA8L8"
						],
						[
							7096,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAKokAAAAAAAAqyQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAATsAAAAAAAABOwAAAAAAAAAAAAAAAPC/AQAAAAEAAACqJAAAAAAAAKokAAAAAAAAAAAAAAAA8L8"
						],
						[
							7105,
							1,
							"duplicate_lines",
							null,
							"AQAAAIMkAAAAAAAA3yQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAjsAAAAAAAACOwAAAAAAAAAAAAAAAPC/AQAAAAEAAADeJAAAAAAAAN4kAAAAAAAAAAAAAAAA8L8"
						],
						[
							7111,
							1,
							"insert",
							{
								"characters": ")"
							},
							"AQAAACglAAAAAAAAKSUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAXjsAAAAAAABeOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAoJQAAAAAAACglAAAAAAAAAAAAAAAA8L8"
						],
						[
							7113,
							1,
							"insert",
							{
								"characters": "],"
							},
							"AgAAACglAAAAAAAAKSUAAAAAAAAAAAAAKSUAAAAAAAAqJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAXzsAAAAAAABfOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAoJQAAAAAAACglAAAAAAAAAAAAAAAA8L8"
						],
						[
							7114,
							1,
							"insert",
							{
								"characters": " axis=0"
							},
							"BwAAAColAAAAAAAAKyUAAAAAAAAAAAAAKyUAAAAAAAAsJQAAAAAAAAAAAAAsJQAAAAAAAC0lAAAAAAAAAAAAAC0lAAAAAAAALiUAAAAAAAAAAAAALiUAAAAAAAAvJQAAAAAAAAAAAAAvJQAAAAAAADAlAAAAAAAAAAAAADAlAAAAAAAAMSUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAYTsAAAAAAABhOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAqJQAAAAAAAColAAAAAAAAAAAAAAAA8L8"
						],
						[
							7122,
							1,
							"insert",
							{
								"characters": "["
							},
							"AQAAADQlAAAAAAAANSUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAaDsAAAAAAABoOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA0JQAAAAAAADQlAAAAAAAAAAAAAAAA8L8"
						],
						[
							7126,
							1,
							"insert_snippet",
							{
								"contents": "(${0:$SELECTION})"
							},
							"AgAAADQlAAAAAAAANCUAAAAAAAAGAAAAWypoLlRdNCUAAAAAAAA8JQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAaTsAAAAAAABpOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA0JQAAAAAAADolAAAAAAAAAAAAAAAA8L8"
						],
						[
							7131,
							1,
							"left_delete",
							null,
							"AQAAADwlAAAAAAAAPCUAAAAAAAAJAAAALCBheGlzPTAp",
							"AgAAAAAAAAABAAAAazsAAAAAAABrOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA8JQAAAAAAAEUlAAAAAAAAAAAAAAAA8L8"
						],
						[
							7133,
							1,
							"insert",
							{
								"characters": ","
							},
							"AQAAADslAAAAAAAAPCUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAYjsAAAAAAABiOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA7JQAAAAAAADslAAAAAAAAAAAAAAAA8L8"
						],
						[
							7134,
							1,
							"insert",
							{
								"characters": " axis=0"
							},
							"BwAAADwlAAAAAAAAPSUAAAAAAAAAAAAAPSUAAAAAAAA+JQAAAAAAAAAAAAA+JQAAAAAAAD8lAAAAAAAAAAAAAD8lAAAAAAAAQCUAAAAAAAAAAAAAQCUAAAAAAABBJQAAAAAAAAAAAABBJQAAAAAAAEIlAAAAAAAAAAAAAEIlAAAAAAAAQyUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAYzsAAAAAAABjOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA8JQAAAAAAADwlAAAAAAAAAAAAAAAA8L8"
						],
						[
							7138,
							1,
							"insert",
							{
								"characters": "np.std"
							},
							"BgAAADQlAAAAAAAANSUAAAAAAAAAAAAANSUAAAAAAAA2JQAAAAAAAAAAAAA2JQAAAAAAADclAAAAAAAAAAAAADclAAAAAAAAOCUAAAAAAAAAAAAAOCUAAAAAAAA5JQAAAAAAAAAAAAA5JQAAAAAAADolAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAajsAAAAAAABqOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA0JQAAAAAAADQlAAAAAAAAAAAAAAAA8L8"
						],
						[
							7148,
							1,
							"insert",
							{
								"characters": "\nprint"
							},
							"BwAAAEcmAAAAAAAASCYAAAAAAAAAAAAASCYAAAAAAABQJgAAAAAAAAAAAABQJgAAAAAAAFEmAAAAAAAAAAAAAFEmAAAAAAAAUiYAAAAAAAAAAAAAUiYAAAAAAABTJgAAAAAAAAAAAABTJgAAAAAAAFQmAAAAAAAAAAAAAFQmAAAAAAAAVSYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAcDsAAAAAAABwOwAAAAAAAAAAAAAAAPC/AQAAAAEAAABHJgAAAAAAAEcmAAAAAAAAAAAAAAAA8L8"
						],
						[
							7149,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAFUmAAAAAAAAVyYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAfjsAAAAAAAB+OwAAAAAAAAAAAAAAAPC/AQAAAAEAAABVJgAAAAAAAFUmAAAAAAAAAAAAAAAA8L8"
						],
						[
							7151,
							1,
							"insert",
							{
								"characters": "combo"
							},
							"BQAAAFYmAAAAAAAAVyYAAAAAAAAAAAAAVyYAAAAAAABYJgAAAAAAAAAAAABYJgAAAAAAAFkmAAAAAAAAAAAAAFkmAAAAAAAAWiYAAAAAAAAAAAAAWiYAAAAAAABbJgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAgDsAAAAAAACAOwAAAAAAAAAAAAAAAPC/AQAAAAEAAABWJgAAAAAAAFYmAAAAAAAAAAAAAAAA8L8"
						],
						[
							7174,
							1,
							"insert",
							{
								"characters": "max"
							},
							"BAAAAHomAAAAAAAAeyYAAAAAAAAAAAAAeyYAAAAAAAB7JgAAAAAAAAMAAABtaW57JgAAAAAAAHwmAAAAAAAAAAAAAHwmAAAAAAAAfSYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAhTsAAAAAAACFOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAB9JgAAAAAAAHomAAAAAAAAAAAAAAAA8L8"
						],
						[
							7189,
							1,
							"insert",
							{
								"characters": "filt"
							},
							"BAAAAJc6AAAAAAAAmDoAAAAAAAAAAAAAmDoAAAAAAACZOgAAAAAAAAAAAACZOgAAAAAAAJo6AAAAAAAAAAAAAJo6AAAAAAAAmzoAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAlzoAAAAAAACXOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB9JgAAAAAAAH0mAAAAAAAAAAAAAAAA8L8"
						],
						[
							7196,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAABQVAAAAAAAAFRUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAFBUAAAAAAAAUFQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB9JgAAAAAAAH0mAAAAAAAAAAAAAAAA8L8"
						],
						[
							7197,
							1,
							"insert",
							{
								"characters": "+50"
							},
							"AwAAABUVAAAAAAAAFhUAAAAAAAAAAAAAFhUAAAAAAAAXFQAAAAAAAAAAAAAXFQAAAAAAABgVAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAFRUAAAAAAAAVFQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB+JgAAAAAAAH4mAAAAAAAAAAAAAAAA8L8"
						],
						[
							7198,
							4,
							"left_delete",
							null,
							"BAAAABcVAAAAAAAAFxUAAAAAAAABAAAAMBYVAAAAAAAAFhUAAAAAAAABAAAANRUVAAAAAAAAFRUAAAAAAAABAAAAKxQVAAAAAAAAFBUAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAGBUAAAAAAAAYFQAAAAAAAAAAAAAAAPC/AQAAAAEAAACBJgAAAAAAAIEmAAAAAAAAAAAAAAAA8L8"
						],
						[
							7200,
							1,
							"insert",
							{
								"characters": " +"
							},
							"AgAAAFwUAAAAAAAAXRQAAAAAAAAAAAAAXRQAAAAAAABeFAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAXBQAAAAAAABcFAAAAAAAAAAAAAAAMIFAAQAAAAEAAAB9JgAAAAAAAH0mAAAAAAAAAAAAAAAA8L8"
						],
						[
							7201,
							1,
							"insert",
							{
								"characters": " 50"
							},
							"AwAAAF4UAAAAAAAAXxQAAAAAAAAAAAAAXxQAAAAAAABgFAAAAAAAAAAAAABgFAAAAAAAAGEUAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAXhQAAAAAAABeFAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/JgAAAAAAAH8mAAAAAAAAAAAAAAAA8L8"
						],
						[
							7208,
							1,
							"insert",
							{
								"characters": "min"
							},
							"BAAAAH8mAAAAAAAAgCYAAAAAAAAAAAAAgCYAAAAAAACAJgAAAAAAAAMAAABtYXiAJgAAAAAAAIEmAAAAAAAAAAAAAIEmAAAAAAAAgiYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAABhQAAAAAAAAGFAAAAAAAAAAAAAAAAPC/AQAAAAEAAACCJgAAAAAAAH8mAAAAAAAAAAAAAAAA8L8"
						],
						[
							7217,
							1,
							"insert",
							{
								"characters": "2"
							},
							"AgAAAHkmAAAAAAAAeiYAAAAAAAAAAAAAeiYAAAAAAAB6JgAAAAAAAAEAAAAx",
							"AgAAAAAAAAABAAAABhQAAAAAAAAGFAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB6JgAAAAAAAHkmAAAAAAAAAAAAAAAA8L8"
						],
						[
							7225,
							1,
							"insert",
							{
								"characters": "1"
							},
							"AgAAAHkmAAAAAAAAeiYAAAAAAAAAAAAAeiYAAAAAAAB6JgAAAAAAAAEAAAAy",
							"AgAAAAAAAAABAAAABhQAAAAAAAAGFAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB6JgAAAAAAAHkmAAAAAAAAAAAAAAAA8L8"
						],
						[
							7228,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAOwkAAAAAAAA7iQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAABhQAAAAAAAAGFAAAAAAAAAAAAAAAAPC/AQAAAAEAAAD9JAAAAAAAAP0kAAAAAAAAAAAAAABAb0A"
						],
						[
							7237,
							1,
							"insert",
							{
								"characters": "ax"
							},
							"AwAAAIEmAAAAAAAAgiYAAAAAAAAAAAAAgiYAAAAAAACCJgAAAAAAAAMAAABtaW6CJgAAAAAAAIMmAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAABhQAAAAAAAAGFAAAAAAAAAAAAAAAAPC/AQAAAAEAAACEJgAAAAAAAIEmAAAAAAAAAAAAAAAA8L8"
						],
						[
							7243,
							1,
							"insert",
							{
								"characters": "m"
							},
							"AQAAAIEmAAAAAAAAgiYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAABhQAAAAAAAAGFAAAAAAAAAAAAAAAAPC/AQAAAAEAAACBJgAAAAAAAIEmAAAAAAAAAAAAAAAA8L8"
						],
						[
							7261,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"MAAAAKVDAAAAAAAApUMAAAAAAAACAAAAIyB3QwAAAAAAAHdDAAAAAAAAAgAAACMgSUMAAAAAAABJQwAAAAAAAAIAAAAjIBBDAAAAAAAAEEMAAAAAAAACAAAAIyDUQgAAAAAAANRCAAAAAAAAAgAAACMgm0IAAAAAAACbQgAAAAAAAAIAAAAjIF9CAAAAAAAAX0IAAAAAAAACAAAAIyAuQgAAAAAAAC5CAAAAAAAAAgAAACMg60EAAAAAAADrQQAAAAAAAAIAAAAjINFBAAAAAAAA0UEAAAAAAAACAAAAIyC7QQAAAAAAALtBAAAAAAAAAgAAACMgpUEAAAAAAAClQQAAAAAAAAIAAAAjIItBAAAAAAAAi0EAAAAAAAACAAAAIyBxQQAAAAAAAHFBAAAAAAAAAgAAACMgZUEAAAAAAABlQQAAAAAAAAIAAAAjIElBAAAAAAAASUEAAAAAAAACAAAAIyAuQQAAAAAAAC5BAAAAAAAAAgAAACMgE0EAAAAAAAATQQAAAAAAAAIAAAAjIPtAAAAAAAAA+0AAAAAAAAACAAAAIyDHQAAAAAAAAMdAAAAAAAAAAgAAACMgr0AAAAAAAACvQAAAAAAAAAIAAAAjIJJAAAAAAAAAkkAAAAAAAAACAAAAIyBqQAAAAAAAAGpAAAAAAAAAAgAAACMgUEAAAAAAAABQQAAAAAAAAAIAAAAjIDFAAAAAAAAAMUAAAAAAAAACAAAAIyAbQAAAAAAAABtAAAAAAAAAAgAAACMgBUAAAAAAAAAFQAAAAAAAAAIAAAAjIPI/AAAAAAAA8j8AAAAAAAACAAAAIyDdPwAAAAAAAN0/AAAAAAAAAgAAACMgxj8AAAAAAADGPwAAAAAAAAIAAAAjIKs/AAAAAAAAqz8AAAAAAAACAAAAIyCHPwAAAAAAAIc/AAAAAAAAAgAAACMgXz8AAAAAAABfPwAAAAAAAAIAAAAjIDo/AAAAAAAAOj8AAAAAAAACAAAAIyAcPwAAAAAAABw/AAAAAAAAAgAAACMgGD8AAAAAAAAYPwAAAAAAAAIAAAAjIA8/AAAAAAAADz8AAAAAAAACAAAAIyDzPgAAAAAAAPM+AAAAAAAAAgAAACMg4z4AAAAAAADjPgAAAAAAAAIAAAAjIME+AAAAAAAAwT4AAAAAAAACAAAAIyCgPgAAAAAAAKA+AAAAAAAAAgAAACMgfz4AAAAAAAB/PgAAAAAAAAIAAAAjIHU+AAAAAAAAdT4AAAAAAAACAAAAIyBpPgAAAAAAAGk+AAAAAAAAAgAAACMgZD4AAAAAAABkPgAAAAAAAAIAAAAjIBc+AAAAAAAAFz4AAAAAAAACAAAAIyD5PQAAAAAAAPk9AAAAAAAAAgAAACMg4T0AAAAAAADhPQAAAAAAAAIAAAAjIA",
							"AgAAAAAAAAABAAAA1kMAAAAAAADhPQAAAAAAAAAAAAAAAPC/AQAAAAEAAACGJgAAAAAAAIYmAAAAAAAAAAAAAAAA8L8"
						],
						[
							7275,
							1,
							"insert",
							{
								"characters": "min"
							},
							"BAAAAIEmAAAAAAAAgiYAAAAAAAAAAAAAgiYAAAAAAACCJgAAAAAAAAMAAABtYXiCJgAAAAAAAIMmAAAAAAAAAAAAAIMmAAAAAAAAhCYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA9j0AAAAAAAD2PQAAAAAAAAAAAAAAAPC/AQAAAAEAAACEJgAAAAAAAIEmAAAAAAAAAAAAAAAA8L8"
						],
						[
							7292,
							4,
							"left_delete",
							null,
							"BAAAAGAUAAAAAAAAYBQAAAAAAAABAAAAMF8UAAAAAAAAXxQAAAAAAAABAAAANV4UAAAAAAAAXhQAAAAAAAABAAAAIF0UAAAAAAAAXRQAAAAAAAABAAAAKw",
							"AgAAAAAAAAABAAAA9j0AAAAAAAD2PQAAAAAAAAAAAAAAAPC/AQAAAAEAAABhFAAAAAAAAGEUAAAAAAAAAAAAAAAA8L8"
						],
						[
							7303,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AgAAAFMmAAAAAAAAVSYAAAAAAAAAAAAAjSYAAAAAAACPJgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAnT8AAAAAAACdPwAAAAAAAAAAAAAAAPC/AQAAAAIAAABfJgAAAAAAAF8mAAAAAAAAAAAAAAAA8L+YJgAAAAAAAJgmAAAAAAAAAAAAAAAA8L8"
						]
					]
				},
				{
					"contents": "\n\n\n\n\n\n\n\n\n\n\n(display data): 406\n\n\n\n\nError: TypeError, scatter() got multiple values for argument 'c'.\n            \nTraceback:\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/2975329836.py in <module>\n     15 # ax.scatter(*vxy, c=cc)\n     16 \n---> 17 ax.scatter(*vv[0], c=cc)\n     18 ax.scatter(*vv[1], c=cc)\n     19 # ax.scatter(*vv_, c=cc_, cmap=\"Reds\")\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/matplotlib/__init__.py in inner(ax, data, *args, **kwargs)\n   1359     def inner(ax, *args, data=None, **kwargs):\n   1360         if data is None:\n-> 1361             return func(ax, *map(sanitize_sequence, args), **kwargs)\n   1362 \n   1363         bound = new_sig.bind(ax, *args, **kwargs)\n\nTypeError: scatter() got multiple values for argument 'c'\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\n(stdout):\n(4, 14791)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\n\n\n(stdout):\n44\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\n\n\n(stdout):\n47\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n(display data): 8\n\n\n(stdout):\n47\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\n\n\n(stdout):\n47\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\n(stdout):\n59\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\n(stdout):\n59\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\n\n\nError: ValueError, all the input array dimensions for the concatenation axis must match exactly, but along dimension 1, the array at index 0 has size 124 and the array at index 1 has size 1.\n            \nTraceback:\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/685713987.py in <module>\n      7     analog=False,\n      8 )\n----> 9 eye = Eye()\n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/761890603.py in __init__(self, _filt)\n     22         self.xline = None\n     23         self.yline = None\n---> 24         self.gen_plt_data(_top, _bot)\n     25         print(self.scatter.keys())\n     26 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/761890603.py in gen_plt_data(self, top, bot)\n     39         self.plot[\"signal\"] = np.stack([[self.t, top], [self.t, bot]], axis=2)\n     40         self.init_points(top, bot)\n---> 41         self.scan(self.plot[\"signal\"])\n     42     #%%\n     43 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/761890603.py in scan(self, h_eye)\n    113         d[\"l\"] = SortedArray(d[\"l\"], unique = \"min\").array\n    114 \n--> 115         combo = np.vstack([d[\"r\"].T[0],np.std([ d[\"l\"].T[1], d[\"r\"].T[1]]), np.std([ *h.T])])\n    116 \n    117         left  = np.searchsorted(d[\"l\"].T[1], i_maxh/2)\n\n<__array_function__ internals> in vstack(*args, **kwargs)\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/numpy/core/shape_base.py in vstack(tup)\n    280     if not isinstance(arrs, list):\n    281         arrs = [arrs]\n--> 282     return _nx.concatenate(arrs, 0)\n    283 \n    284 \n\n<__array_function__ internals> in concatenate(*args, **kwargs)\n\nValueError: all the input array dimensions for the concatenation axis must match exactly, but along dimension 1, the array at index 0 has size 124 and the array at index 1 has size 1\n(stdout):\n[[ 24.    25.    26.    27.    28.    29.    30.    31.    32.    33.\n   34.    35.    36.    37.    38.    39.    40.    41.    42.    43.\n   44.    45.    46.    47.    48.    49.    50.    51.    52.    53.\n   54.    55.    56.    57.    58.    59.    60.    61.    62.    63.\n   64.    65.    66.    67.    68.    69.    70.    71.    72.    73.\n   74.    75.    76.    77.    78.    79.    80.    81.    82.    83.\n   84.    85.    86.    87.    88.    89.    90.    91.    92.    93.\n   94.    95.    96.    97.    98.    99.   100.   101.   102.   103.\n  104.   105.   106.   107.   108.   109.   110.  ]\n [ 32.37  31.72  31.07  30.43  29.79  29.14  28.51  27.87  27.25  26.62\n   26.    25.38  24.79  24.19  23.61  23.03  22.46  21.9   21.34  20.79\n   20.26  19.73  19.22  18.73  18.24  17.76  17.3   16.86  16.45  16.05\n   15.67  15.3   14.99  14.69  14.41  14.16  13.96  13.79  13.63  13.52\n   13.47  13.43  13.43  13.49  13.57  13.67  13.84  14.02  14.25  14.5\n   14.79  15.1   15.44  15.8   16.2   16.62  17.04  17.49  17.96  18.45\n   18.95  19.47  19.99  20.53  21.09  21.65  22.23  22.82  23.42  24.02\n   24.63  25.25  25.88  26.53  26.96  27.52  28.08  28.66  29.24  29.82\n   30.41  31.01  31.61  32.21  31.57  32.22  32.88]]\n86\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n(stdout):\n[[19.   20.   21.   22.   23.   24.   25.   26.   27.   28.   29.   30.\n  31.   32.   33.   34.   35.   36.   37.   38.   39.   40.   41.   42.\n  43.   44.   45.   46.   47.   48.   49.   50.   51.   52.   53.   54.\n  55.   56.   57.   58.   59.   60.   61.   62.   63.   64.   65.   66.\n  67.   68.   69.   70.   71.   72.   73.   74.   75.   76.   77.   78.\n  79.   80.   81.   82.   83.   84.   85.   86.   87.   88.   89.   90.\n  91.   92.   93.   94.   95.   96.   97.  ]\n [29.88 29.07 28.43 27.79 27.16 26.52 25.89 25.28 24.66 24.05 23.43 22.83\n  22.23 21.64 21.06 20.48 19.92 19.36 18.81 18.28 17.77 17.25 16.76 16.28\n  15.81 15.37 14.95 14.55 14.17 13.82 13.5  13.22 12.96 12.74 12.55 12.41\n  12.3  12.23 12.2  12.22 12.28 12.37 12.51 12.68 12.9  13.15 13.43 13.74\n  14.08 14.45 14.84 15.26 15.69 16.15 16.64 17.25 17.78 18.33 18.88 19.46\n  20.03 20.61 21.22 21.81 22.43 23.04 23.66 24.3  24.93 25.57 26.22 26.69\n  27.28 27.87 28.47 29.08 28.58 29.23 29.88]]\n0\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n(stdout):\n[[ 52.    53.    54.    55.    56.    57.    58.    59.    60.    61.\n   62.    63.    64.    65.    66.    67.    68.    69.    70.    71.\n   72.    73.    74.    75.    76.    77.    78.    79.    80.    81.\n   82.    83.    84.    85.    86.    87.    88.    89.    90.    91.\n   92.    93.    94.    95.    96.    97.    98.    99.   100.   101.\n  102.   103.   104.   105.   106.   107.   108.   109.   110.   111.\n  112.   113.   114.   115.   116.   117.   118.   119.   120.   121.\n  122.   123.   124.   125.  ]\n [ 27.42  26.73  26.11  25.45  24.82  24.17  23.54  22.91  22.29  22.19\n   21.57  20.96  20.36  19.76  19.17  18.59  17.89  17.33  16.79  16.26\n   15.74  15.23  14.75  14.28  13.83  13.43  13.03  12.68  12.36  12.11\n   12.88  12.67  12.49  12.38  12.28  12.25  12.24  12.27  12.36  12.48\n   11.94  12.04  12.19  12.39  12.63  12.9   13.2   13.54  13.91  14.32\n   14.75  15.19  15.65  16.15  16.64  17.15  17.66  18.2   18.32  18.83\n   19.4   19.98  20.57  21.18  21.79  22.41  23.16  23.82  24.47  25.11\n   25.43  26.09  26.75  27.42]]\n0\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n(display data): <Figure size 1152x576 with 8 Axes>\n(stdout):\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n(stdout):\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n(stdout):\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n(display data): <Figure size 1152x576 with 8 Axes>",
					"settings":
					{
						"buffer_size": 7547,
						"line_ending": "Unix",
						"name": "*Helium Output* [] 81dccb3a-0502-4823-9294-3a5cb070523c",
						"read_only": true,
						"scratch": true
					},
					"undo_stack":
					[
						[
							1,
							2,
							"append",
							{
								"characters": "\n\n"
							},
							"AgAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAAEAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							2,
							2,
							"append",
							{
								"characters": "\n\n"
							},
							"AgAAAAQAAAAAAAAABgAAAAAAAAAAAAAABgAAAAAAAAAIAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							3,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAAgAAAAAAAAACgAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							4,
							1,
							"append",
							{
								"characters": "\n(display data): 406"
							},
							"AQAAAAoAAAAAAAAAHgAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							5,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAB4AAAAAAAAAIAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							6,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAACAAAAAAAAAAIgAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							7,
							1,
							"append",
							{
								"characters": "\nError: TypeError, scatter() got multiple values for argument 'c'.\n            \nTraceback:\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/2975329836.py in <module>\n     15 # ax.scatter(*vxy, c=cc)\n     16 \n---> 17 ax.scatter(*vv[0], c=cc)\n     18 ax.scatter(*vv[1], c=cc)\n     19 # ax.scatter(*vv_, c=cc_, cmap=\"Reds\")\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/matplotlib/__init__.py in inner(ax, data, *args, **kwargs)\n   1359     def inner(ax, *args, data=None, **kwargs):\n   1360         if data is None:\n-> 1361             return func(ax, *map(sanitize_sequence, args), **kwargs)\n   1362 \n   1363         bound = new_sig.bind(ax, *args, **kwargs)\n\nTypeError: scatter() got multiple values for argument 'c'"
							},
							"AQAAACIAAAAAAAAAtwMAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							8,
							1,
							"append",
							{
								"characters": "\n(display data): <Figure size 5000x2500 with 1 Axes>"
							},
							"AQAAALcDAAAAAAAA6wMAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							9,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAOsDAAAAAAAA7QMAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							10,
							1,
							"append",
							{
								"characters": "\n(stdout):\n(4, 14791)\n"
							},
							"AQAAAO0DAAAAAAAAAwQAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							11,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAAMEAAAAAAAABQQAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							12,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAAUEAAAAAAAABwQAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							13,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAAcEAAAAAAAACQQAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							14,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAAkEAAAAAAAACwQAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							15,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAAsEAAAAAAAADQQAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							16,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAA0EAAAAAAAADwQAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							17,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAA8EAAAAAAAAEQQAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							18,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAABEEAAAAAAAAEwQAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							19,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAABMEAAAAAAAAFQQAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							20,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAABUEAAAAAAAAFwQAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							21,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAABcEAAAAAAAAGQQAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							22,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAABkEAAAAAAAAGwQAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							23,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAABsEAAAAAAAAHQQAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							24,
							1,
							"append",
							{
								"characters": "\n(display data): <Figure size 5000x2500 with 1 Axes>"
							},
							"AQAAAB0EAAAAAAAAUQQAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							25,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAFEEAAAAAAAAUwQAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							26,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAFMEAAAAAAAAVQQAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							27,
							1,
							"append",
							{
								"characters": "\n(stdout):\n44\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAFUEAAAAAAAAlQQAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							28,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAJUEAAAAAAAAlwQAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							29,
							1,
							"append",
							{
								"characters": "\n(display data): <Figure size 5000x2500 with 1 Axes>"
							},
							"AQAAAJcEAAAAAAAAywQAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							30,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAMsEAAAAAAAAzQQAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							31,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAM0EAAAAAAAAzwQAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							32,
							1,
							"append",
							{
								"characters": "\n(stdout):\n47\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAM8EAAAAAAAADwUAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							33,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAA8FAAAAAAAAEQUAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							34,
							1,
							"append",
							{
								"characters": "\n(display data): 8"
							},
							"AQAAABEFAAAAAAAAIwUAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							35,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAACMFAAAAAAAAJQUAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							36,
							1,
							"append",
							{
								"characters": "\n(stdout):\n47\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAACUFAAAAAAAAZQUAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							37,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAGUFAAAAAAAAZwUAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							38,
							1,
							"append",
							{
								"characters": "\n(display data): <Figure size 5000x2500 with 1 Axes>"
							},
							"AQAAAGcFAAAAAAAAmwUAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							39,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAJsFAAAAAAAAnQUAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							40,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAJ0FAAAAAAAAnwUAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							41,
							1,
							"append",
							{
								"characters": "\n(stdout):\n47\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAJ8FAAAAAAAA3wUAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							42,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAN8FAAAAAAAA4QUAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							43,
							1,
							"append",
							{
								"characters": "\n(display data): <Figure size 5000x2500 with 1 Axes>"
							},
							"AQAAAOEFAAAAAAAAFQYAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							44,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAABUGAAAAAAAAFwYAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							45,
							1,
							"append",
							{
								"characters": "\n(stdout):\n59\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAABcGAAAAAAAAVwYAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							46,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAFcGAAAAAAAAWQYAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							47,
							1,
							"append",
							{
								"characters": "\n(display data): <Figure size 5000x2500 with 1 Axes>"
							},
							"AQAAAFkGAAAAAAAAjQYAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							48,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAI0GAAAAAAAAjwYAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							49,
							1,
							"append",
							{
								"characters": "\n(stdout):\n59\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAI8GAAAAAAAAzwYAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							50,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAM8GAAAAAAAA0QYAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							51,
							1,
							"append",
							{
								"characters": "\n(display data): <Figure size 5000x2500 with 1 Axes>"
							},
							"AQAAANEGAAAAAAAABQcAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							52,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAAUHAAAAAAAABwcAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							53,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAAcHAAAAAAAACQcAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							54,
							1,
							"append",
							{
								"characters": "\nError: ValueError, all the input array dimensions for the concatenation axis must match exactly, but along dimension 1, the array at index 0 has size 124 and the array at index 1 has size 1.\n            \nTraceback:\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/685713987.py in <module>\n      7     analog=False,\n      8 )\n----> 9 eye = Eye()\n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/761890603.py in __init__(self, _filt)\n     22         self.xline = None\n     23         self.yline = None\n---> 24         self.gen_plt_data(_top, _bot)\n     25         print(self.scatter.keys())\n     26 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/761890603.py in gen_plt_data(self, top, bot)\n     39         self.plot[\"signal\"] = np.stack([[self.t, top], [self.t, bot]], axis=2)\n     40         self.init_points(top, bot)\n---> 41         self.scan(self.plot[\"signal\"])\n     42     #%%\n     43 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/761890603.py in scan(self, h_eye)\n    113         d[\"l\"] = SortedArray(d[\"l\"], unique = \"min\").array\n    114 \n--> 115         combo = np.vstack([d[\"r\"].T[0],np.std([ d[\"l\"].T[1], d[\"r\"].T[1]]), np.std([ *h.T])])\n    116 \n    117         left  = np.searchsorted(d[\"l\"].T[1], i_maxh/2)\n\n<__array_function__ internals> in vstack(*args, **kwargs)\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/numpy/core/shape_base.py in vstack(tup)\n    280     if not isinstance(arrs, list):\n    281         arrs = [arrs]\n--> 282     return _nx.concatenate(arrs, 0)\n    283 \n    284 \n\n<__array_function__ internals> in concatenate(*args, **kwargs)\n\nValueError: all the input array dimensions for the concatenation axis must match exactly, but along dimension 1, the array at index 0 has size 124 and the array at index 1 has size 1"
							},
							"AQAAAAkHAAAAAAAA4A4AAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							55,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[[ 24.    25.    26.    27.    28.    29.    30.    31.    32.    33.\n   34.    35.    36.    37.    38.    39.    40.    41.    42.    43.\n   44.    45.    46.    47.    48.    49.    50.    51.    52.    53.\n   54.    55.    56.    57.    58.    59.    60.    61.    62.    63.\n   64.    65.    66.    67.    68.    69.    70.    71.    72.    73.\n   74.    75.    76.    77.    78.    79.    80.    81.    82.    83.\n   84.    85.    86.    87.    88.    89.    90.    91.    92.    93.\n   94.    95.    96.    97.    98.    99.   100.   101.   102.   103.\n  104.   105.   106.   107.   108.   109.   110.  ]\n [ 32.37  31.72  31.07  30.43  29.79  29.14  28.51  27.87  27.25  26.62\n   26.    25.38  24.79  24.19  23.61  23.03  22.46  21.9   21.34  20.79\n   20.26  19.73  19.22  18.73  18.24  17.76  17.3   16.86  16.45  16.05\n   15.67  15.3   14.99  14.69  14.41  14.16  13.96  13.79  13.63  13.52\n   13.47  13.43  13.43  13.49  13.57  13.67  13.84  14.02  14.25  14.5\n   14.79  15.1   15.44  15.8   16.2   16.62  17.04  17.49  17.96  18.45\n   18.95  19.47  19.99  20.53  21.09  21.65  22.23  22.82  23.42  24.02\n   24.63  25.25  25.88  26.53  26.96  27.52  28.08  28.66  29.24  29.82\n   30.41  31.01  31.61  32.21  31.57  32.22  32.88]]\n86\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAOAOAAAAAAAA+BMAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							56,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[[19.   20.   21.   22.   23.   24.   25.   26.   27.   28.   29.   30.\n  31.   32.   33.   34.   35.   36.   37.   38.   39.   40.   41.   42.\n  43.   44.   45.   46.   47.   48.   49.   50.   51.   52.   53.   54.\n  55.   56.   57.   58.   59.   60.   61.   62.   63.   64.   65.   66.\n  67.   68.   69.   70.   71.   72.   73.   74.   75.   76.   77.   78.\n  79.   80.   81.   82.   83.   84.   85.   86.   87.   88.   89.   90.\n  91.   92.   93.   94.   95.   96.   97.  ]\n [29.88 29.07 28.43 27.79 27.16 26.52 25.89 25.28 24.66 24.05 23.43 22.83\n  22.23 21.64 21.06 20.48 19.92 19.36 18.81 18.28 17.77 17.25 16.76 16.28\n  15.81 15.37 14.95 14.55 14.17 13.82 13.5  13.22 12.96 12.74 12.55 12.41\n  12.3  12.23 12.2  12.22 12.28 12.37 12.51 12.68 12.9  13.15 13.43 13.74\n  14.08 14.45 14.84 15.26 15.69 16.15 16.64 17.25 17.78 18.33 18.88 19.46\n  20.03 20.61 21.22 21.81 22.43 23.04 23.66 24.3  24.93 25.57 26.22 26.69\n  27.28 27.87 28.47 29.08 28.58 29.23 29.88]]\n0\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAPgTAAAAAAAA/hcAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							57,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[[ 52.    53.    54.    55.    56.    57.    58.    59.    60.    61.\n   62.    63.    64.    65.    66.    67.    68.    69.    70.    71.\n   72.    73.    74.    75.    76.    77.    78.    79.    80.    81.\n   82.    83.    84.    85.    86.    87.    88.    89.    90.    91.\n   92.    93.    94.    95.    96.    97.    98.    99.   100.   101.\n  102.   103.   104.   105.   106.   107.   108.   109.   110.   111.\n  112.   113.   114.   115.   116.   117.   118.   119.   120.   121.\n  122.   123.   124.   125.  ]\n [ 27.42  26.73  26.11  25.45  24.82  24.17  23.54  22.91  22.29  22.19\n   21.57  20.96  20.36  19.76  19.17  18.59  17.89  17.33  16.79  16.26\n   15.74  15.23  14.75  14.28  13.83  13.43  13.03  12.68  12.36  12.11\n   12.88  12.67  12.49  12.38  12.28  12.25  12.24  12.27  12.36  12.48\n   11.94  12.04  12.19  12.39  12.63  12.9   13.2   13.54  13.91  14.32\n   14.75  15.19  15.65  16.15  16.64  17.15  17.66  18.2   18.32  18.83\n   19.4   19.98  20.57  21.18  21.79  22.41  23.16  23.82  24.47  25.11\n   25.43  26.09  26.75  27.42]]\n0\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAP4XAAAAAAAAXhwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							58,
							1,
							"append",
							{
								"characters": "\n(display data): <Figure size 1152x576 with 8 Axes>"
							},
							"AQAAAF4cAAAAAAAAkRwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							59,
							1,
							"append",
							{
								"characters": "\n(stdout):\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAJEcAAAAAAAAzhwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							60,
							1,
							"append",
							{
								"characters": "\n(stdout):\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAM4cAAAAAAAACx0AAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							61,
							1,
							"append",
							{
								"characters": "\n(stdout):\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAAsdAAAAAAAASB0AAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						],
						[
							62,
							1,
							"append",
							{
								"characters": "\n(display data): <Figure size 1152x576 with 8 Axes>"
							},
							"AQAAAEgdAAAAAAAAex0AAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
						]
					]
				}
			],
			"build_system": "",
			"build_system_choices":
			[
				[
					[
						[
							"Packages/Default/Syntax Tests.sublime-build",
							""
						],
						[
							"Packages/Default/Syntax Tests.sublime-build",
							"All Syntaxes"
						],
						[
							"Packages/Default/Syntax Tests.sublime-build",
							"Performance"
						],
						[
							"Packages/Default/Syntax Tests.sublime-build",
							"Regex Compatibility"
						]
					],
					[
						"Packages/Default/Syntax Tests.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							""
						],
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							"Traditional"
						],
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							"PdfLaTeX"
						],
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							"XeLaTeX"
						],
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							"LuaLaTeX"
						],
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							"Basic Builder"
						],
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							"Basic Builder - PdfLaTeX"
						],
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							"Basic Builder - XeLaTeX"
						],
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							"Basic Builder - LuaLaTeX"
						],
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							"Script Builder"
						]
					],
					[
						"Packages/LaTeXTools/LaTeX.sublime-build",
						""
					]
				]
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"fold all",
						"Code Folding: Fold All"
					],
					[
						"breakpoint",
						"Python Breakpoints: Toggle"
					],
					[
						"foldal",
						"Code Folding: Fold All"
					],
					[
						"connect",
						"Helium: Connect Kernel"
					],
					[
						"helium",
						"Helium: Connect Kernel"
					],
					[
						"key",
						"Preferences: Key Bindings"
					],
					[
						"scheme",
						"PackageDev: Edit Current Color Scheme"
					],
					[
						"arg",
						"Format Arguments"
					],
					[
						"helium res",
						"Helium: Restart Kernel"
					],
					[
						"theme",
						"PackageDev: Edit Current Theme"
					],
					[
						"fold",
						"Code Folding: Fold All"
					],
					[
						"black",
						"Sublack: Format file"
					],
					[
						"open",
						"PackageResourceViewer: Open Resource"
					],
					[
						"alignment",
						"Preferences: Alignment File Settings – Syntax Specific – User"
					],
					[
						"fields",
						"MultiEditUtils: Selection as Fields"
					],
					[
						"syntax python",
						"Set Syntax: Python"
					],
					[
						"open re",
						"PackageResourceViewer: Open Resource"
					],
					[
						"py",
						"Set Syntax: Python"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"syntax scheme",
						"Set Syntax: Sublime Text Color Scheme (JSON)"
					],
					[
						"extract",
						"PackageResourceViewer: Extract Package"
					],
					[
						"book",
						"Bookmarks: Toggle"
					],
					[
						"select to ",
						"Selection: Expand to Brackets"
					],
					[
						"table mode",
						"AlignTab: Live Preview Mode"
					],
					[
						"tablemode",
						"AlignTab: Exit Table Mode"
					],
					[
						"exit t",
						"AlignTab: Exit Table Mode"
					],
					[
						"aligntab",
						"AlignTab: Table Mode"
					],
					[
						"reindent",
						"Indentation: Reindent Lines"
					],
					[
						"color scheme",
						"PackageDev: Edit Current Color Scheme"
					],
					[
						"color",
						"Color Hint"
					],
					[
						"syntax shell",
						"Set Syntax: Bourne Again Shell (bash)"
					],
					[
						"html",
						"HTMLPrettify"
					],
					[
						"sftp",
						"Preferences: SFTP Settings"
					],
					[
						"markdown",
						"MarkdownLivePreview: Open Preview"
					],
					[
						"preview",
						"OmniMarkupPreviewer: Preview Current Markup in Browser"
					],
					[
						"side",
						"Side-by-Side: Select a File"
					],
					[
						"wrap",
						"Word Wrap: Toggle"
					],
					[
						"syntax markdown",
						"Set Syntax: Markdown GFM"
					],
					[
						"remove",
						"Package Control: Remove Package"
					],
					[
						"syntax markd",
						"Set Syntax: MultiMarkdown"
					],
					[
						"markdonw",
						"Markdown Preview: Preview in Browser"
					],
					[
						"r",
						"Reload All Files"
					],
					[
						"line",
						"Line Endings Unify"
					],
					[
						"shell",
						"Set Syntax: Bourne Again Shell (bash)"
					],
					[
						"syntax",
						"Set Syntax: Python"
					],
					[
						"swa",
						"BracketHighlighter: Swap Quotes"
					],
					[
						"swap q",
						"BracketHighlighter: Swap Quotes"
					],
					[
						"quote",
						"BracketHighlighter: Swap Quotes"
					],
					[
						"scope",
						"Scope Hunter: Toggle Instant Scoper"
					],
					[
						"new syntax",
						"PackageDev: New Syntax Definition"
					],
					[
						"show all",
						"SublimeLinter: Show All Errors"
					],
					[
						"reload",
						"Reload All Files"
					],
					[
						"sublime linter",
						"SublimeLinter: Show All Errors"
					],
					[
						"linter",
						"Preferences: SublimeLinter Settings"
					],
					[
						"ecc",
						"ECC: Settings"
					],
					[
						"inter",
						"Set Syntax: swig-interface"
					],
					[
						"syntac",
						"Set Syntax: C"
					],
					[
						"syntax defin",
						"Set Syntax: Sublime Text Syntax Definition (YAML)"
					],
					[
						"syntac c",
						"Set Syntax: C"
					],
					[
						"uint",
						"Set Syntax: ucfconstraints"
					],
					[
						"build",
						"Build With: Syntax Tests"
					],
					[
						"build w",
						"Build With: Syntax Tests"
					],
					[
						"reloa",
						"Reload All Files"
					],
					[
						"clanf",
						"Clang Format: Format Selection"
					],
					[
						"clang",
						"Clang Format: Format Selection"
					],
					[
						"select",
						"Selection: Expand to Scope"
					],
					[
						"expand",
						"Selection: Expand to Indentation"
					],
					[
						"disable",
						"Package Control: Disable Package"
					],
					[
						"sublack",
						"Sublack: Format file"
					],
					[
						"python",
						"Set Syntax: Python"
					],
					[
						"ruler",
						"CursorRuler: Toggle Enabled/Disabled"
					],
					[
						"jkv",
						"Set Syntax: JSON Key-Value"
					],
					[
						"json",
						"Set Syntax: JSON"
					],
					[
						"serial yaml",
						"Serialized Data Converter: JSON to YAML"
					],
					[
						"sftp li",
						"SFTP: Enter License Key"
					],
					[
						"subla",
						"Sublack: Format file"
					],
					[
						"sub",
						"Sublack: Format file"
					],
					[
						"kv",
						"Set Syntax: JSON Key-Value"
					],
					[
						"convert to json b",
						"Build With: Convert to ... - JSON"
					],
					[
						"format ya",
						"Pretty YAML: Reformat (Pretty Print) YAML"
					],
					[
						"serial",
						"Serialized Data Converter: JSON to YAML"
					],
					[
						"REPL python",
						"SublimeREPL: Python"
					],
					[
						"syntaxpython",
						"Set Syntax: Python"
					],
					[
						"sublime repl py",
						"SublimeREPL: Python - IPython"
					],
					[
						"discover",
						"Package Control: Discover Packages"
					],
					[
						"docs",
						"Anaconda: Display object docs"
					],
					[
						"side ",
						"Side-by-Side: Select a File"
					],
					[
						"ana",
						"Anaconda: Display object docs"
					],
					[
						"tcsh synt",
						"Set Syntax: (T)csh Shell Script"
					],
					[
						"syntax csh",
						"Set Syntax: (T)csh Shell Script"
					],
					[
						"csh",
						"Preferences: ColorHints Settings"
					],
					[
						"format",
						"Format Arguments"
					],
					[
						"cance",
						"SFTP: Cancel Upload"
					],
					[
						"align file",
						"Preferences: Alignment File Settings – Syntax Specific – User"
					],
					[
						"preser",
						"MultiEditUtils: Preserve Case"
					],
					[
						"argu",
						"Format Arguments"
					],
					[
						"cancel",
						"SFTP: Cancel Upload"
					],
					[
						"show",
						"SFTP: Show Panel"
					],
					[
						"shoe",
						"SublimeLinter: Show All Errors"
					],
					[
						"show s",
						"SFTP: Show Panel"
					],
					[
						"convert to json ser",
						"Serialized Data Converter: YAML to JSON"
					],
					[
						"build yaml",
						"Build With: Convert to ... - YAML (Block Style)"
					],
					[
						"disc",
						"Package Control: Discover Packages"
					],
					[
						"hjs",
						"Set Syntax: Hjson"
					],
					[
						"sysv",
						"Set Syntax: SystemVerilog"
					],
					[
						"argumen",
						"Format Arguments"
					],
					[
						"preserve",
						"MultiEditUtils: Preserve Case"
					],
					[
						"sort",
						"Sort Lines"
					],
					[
						"convert",
						"Convert Case: snake_case"
					],
					[
						"replace",
						"Replace characters in selection with spaces"
					],
					[
						"single lines",
						"Reduce strings of >=2 lines into a single line within each selection"
					],
					[
						"reduce",
						"Reduce strings of >=2 spaces into a single space within selection"
					],
					[
						"disco",
						"Package Control: Discover Packages"
					],
					[
						"onstall",
						"Package Control: Install Package"
					],
					[
						"align",
						"Preferences: Alignment File Settings – Syntax Specific – User"
					],
					[
						"install ",
						"Package Control: Install Package"
					],
					[
						"preserv",
						"MultiEditUtils: Preserve Case"
					],
					[
						"word",
						"WordHighlight: Toggle Enabled"
					],
					[
						"yaml defau",
						"Build With: Convert to ... - YAML (Default Style)"
					],
					[
						"convert to yaml",
						"Serialized Data Converter: JSON to YAML (Save)"
					],
					[
						"vindent",
						"Verilog: Reindent"
					],
					[
						"sftp ca",
						"SFTP: Cancel Upload"
					],
					[
						"sftp p",
						"SFTP: Show Panel"
					],
					[
						"table ",
						"AlignTab: Live Preview Mode"
					],
					[
						"sync scroll",
						"SyncScroll: Toggle Current View Scroll Sync"
					],
					[
						"sftp pan",
						"SFTP: Show Panel"
					],
					[
						"fz",
						"SublimeZilla: Import FileZilla Server"
					],
					[
						"block",
						"Toggle Block Comment"
					]
				],
				"width": 0.0
			},
			"console":
			{
				"height": 487.0,
				"history":
				[
					"sublime.find_resources(\"*.hidden-tmTheme\")",
					"sublime.find_resources(\"*.hidden-color-scheme\")",
					"sublime.log_commands(True)",
					"{\n  \"title\": \"Remote Desktop\",\n  \"rules\": [\n    {\n      \"description\": \"Swap command and control\",\n      \"manipulators\": [\n        {\n          \"type\": \"basic\",\n          \"from\": {\n            \"key_code\": \"left_control\",\n            \"modifiers\": {\n              \"optional\": [\n                \"any\"\n              ]\n            }\n          },\n          \"to\": [\n            {\n              \"key_code\": \"left_command\"\n            }\n          ],\n          \"conditions\": [\n            {\n              \"type\": \"frontmost_application_if\",\n              \"bundle_identifiers\": [\n                \"com\\\\.microsoft\\\\.rdc\\\\.mac\"\n              ]\n            }\n          ]\n        },\n        {\n          \"type\": \"basic\",\n          \"from\": {\n            \"key_code\": \"left_command\",\n            \"modifiers\": {\n              \"optional\": [\n                \"any\"\n              ]\n            }\n          },\n          \"to\": [\n            {\n              \"key_code\": \"left_control\"\n            }\n          ],\n          \"conditions\": [\n            {\n              \"type\": \"frontmost_application_if\",\n              \"bundle_identifiers\": [\n                \"com\\\\.microsoft\\\\.rdc\\\\.mac\"\n              ]\n            }\n          ]\n        },\n        {\n          \"type\": \"basic\",\n          \"from\": {\n            \"key_code\": \"right_control\",\n            \"modifiers\": {\n              \"optional\": [\n                \"any\"\n              ]\n            }\n          },\n          \"to\": [\n            {\n              \"key_code\": \"right_command\"\n            }\n          ],\n          \"conditions\": [\n            {\n              \"type\": \"frontmost_application_if\",\n              \"bundle_identifiers\": [\n                \"com\\\\.microsoft\\\\.rdc\\\\.mac\"\n              ]\n            }\n          ]\n        },\n        {\n          \"type\": \"basic\",\n          \"from\": {\n            \"key_code\": \"right_command\",\n            \"modifiers\": {\n              \"optional\": [\n                \"any\"\n              ]\n            }\n          },\n          \"to\": [\n            {\n              \"key_code\": \"right_control\"\n            }\n          ],\n          \"conditions\": [\n            {\n              \"type\": \"frontmost_application_if\",\n              \"bundle_identifiers\": [\n                \"com\\\\.microsoft\\\\.rdc\\\\.mac\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}",
					"rules:\n- description: Swap command and control\n  manipulators:\n  - type: basic\n    from:\n      key_code: left_control\n      modifiers:\n        optional:\n        - any\n    to:\n    - key_code: left_command\n    conditions:\n    - type: frontmost_application_if\n      bundle_identifiers:\n      - com\\.microsoft\\.rdc\\.mac\n  - type: basic\n    from:\n      key_code: left_command\n      modifiers:\n        optional:\n        - any\n    to:\n    - key_code: left_control\n    conditions:\n    - type: frontmost_application_if\n      bundle_identifiers:\n      - com\\.microsoft\\.rdc\\.mac\n  - type: basic\n    from:\n      key_code: right_control\n      modifiers:\n        optional:\n        - any\n    to:\n    - key_code: right_command\n    conditions:\n    - type: frontmost_application_if\n      bundle_identifiers:\n      - com\\.microsoft\\.rdc\\.mac\n  - type: basic\n    from:\n      key_code: right_command\n      modifiers:\n        optional:\n        - any\n    to:\n    - key_code: right_control\n    conditions:\n    - type: frontmost_application_if\n      bundle_identifiers:\n      - com\\.microsoft\\.rdc\\.mac\n",
					"com.sublimetext.4",
					"{\n          \"description\": \"escape = capslock switch\",\n          \"type\": \"basic\",\n          \"from\": {\n            \"key_code\": \"escape\",\n            \"modifiers\": {\n              \"optional\": [\n                \"caps_lock\"\n              ],\n              \"mandatory\": [\n                \"right_command\",\n                \"right_control\",\n                \"right_shift\",\n                \"right_option\"\n              ]\n            }\n          },\n          \"to\": [\n            {\n              \"key_code\": \"caps_lock\",\n              \"modifiers\": [\n                \"left_control\"\n              ]\n            }\n          ]\n        }",
					"{\n    \"title\": \"Keychron Swap\",\n    \"rules\": [{\n\n            \"description\": \"C2: Swap insert and fn\",\n            \"manipulators\": [{\n                    \"conditions\": [{\n                        \"identifiers\": [{\n                            \"description\": \"Keychron\",\n                            \"product_id\": 591\n                        }],\n                        \"type\": \"device_if\"\n                    }],\n                    \"type\": \"basic\",\n                    \"from\": {\n                        \"key_code\": \"fn\"\n                    },\n                    \"to\": {\n                        \"key_code\": \"insert\"\n                    }\n                },\n                {\n                    \"conditions\": [{\n                        \"identifiers\": [{\n                            \"description\": \"Keychron\",\n                            \"product_id\": 591\n                        }],\n                        \"type\": \"device_if\"\n                    }],\n                    \"type\": \"basic\",\n                    \"from\": {\n                        \"key_code\": \"insert\"\n                    },\n                    \"to\": {\n                        \"key_code\": \"fn\"\n                    }\n                }\n            ]\n        },\n        {\n            \"description\": \"C2: Swap CMD and CTRL\",\n            \"manipulators\": [{\n                    \"conditions\": [{\n                        \"identifiers\": [{\n                            \"description\": \"Keychron\",\n                            \"product_id\": 591\n                        }],\n                        \"type\": \"device_if\"\n                    }],\n                    \"from\": {\n                        \"key_code\": \"left_command\",\n                        \"modifiers\": {\n                            \"optional\": [\n                                \"any\"\n                            ]\n                        }\n                    },\n                    \"to\": [{\n                        \"key_code\": \"left_option\"\n                    }],\n                    \"type\": \"basic\"\n                },\n                {\n                    \"conditions\": [{\n                        \"identifiers\": [{\n                            \"description\": \"Keychron\",\n                            \"product_id\": 591\n                        }],\n                        \"type\": \"device_if\"\n                    }],\n                    \"from\": {\n                        \"key_code\": \"left_option\",\n                        \"modifiers\": {\n                            \"optional\": [\n                                \"any\"\n                            ]\n                        }\n                    },\n                    \"to\": {\n                        \"key_code\": \"left_command\"\n                    },\n                    \"type\": \"basic\"\n                },\n                {\n                    \"conditions\": [{\n                        \"identifiers\": [{\n                            \"description\": \"Keychron\",\n                            \"product_id\": 591\n                        }],\n                        \"type\": \"device_if\"\n                    }],\n                    \"from\": {\n                        \"key_code\": \"right_command\",\n                        \"modifiers\": {\n                            \"optional\": [\n                                \"any\"\n                            ]\n                        }\n                    },\n                    \"to\": [{\n                        \"key_code\": \"right_option\"\n                    }],\n                    \"type\": \"basic\"\n                },\n                {\n                    \"conditions\": [{\n                        \"identifiers\": [{\n                            \"description\": \"Keychron\",\n                            \"product_id\": 591\n                        }],\n                        \"type\": \"device_if\"\n                    }],\n                    \"from\": {\n                        \"key_code\": \"right_option\",\n                        \"modifiers\": {\n                            \"optional\": [\n                                \"any\"\n                            ]\n                        }\n                    },\n                    \"to\": {\n                        \"key_code\": \"right_command\"\n                    },\n                    \"type\": \"basic\"\n                }\n            ]\n        }\n    ]\n}",
					"- identifiers:\n  - description: Keychron\n    product_id: 591\n  type: device_if",
					"https://www.amazon.com/Skin-Tag-Remover-Patches-Fast-Acting/product-reviews/B091JDQN6D/ref=cm_cr_dp_d_show_all_btm?ie=UTF8&reviewerType=all_reviews",
					"{ \"keys\": [\"super+alt+n\"], \"command\": \"normalize_region_ends\" },",
					"command: sublime_linter_assigned {\"linter_names\": [], \"filename\": \"<untitled 800>\"}"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/Users/Phteben/stnatale/bist_gui/Bist_columns.py",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/User/Base File.sublime-settings",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/User/Python.sublime-settings",
				"/Users/Phteben/Untitled13.py",
				"/Users/Phteben/Untitled13.ipynb",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/Helium/.python-version",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/Helium/Helium.sublime-syntax",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/User/SBSCompareScheme.hidden-color-scheme",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/PackageDev/Package/Sublime Text Color Scheme/Sublime Text Color Scheme.sublime-settings",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/User/NATSTE.sublime-color-scheme",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/Color Scheme - Default/NATSTE.sublime-color-scheme",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/Color Scheme - Default/untitled.json",
				"/Users/Phteben/stnatale/swig/pmu_2Dtrain.i",
				"/Users/Phteben/stnatale/bist_gui/bist_compare_v1.py",
				"/Users/Phteben/stnatale/ddr4bist/firmware/snps_source/include/hwt_common_api.h",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/dwc_lpddr54_cuamd_tsmc7ff18_fw_phyinit_A-2020.09_20201019 copy/firmware/A-2020.09/training/source/build/eye_export_lib_preproc.c",
				"/Users/Phteben/stnatale/swig/logs/py_firstly.log",
				"/Users/Phteben/stnatale/swig/logs/ctypes_firstly.log",
				"/Users/Phteben/stnatale/swig/logs/snps_build_using_gcc.log",
				"/Users/Phteben/stnatale/swig/logs/ryana_build_using_gcc.log",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/build.sh",
				"/Users/Phteben/stnatale/swig/elf2binhelp.txt",
				"/Users/Phteben/stnatale/swig/ccachelp.txt",
				"/Users/Phteben/stnatale/swig/log.log",
				"/Users/Phteben/stnatale/swig/ctypes.log",
				"/Users/Phteben/stnatale/swig/hwt_common_api.h",
				"/Users/Phteben/stnatale/swig/pmu_2Dtrain.c",
				"/Users/Phteben/stnatale/swig/swig_build2.sh",
				"/Users/Phteben/Documents/andrew07:29:21.md",
				"/Users/Phteben/stnatale/swig/snps_source/include/hwt_common_api.h",
				"/Users/Phteben/stnatale/swig/snps_source/hwt_common_api.h",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/link.lcf",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/arc.tcf",
				"/Users/Phteben/stnatale/swig/swig_build.sh",
				"/Users/Phteben/stnatale/ddr4bist/firmware/snps_source/pmu_2Dtrain2.c",
				"/Users/Phteben/stnatale/sftp-config.json",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/pmu_2Dtrain.c",
				"/Users/Phteben/stnatale/ddr4bist/firmware/snps_source/pmu_2Dtrain.c",
				"/Users/Phteben/stnatale/swig/ldhelp.txt",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/User/Syntaxes/swig-interface.sublime-syntax",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/User/Syntaxes/syntax_test.i",
				"/Users/Phteben/stnatale/ddr4bist/firmware/snps_source/include/pmu_util.h",
				"/Users/Phteben/stnatale/ddr4bist.sublime-project",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/-Karabiner-YAML/karabiner_yaml.sublime-syntax",
				"/Users/Phteben/stnatale/swig/eye.py",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/C++/C.sublime-syntax",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/-Karabiner-YAML/karabiner_json.sublime-syntax",
				"/Users/Phteben/stnatale/swig/build.sh",
				"/Users/Phteben/stnatale/ddr4bist/firmware/bist_source/include/hwt_common_api.h",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/RMB_logs/2d-hist_RMB.py",
				"/Users/Phteben/.zshrc",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/CSR script/Archive/CSRV_parallelTest.py",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/Default/Main.sublime-menu",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/User/Main.sublime-menu",
				"/Users/Phteben/stnatale/swig/example.c",
				"/Volumes/NATALS/cali_core3/Contents/Resources/Python/lib/python2.7/config/Makefile",
				"/Users/Phteben/PycharmProjects/pythonProject/venv/lib/python3.9/site-packages/setuptools/_distutils/command/build_ext.py",
				"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/config-3.8-darwin/config.c",
				"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/Headers/pythonrun.h",
				"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/config-3.8-darwin/python-config.py",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/CursorRuler/CursorRuler.sublime-settings",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/runtc",
				"/Users/Phteben/.config/karabiner/assets/complex_modifications/Middle Click.k-yaml",
				"/Users/Phteben/.config/karabiner/assets/complex_modifications/Middle Click.JSON-k-yaml",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/setup_file.py",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/runtc_auto.py",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/RndFields_source.sv",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/inject_apb_config.py",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/runtc_auto_v2.py",
				"/Users/Phteben/stnatale/ddr4bist/tests/test2/simv.log",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/runtc_auto.csh",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/bist_compare.py",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/terminal 2.log",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/DTO/DTO__/rmbInfo.py",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/DTO/DTO__/AMD_COLORS.py",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/DTO/DTO__/ColumnDTO_RMB.py",
				"/Users/Phteben/Library/.gitignore",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/DTO/DTO__/ColumnExplore_MR.py",
				"/Users/Phteben/.config/karabiner/formats.kb.yaml",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/setup_file.yaml",
				"/Users/Phteben/stnatale/sftp-config.yaml",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/asdfjk",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/sublack/sublack/commands.py",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/User/Anaconda.sublime-settings",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/pathlib/all/pathlib.py",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/DTO/terminal.log",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/inject_runtc.py",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/terminal.log",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/VN_vDropTest/UEFI_reset.py",
				"/Users/Phteben/stnatale/bist_gui/runtc_auto.csh",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/simv.log",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/testbench/inc/RndFields_source.sv",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/DTO/DTO__/RMB_DDR5_Mux_GUI_2.py",
				"/Users/Phteben/stnatale/ddr4bist/firmware/bist_source/pmu_bist.c",
				"/Users/Phteben/stnatale/bist_gui/AMD_COLORS.py",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/DTO/DTO__/ColumnExplore_v2.py",
				"/Users/Phteben/stnatale/ddr4bist/tests/test6/terminal.log",
				"/Users/Phteben/stnatale/bist_gui/runtc_auto.py",
				"/Users/Phteben/stnatale/ddr4bist/bash_bootenv",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/bootenv",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/signing_automation.py",
				"/Users/Phteben/stnatale/ddr4bist/tests/test1/terminal.log",
				"/Users/Phteben/stnatale/ddr4bist/tests/test7/terminal.log",
				"/Users/Phteben/stnatale/ddr4bist/tests/test8/terminal.log",
				"/Users/Phteben/stnatale/ddr4bist/tests/test9/terminal.log",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/Case Conversion/case_conversion.py",
				"/Users/Phteben/Downloads/CLDO_drop_VN.py",
				"/Users/Phteben/stnatale/ddr4bist/tests/test7/simv.log",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/DTO/DTO__/ColumnExplore.py",
				"/Users/Phteben/stnatale/ddr4bist/firmware/bist_source/include/mnPmuSramBistBlock.h",
				"/Users/Phteben/stnatale/ddr4bist/tests/test2/RndFields.sv",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/cmd.run",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/DTO/DTO__/mrInfo.py",
				"/Users/Phteben/stnatale/ddr4bist/tests/test7/apb_config.sv",
				"/Volumes/PORTCAMP/BreadboardKeyboard/main.v",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/testbench/inc/RndFields_source_backup.sv",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/CSR script/VCLDO_regTest_VN.py",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/simv",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/deleteme.txt",
				"/Users/Phteben/stnatale/ddr4bist/tests/test6/simv.log",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/common_test_inc.sv",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/testbench/inc/common_test_inc.sv",
				"/Users/Phteben/stnatale/ddr4bist/tests/test5/terminal.log",
				"/Users/Phteben/stnatale/ddr4bist/tests/test5/simv.log",
				"/Users/Phteben/stnatale/ddr4bist/tests/test4/simv.log",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/bist_compare_v1.py",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/bist_compare_v3.py",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/bist_compare.py"
			],
			"find":
			{
				"height": 25.0
			},
			"find_in_files":
			{
				"height": 99.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"0",
					"array",
					"vxy",
					"breakp",
					"break",
					"mid",
					"d[",
					".T",
					"array",
					".T",
					"]",
					"append",
					"abs",
					"d",
					"l",
					"else",
					" else:\n                d[\"r\"].append([y_val, 0])",
					"break",
					"else",
					"break",
					" >0.5",
					">",
					"and",
					"d",
					"l",
					"r",
					"- i_maxh",
					"imax_h",
					"015",
					"01",
					"985",
					"02",
					"1",
					"98",
					"99",
					"05",
					"95",
					"print",
					"> 1",
					"1",
					"shape",
					"0.1",
					"1",
					"0.1",
					"0",
					"l",
					"r",
					"data",
					"-1:idx",
					"v_loc",
					"v_loc - i_maxh",
					" v_loc - i_maxh",
					"v_loc",
					"enumerate",
					"1",
					"::\n",
					"r",
					"vv",
					"samples",
					"x_interval",
					"x_range",
					"samples",
					"mesh",
					"self",
					"vxyc",
					"2",
					"4",
					"2",
					"]\n",
					"vxy",
					"self",
					"recombine",
					"split_and_sort",
					"xy_split",
					"arr_list",
					"xy_2d",
					"=",
					"uniques_and_quantity",
					"vc",
					"uniques_and_counts",
					"vi",
					"a",
					"x",
					"\"x\"",
					"initial",
					"y_coarse",
					"run cell",
					"print",
					"a",
					"self",
					"l",
					"\"].",
					"\"",
					"i_maxh",
					"v_eye",
					"get_dimensions",
					"SAMPLES",
					"create_mesh",
					"coarse",
					"interp_mask",
					"eye_mask",
					"interp_array",
					"x_mesh",
					"y_mesh",
					"VREF_MAX",
					"mesh\\[2",
					"mesh\\[1",
					"mesh\\[0",
					"x_mesh",
					"y_mesh",
					"interp_mask",
					"y_mesh",
					"fine_interp",
					"y_mesh",
					"interp_array",
					"SAMPLES",
					"V_BITS",
					"eye",
					"t",
					"0",
					"x_mesh",
					"0",
					"1",
					"self.plot[\"eye\"]",
					"scan_xline",
					"scatter_plts",
					"cmask",
					"ii"
				],
				"highlight": false,
				"in_selection": false,
				"preserve_case": false,
				"regex": true,
				"replace_history":
				[
					"mesh\\[1",
					"mesh\\[0",
					"mesh\\[2"
				],
				"reverse": true,
				"scrollbar_highlights": true,
				"show_context": true,
				"use_buffer2": true,
				"use_gitignore": true,
				"whole_word": false,
				"wrap": true
			},
			"groups":
			[
				{
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/Users/Phteben/Eye.py",
							"selected": true,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 20795,
								"regions":
								{
									"bookmarks":
									{
										"flags": 144,
										"icon": "bookmark",
										"regions":
										[
											[
												9615,
												9615
											],
											[
												9670,
												9670
											]
										],
										"scope": "bookmarks"
									}
								},
								"selection":
								[
									[
										8679,
										8679
									]
								],
								"settings":
								{
									"WordCount":
									{
										"changes": -1,
										"modified": true,
										"selection": true,
										"status": -1,
										"syntax": "python"
									},
									"apply_syntax_touched": true,
									"auto_complete_triggers":
									[
										{
											"characters": "<",
											"selector": "text.html"
										},
										{
											"characters": ";",
											"selector": "source.yaml"
										},
										{
											"characters": "\\",
											"selector": "text.tex.latex"
										},
										{
											"characters": ".",
											"selector": "source.python - string - comment - constant.numeric, meta.interpolated.format.fstring"
										}
									],
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content"
									],
									"function_name_status_row": 276,
									"incomplete_sync": null,
									"origPos":
									[
										0.0,
										2632.0
									],
									"remote_loading": false,
									"rulers":
									[
										54.9,
										55.2
									],
									"sftp_duplicate_views": 0,
									"syncScroll": false,
									"synced": false,
									"syntax": "Packages/Python/Python.sublime-syntax",
									"tab_size": 4,
									"tabs_extra_last_activated": 1629026188.06,
									"tabs_extra_last_activated_sheet_index": 0,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 2632.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"stack_multiselect": false,
							"type": "text"
						},
						{
							"buffer": 1,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 7547,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"WordCount":
									{
										"changes": 64,
										"count": 500,
										"modified": false,
										"selection": false,
										"status": -1,
										"syntax": "plain text"
									},
									"apply_syntax_touched": true,
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
											"1":
											[
												2293,
												2294
											]
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content"
									],
									"default_dir": "/Users/Phteben",
									"function_name_status_row": 0,
									"incomplete_sync": null,
									"origPos":
									[
										0.0,
										5445.0
									],
									"rulers":
									[
										-0.1,
										0.2
									],
									"syntax": "Packages/Helium/Helium.sublime-syntax",
									"tabs_extra_last_activated": 1629026170.18,
									"tabs_extra_last_activated_sheet_index": 1,
									"word_wrap": "false"
								},
								"translation.x": 0.0,
								"translation.y": 4634.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"stack_multiselect": false,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 25.0
			},
			"input":
			{
				"height": 43.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.SFTP":
			{
				"height": 204.0
			},
			"output.SublimeLinter":
			{
				"height": 127.0
			},
			"output.SublimeLinter Messages":
			{
				"height": 139.0
			},
			"output.SystemVerilog":
			{
				"height": 152.0
			},
			"output.exec":
			{
				"height": 173.0
			},
			"output.find_results":
			{
				"height": 152.0
			},
			"output.help":
			{
				"height": 104.0
			},
			"output.keybinding":
			{
				"height": 104.0
			},
			"output.latextools":
			{
				"height": 164.0
			},
			"output.mdpopups":
			{
				"height": 0.0
			},
			"output.package_dev":
			{
				"height": 104.0
			},
			"pinned_build_system": "Packages/Default/Syntax Tests.sublime-build",
			"position": "8 0 0 0 2560 1415 0 0 2560 1415 ",
			"project": "",
			"replace":
			{
				"height": 64.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": true,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": false,
			"side_bar_width": 322.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 867,
			"workspace_name": ""
		},
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"exi",
						"exit"
					],
					[
						"xy",
						"xy_split"
					],
					[
						"arr",
						"arr_list"
					],
					[
						"inter",
						"intersects"
					],
					[
						"uni",
						"unique"
					],
					[
						"y",
						"y_coarse"
					],
					[
						"mask",
						"mask_coarse"
					],
					[
						"scat",
						"scatter_plts"
					],
					[
						"__",
						"__init__"
					],
					[
						"in",
						"interp_array"
					],
					[
						"interp",
						"interp_array"
					],
					[
						"cent",
						"center_args"
					],
					[
						"block",
						"block_caret_border"
					],
					[
						"under",
						"squiggly_underline"
					],
					[
						"meta",
						"meta_append"
					],
					[
						"weight",
						"weight_eye"
					],
					[
						"twoD",
						"twoD_eye_t_ptr"
					],
					[
						"two",
						"twoD_Eye_t"
					],
					[
						"interface",
						"interface-function"
					],
					[
						"f",
						"function-call"
					],
					[
						"a",
						"meta"
					],
					[
						"p",
						"support"
					],
					[
						"s",
						"storage"
					],
					[
						"e",
						"keyword"
					],
					[
						"inte",
						"interface-line"
					],
					[
						"met",
						"meta_prepend"
					],
					[
						"if",
						"ifmain"
					],
					[
						"for",
						"for"
					],
					[
						"ca",
						"case"
					],
					[
						"batch",
						"batch_setup"
					],
					[
						"tdi",
						"tdi_continue"
					],
					[
						"loc",
						"lock_file"
					],
					[
						"bist",
						"bist_params"
					],
					[
						"param",
						"param_vars"
					],
					[
						"test",
						"test_directory"
					],
					[
						"TL",
						"TLabelframe"
					],
					[
						"inj",
						"inj_addr_list"
					],
					[
						"SIM",
						"SIMV_PATH"
					],
					[
						"def",
						"default_errors"
					],
					[
						"runtc",
						"runtc_cols"
					],
					[
						"runt",
						"runtc_defects"
					],
					[
						"cid",
						"cid_step"
					],
					[
						"bank",
						"bank_step"
					],
					[
						"BIST",
						"BIST_BANKSIZE"
					],
					[
						"ADDR",
						"ADDR_LOWER"
					],
					[
						"ADD",
						"ADDR_LOWER"
					],
					[
						"apb",
						"apb_wr"
					],
					[
						"name",
						"__name__"
					],
					[
						"get",
						"getNewestFileInDir"
					],
					[
						"w",
						"write"
					],
					[
						"mod",
						"mod"
					],
					[
						"subsub",
						"\\subsubsection*{title}                            "
					],
					[
						"phnt",
						"\\phantomsection                                   \thyperref"
					],
					[
						"list",
						"\\listoffigures                                    \tlatex-document"
					],
					[
						"input",
						"\\input{file}                                      "
					],
					[
						"abstra",
						"\\begin{abstract}                                  "
					],
					[
						"inpu",
						"\\input{file}                                      "
					],
					[
						"inp",
						"\\input{file}                                      "
					],
					[
						"r",
						"variables"
					],
					[
						"insert",
						"insert"
					],
					[
						"Z",
						"Zin_min"
					],
					[
						"dm",
						"dmax_l_"
					],
					[
						"db",
						"_db_data"
					],
					[
						"write",
						"writerow\tfunction"
					],
					[
						"set",
						"set_trace\tfunction"
					],
					[
						"comp",
						"_compiled_regex"
					],
					[
						"WR",
						"WRDQ_RSTR\tstatement"
					],
					[
						"WRDQ",
						"WRDQ_REGEX\tstatement"
					],
					[
						"spl",
						"splitlines\tfunction"
					],
					[
						"thread",
						"Thread\tclass"
					],
					[
						"original",
						"original_putty_log\tstatement"
					],
					[
						"fwsi",
						"fw_signing_dir\tstatement"
					],
					[
						"ro",
						"rowconfigure"
					],
					[
						"row",
						"ROWS\tstatement"
					],
					[
						"fo",
						"foreground"
					],
					[
						"_Menu",
						"_Menubutton\tclass"
					],
					[
						"menu",
						"_Menu"
					],
					[
						"postcode",
						"postcode_value\tstatement"
					],
					[
						"frame",
						"frameL1_postcode\tstatement"
					],
					[
						"width",
						"_width"
					],
					[
						"column",
						"columnconfigure\tstatement"
					],
					[
						"check",
						"checkbox_frame\tstatement"
					],
					[
						"format",
						"formatted_time"
					],
					[
						"total",
						"total_time_elapsed\tstatement"
					],
					[
						"L",
						"Labeled_Frame\tclass"
					],
					[
						"log",
						"Scrolling_Log"
					],
					[
						"Scrol",
						"scrolledtext\tmodule"
					],
					[
						"Lable",
						"LabelFrame"
					],
					[
						"class",
						"class\tkeyword"
					],
					[
						"canvas",
						"canvas_frame\tstatement"
					],
					[
						"config",
						"ConfigUpdate"
					],
					[
						"main",
						"main_Lframe\tstatement"
					],
					[
						"grid",
						"grid_propagate\tfunction"
					],
					[
						"postcode_v",
						"postcode_val_label\tstatement"
					],
					[
						"postcode_",
						"postcode_value"
					],
					[
						"MERO",
						"MERO_ABL_POSTCODE"
					],
					[
						"post",
						"postcode_stored\tstatement"
					],
					[
						"label",
						"LabelFrame\tclass"
					],
					[
						"up",
						"update_idletasks\tfunction"
					],
					[
						"umc",
						"umcChoice\tstatement"
					],
					[
						"wri",
						"writeMux\tfunction"
					],
					[
						"dfmp4",
						"dfpm4_fields\tstatement"
					],
					[
						"cldo",
						"cldoLow\tstatement"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/Users/Phteben/Eye.py",
					"settings":
					{
						"buffer_size": 20795,
						"encoding": "UTF-8",
						"line_ending": "Unix"
					},
					"undo_stack":
					[
						[
							4557,
							1,
							"insert_snippet",
							{
								"contents": "\"${0:$SELECTION}\""
							},
							"BAAAAPYhAAAAAAAA9iEAAAAAAAABAAAAbPYhAAAAAAAA+SEAAAAAAAAAAAAAFCMAAAAAAAAUIwAAAAAAAAEAAABsFCMAAAAAAAAXIwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAxjgAAAAAAADGOAAAAAAAAAAAAAAAAPC/AQAAAAIAAAD2IQAAAAAAAPchAAAAAAAAAAAAAAAA8L8SIwAAAAAAABMjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4565,
							2,
							"left_delete",
							null,
							"AgAAAIAeAAAAAAAAgB4AAAAAAAAdAAAAICAgICAgICByID0gW10KICAgICAgICBsID0gW11/HgAAAAAAAH8eAAAAAAAAAQAAAAo",
							"AgAAAAAAAAABAAAAyjgAAAAAAADKOAAAAAAAAAAAAAAAAPC/AQAAAAEAAACdHgAAAAAAAIAeAAAAAAAAAAAAAAAA8L8"
						],
						[
							4586,
							1,
							"paste",
							null,
							"BAAAALQjAAAAAAAAtCMAAAAAAAABAAAAbLQjAAAAAAAAuiMAAAAAAAAAAAAAgyMAAAAAAACDIwAAAAAAAAEAAABygyMAAAAAAACJIwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAArDgAAAAAAACsOAAAAAAAAAAAAAAAAPC/AQAAAAIAAACEIwAAAAAAAIMjAAAAAAAAAAAAAAAA8L+1IwAAAAAAALQjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4588,
							1,
							"left_delete",
							null,
							"AgAAALwjAAAAAAAAvCMAAAAAAAABAAAAYoYjAAAAAAAAhiMAAAAAAAABAAAAdA",
							"AgAAAAAAAAABAAAAtjgAAAAAAAC2OAAAAAAAAAAAAAAAAPC/AQAAAAIAAACHIwAAAAAAAIcjAAAAAAAAAAAAAAAA8L+9IwAAAAAAAL0jAAAAAAAAAAAAAAAA8L8"
						],
						[
							4590,
							1,
							"insert",
							{
								"characters": "l"
							},
							"AQAAAIYjAAAAAAAAhyMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAtDgAAAAAAAC0OAAAAAAAAAAAAAAAAPC/AQAAAAEAAACGIwAAAAAAAIYjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4593,
							1,
							"insert",
							{
								"characters": "r"
							},
							"AQAAAIYjAAAAAAAAhyMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAtTgAAAAAAAC1OAAAAAAAAAAAAAAAAPC/AQAAAAEAAACGIwAAAAAAAIYjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4597,
							1,
							"left_delete",
							null,
							"AQAAAIcjAAAAAAAAhyMAAAAAAAABAAAAbA",
							"AgAAAAAAAAABAAAAtjgAAAAAAAC2OAAAAAAAAAAAAAAAAPC/AQAAAAEAAACIIwAAAAAAAIgjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4600,
							1,
							"insert",
							{
								"characters": "r"
							},
							"AQAAALwjAAAAAAAAvSMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAtTgAAAAAAAC1OAAAAAAAAAAAAAAAAPC/AQAAAAEAAAC8IwAAAAAAALwjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4610,
							1,
							"left_delete",
							null,
							"AQAAALwjAAAAAAAAvCMAAAAAAAABAAAAcg",
							"AgAAAAAAAAABAAAAtjgAAAAAAAC2OAAAAAAAAAAAAAAAAPC/AQAAAAEAAAC9IwAAAAAAAL0jAAAAAAAAAAAAAAAA8L8"
						],
						[
							4611,
							1,
							"insert",
							{
								"characters": "l"
							},
							"AQAAALwjAAAAAAAAvSMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAtTgAAAAAAAC1OAAAAAAAAAAAAAAAAPC/AQAAAAEAAAC8IwAAAAAAALwjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4614,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAALAjAAAAAAAAsSMAAAAAAAAAAAAAsSMAAAAAAAC5IwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAtjgAAAAAAAC2OAAAAAAAAAAAAAAAAPC/AQAAAAEAAACwIwAAAAAAALAjAAAAAAAA////////738"
						],
						[
							4615,
							1,
							"run_macro_file",
							{
								"file": "res://Packages/Default/Delete to Hard BOL.sublime-macro"
							},
							"AQAAALEjAAAAAAAAsSMAAAAAAAAIAAAAICAgICAgICA",
							"AgAAAAAAAAABAAAAvzgAAAAAAAC/OAAAAAAAAAAAAAAAAPC/AQAAAAEAAAC5IwAAAAAAALkjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4616,
							1,
							"left_delete",
							null,
							"AQAAALAjAAAAAAAAsCMAAAAAAAABAAAACg",
							"AgAAAAAAAAABAAAAtzgAAAAAAAC3OAAAAAAAAAAAAAAAAPC/AQAAAAEAAACxIwAAAAAAALEjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4618,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAAOYjAAAAAAAA5yMAAAAAAAAAAAAA5yMAAAAAAADvIwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAtjgAAAAAAAC2OAAAAAAAAAAAAAAAAPC/AQAAAAEAAADmIwAAAAAAAOYjAAAAAAAAAAAAAACQgEA"
						],
						[
							4623,
							1,
							"insert",
							{
								"characters": "d"
							},
							"AwAAAM4kAAAAAAAAzyQAAAAAAAAAAAAAvSQAAAAAAAC+JAAAAAAAAAAAAADnIwAAAAAAAOcjAAAAAAAACAAAACAgICAgICAg",
							"AgAAAAAAAAABAAAAvzgAAAAAAAC/OAAAAAAAAAAAAAAAAPC/AQAAAAIAAAC9JAAAAAAAAL0kAAAAAAAAAAAAAAAA8L/OJAAAAAAAAM4kAAAAAAAAAAAAAAAA8L8"
						],
						[
							4625,
							1,
							"insert_snippet",
							{
								"contents": "[${0:$SELECTION}]"
							},
							"BAAAALYkAAAAAAAAtiQAAAAAAAABAAAAbLYkAAAAAAAAuSQAAAAAAAAAAAAAyiQAAAAAAADKJAAAAAAAAAEAAAByyiQAAAAAAADNJAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAuTgAAAAAAAC5OAAAAAAAAAAAAAAAAPC/AQAAAAIAAAC2JAAAAAAAALckAAAAAAAAAAAAAAAA8L/IJAAAAAAAAMkkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4626,
							1,
							"insert_snippet",
							{
								"contents": "\"${0:$SELECTION}\""
							},
							"BAAAALckAAAAAAAAtyQAAAAAAAABAAAAbLckAAAAAAAAuiQAAAAAAAAAAAAAzSQAAAAAAADNJAAAAAAAAAEAAAByzSQAAAAAAADQJAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAvTgAAAAAAAC9OAAAAAAAAAAAAAAAAPC/AQAAAAIAAAC3JAAAAAAAALgkAAAAAAAAAAAAAAAA8L/LJAAAAAAAAMwkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4634,
							1,
							"insert",
							{
								"characters": "S"
							},
							"AgAAANEkAAAAAAAA0iQAAAAAAAAAAAAAuyQAAAAAAAC8JAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAwTgAAAAAAADBOAAAAAAAAAAAAAAAAPC/AQAAAAIAAAC7JAAAAAAAALskAAAAAAAAAAAAAAAA8L/RJAAAAAAAANEkAAAAAAAAAAAAAAAAaUA"
						],
						[
							4635,
							1,
							"left_delete",
							null,
							"AgAAANIkAAAAAAAA0iQAAAAAAAABAAAAU7skAAAAAAAAuyQAAAAAAAABAAAAUw",
							"AgAAAAAAAAABAAAAwzgAAAAAAADDOAAAAAAAAAAAAAAAAPC/AQAAAAIAAAC8JAAAAAAAALwkAAAAAAAAAAAAAAAA8L/TJAAAAAAAANMkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4641,
							1,
							"paste",
							null,
							"BAAAAM4jAAAAAAAAziMAAAAAAAABAAAAbM4jAAAAAAAA1CMAAAAAAAAAAAAAmCMAAAAAAACYIwAAAAAAAAEAAABymCMAAAAAAACeIwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAwTgAAAAAAADBOAAAAAAAAAAAAAAAAPC/AQAAAAIAAACZIwAAAAAAAJgjAAAAAAAAAAAAAAAA8L/PIwAAAAAAAM4jAAAAAAAAAAAAAAAA8L8"
						],
						[
							4646,
							1,
							"insert",
							{
								"characters": ".size"
							},
							"CgAAANskAAAAAAAA3CQAAAAAAAAAAAAAxSQAAAAAAADGJAAAAAAAAAAAAADdJAAAAAAAAN4kAAAAAAAAAAAAAMYkAAAAAAAAxyQAAAAAAAAAAAAA3yQAAAAAAADgJAAAAAAAAAAAAADHJAAAAAAAAMgkAAAAAAAAAAAAAOEkAAAAAAAA4iQAAAAAAAAAAAAAyCQAAAAAAADJJAAAAAAAAAAAAADjJAAAAAAAAOQkAAAAAAAAAAAAAMkkAAAAAAAAyiQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAyzgAAAAAAADLOAAAAAAAAAAAAAAAAPC/AQAAAAIAAADFJAAAAAAAAMUkAAAAAAAAAAAAAAAA8L/bJAAAAAAAANskAAAAAAAAAAAAAAAAaUA"
						],
						[
							4650,
							1,
							"insert",
							{
								"characters": "512"
							},
							"BAAAANsBAAAAAAAA3AEAAAAAAAAAAAAA3AEAAAAAAADcAQAAAAAAAAMAAAAyNTbcAQAAAAAAAN0BAAAAAAAAAAAAAN0BAAAAAAAA3gEAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA1TgAAAAAAADVOAAAAAAAAAAAAAAAAPC/AQAAAAEAAADbAQAAAAAAAN4BAAAAAAAAAAAAAAAA8L8"
						],
						[
							4664,
							1,
							"permute_selection",
							{
								"operation": "reverse"
							},
							"AgAAANYjAAAAAAAA1yMAAAAAAAABAAAAcpsjAAAAAAAAnCMAAAAAAAABAAAAbA",
							"AgAAAAAAAAABAAAA1TgAAAAAAADVOAAAAAAAAAAAAAAAAPC/AQAAAAIAAACcIwAAAAAAAJsjAAAAAAAAAAAAAAAA8L/XIwAAAAAAANYjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4675,
							1,
							"permute_selection",
							{
								"operation": "reverse"
							},
							"AgAAAN0kAAAAAAAA3iQAAAAAAAABAAAAcsIkAAAAAAAAwyQAAAAAAAABAAAAbA",
							"AgAAAAAAAAABAAAA1TgAAAAAAADVOAAAAAAAAAAAAAAAAPC/AQAAAAIAAADDJAAAAAAAAMIkAAAAAAAAAAAAAAAA8L/eJAAAAAAAAN0kAAAAAAAAAAAAAAAA8L8"
						],
						[
							4679,
							1,
							"left_delete",
							null,
							"AgAAAOAkAAAAAAAA4CQAAAAAAAAFAAAALnNpemXFJAAAAAAAAMUkAAAAAAAABQAAAC5zaXpl",
							"AgAAAAAAAAABAAAA1TgAAAAAAADVOAAAAAAAAAAAAAAAAPC/AQAAAAIAAADFJAAAAAAAAMokAAAAAAAAAAAAAAAA8L/gJAAAAAAAAOUkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4683,
							1,
							"reindent",
							null,
							"AQAAADYjAAAAAAAATiMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAyzgAAAAAAADLOAAAAAAAAAAAAAAAAPC/AQAAAAEAAAA2IwAAAAAAADYjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4691,
							4,
							"left_delete",
							null,
							"BAAAAEojAAAAAAAASiMAAAAAAAAEAAAAICAgIEYjAAAAAAAARiMAAAAAAAAEAAAAICAgIEIjAAAAAAAAQiMAAAAAAAAEAAAAICAgID4jAAAAAAAAPiMAAAAAAAAEAAAAICAgIA",
							"AgAAAAAAAAABAAAA4zgAAAAAAADjOAAAAAAAAAAAAAAAAPC/AQAAAAEAAABOIwAAAAAAAE4jAAAAAAAAAAAAAACgdEA"
						],
						[
							4692,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AwAAAD4jAAAAAAAAPyMAAAAAAAAAAAAAPyMAAAAAAABHIwAAAAAAAAAAAAA2IwAAAAAAADYjAAAAAAAACAAAACAgICAgICAg",
							"AgAAAAAAAAABAAAA0zgAAAAAAADTOAAAAAAAAAAAAAAAAPC/AQAAAAEAAAA+IwAAAAAAAD4jAAAAAAAAAAAAAAAA8L8"
						],
						[
							4695,
							1,
							"insert",
							{
								"characters": "if"
							},
							"AgAAAD8jAAAAAAAAQCMAAAAAAAAAAAAAQCMAAAAAAABBIwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA1DgAAAAAAADUOAAAAAAAAAAAAAAAAPC/AQAAAAEAAAA/IwAAAAAAAD8jAAAAAAAAAAAAAAAAVEA"
						],
						[
							4696,
							1,
							"insert",
							{
								"characters": " d"
							},
							"AgAAAEEjAAAAAAAAQiMAAAAAAAAAAAAAQiMAAAAAAABDIwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA1jgAAAAAAADWOAAAAAAAAAAAAAAAAPC/AQAAAAEAAABBIwAAAAAAAEEjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4697,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAEMjAAAAAAAARSMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA2DgAAAAAAADYOAAAAAAAAAAAAAAAAPC/AQAAAAEAAABDIwAAAAAAAEMjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4698,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAAEQjAAAAAAAARiMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA2jgAAAAAAADaOAAAAAAAAAAAAAAAAPC/AQAAAAEAAABEIwAAAAAAAEQjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4699,
							1,
							"insert",
							{
								"characters": "r"
							},
							"AQAAAEUjAAAAAAAARiMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA3DgAAAAAAADcOAAAAAAAAAAAAAAAAPC/AQAAAAEAAABFIwAAAAAAAEUjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4705,
							1,
							"insert",
							{
								"characters": ".shape"
							},
							"BgAAAEgjAAAAAAAASSMAAAAAAAAAAAAASSMAAAAAAABKIwAAAAAAAAAAAABKIwAAAAAAAEsjAAAAAAAAAAAAAEsjAAAAAAAATCMAAAAAAAAAAAAATCMAAAAAAABNIwAAAAAAAAAAAABNIwAAAAAAAE4jAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA3TgAAAAAAADdOAAAAAAAAAAAAAAAAPC/AQAAAAEAAABIIwAAAAAAAEgjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4706,
							1,
							"insert",
							{
								"characters": " >"
							},
							"AgAAAE4jAAAAAAAATyMAAAAAAAAAAAAATyMAAAAAAABQIwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA4zgAAAAAAADjOAAAAAAAAAAAAAAAAPC/AQAAAAEAAABOIwAAAAAAAE4jAAAAAAAAAAAAAAAA8L8"
						],
						[
							4707,
							1,
							"insert",
							{
								"characters": " d"
							},
							"AgAAAFAjAAAAAAAAUSMAAAAAAAAAAAAAUSMAAAAAAABSIwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA5TgAAAAAAADlOAAAAAAAAAAAAAAAAPC/AQAAAAEAAABQIwAAAAAAAFAjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4708,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAFIjAAAAAAAAVCMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA5zgAAAAAAADnOAAAAAAAAAAAAAAAAPC/AQAAAAEAAABSIwAAAAAAAFIjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4709,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAAFMjAAAAAAAAVSMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA6TgAAAAAAADpOAAAAAAAAAAAAAAAAPC/AQAAAAEAAABTIwAAAAAAAFMjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4710,
							1,
							"insert",
							{
								"characters": "l.s"
							},
							"AwAAAFQjAAAAAAAAVSMAAAAAAAAAAAAAVSMAAAAAAABWIwAAAAAAAAAAAABWIwAAAAAAAFcjAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA6zgAAAAAAADrOAAAAAAAAAAAAAAAAPC/AQAAAAEAAABUIwAAAAAAAFQjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4711,
							2,
							"left_delete",
							null,
							"AgAAAFYjAAAAAAAAViMAAAAAAAABAAAAc1UjAAAAAAAAVSMAAAAAAAABAAAALg",
							"AgAAAAAAAAABAAAA7jgAAAAAAADuOAAAAAAAAAAAAAAAAPC/AQAAAAEAAABXIwAAAAAAAFcjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4713,
							1,
							"insert",
							{
								"characters": ".shape"
							},
							"BgAAAFcjAAAAAAAAWCMAAAAAAAAAAAAAWCMAAAAAAABZIwAAAAAAAAAAAABZIwAAAAAAAFojAAAAAAAAAAAAAFojAAAAAAAAWyMAAAAAAAAAAAAAWyMAAAAAAABcIwAAAAAAAAAAAABcIwAAAAAAAF0jAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA7DgAAAAAAADsOAAAAAAAAAAAAAAAAPC/AQAAAAEAAABXIwAAAAAAAFcjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4731,
							1,
							"insert_snippet",
							{
								"contents": "(${0:$SELECTION})"
							},
							"BAAAAEIjAAAAAAAAQiMAAAAAAAAMAAAAZFsiciJdLnNoYXBlQiMAAAAAAABQIwAAAAAAAAAAAABTIwAAAAAAAFMjAAAAAAAADAAAAGRbImwiXS5zaGFwZVMjAAAAAAAAYSMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA8jgAAAAAAADyOAAAAAAAAAAAAAAAAPC/AQAAAAIAAABCIwAAAAAAAE4jAAAAAAAAAAAAAAAA8L9RIwAAAAAAAF0jAAAAAAAAAAAAAAAA8L8"
						],
						[
							4733,
							1,
							"insert",
							{
								"characters": "max"
							},
							"BgAAAFMjAAAAAAAAVCMAAAAAAAAAAAAAQiMAAAAAAABDIwAAAAAAAAAAAABVIwAAAAAAAFYjAAAAAAAAAAAAAEMjAAAAAAAARCMAAAAAAAAAAAAAVyMAAAAAAABYIwAAAAAAAAAAAABEIwAAAAAAAEUjAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA9jgAAAAAAAD2OAAAAAAAAAAAAAAAAPC/AQAAAAIAAABCIwAAAAAAAEIjAAAAAAAAAAAAAAAA8L9TIwAAAAAAAFMjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4739,
							1,
							"insert",
							{
								"characters": ":"
							},
							"AQAAAGcjAAAAAAAAaCMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA/DgAAAAAAAD8OAAAAAAAAAAAAAAAAPC/AQAAAAEAAABnIwAAAAAAAGcjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4740,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AwAAAGgjAAAAAAAAaSMAAAAAAAAAAAAAaSMAAAAAAABxIwAAAAAAAAAAAABxIwAAAAAAAHUjAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA/TgAAAAAAAD9OAAAAAAAAAAAAAAAAPC/AQAAAAEAAABoIwAAAAAAAGgjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4751,
							2,
							"swap_line_up",
							null,
							"BAAAAHYjAAAAAAAAdiMAAAAAAAC6AAAAICAgICAgICBkWyJ0Il0gPSBucC5hcnJheShkWyJ0Il0pCiAgICAgICAgZFsiYiJdID0gbnAuYXJyYXkoZFsiYiJdKQogICAgICAgIGRbInIiXSA9IFNvcnRlZEFycmF5KGRbInIiXSwgdW5pcXVlID0gIm1pbiIpLmFycmF5CiAgICAgICAgZFsibCJdID0gU29ydGVkQXJyYXkoZFsibCJdLCB1bmlxdWUgPSAibWluIikuYXJyYXkKaSMAAAAAAAAjJAAAAAAAAAAAAABpIwAAAAAAAGkjAAAAAAAAugAAACAgICAgICAgZFsidCJdID0gbnAuYXJyYXkoZFsidCJdKQogICAgICAgIGRbImIiXSA9IG5wLmFycmF5KGRbImIiXSkKICAgICAgICBkWyJyIl0gPSBTb3J0ZWRBcnJheShkWyJyIl0sIHVuaXF1ZSA9ICJtaW4iKS5hcnJheQogICAgICAgIGRbImwiXSA9IFNvcnRlZEFycmF5KGRbImwiXSwgdW5pcXVlID0gIm1pbiIpLmFycmF5CjcjAAAAAAAA8SMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAACjkAAAAAAAAKOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAvJAAAAAAAAHYjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4755,
							1,
							"insert",
							{
								"characters": "temp"
							},
							"BAAAAC8kAAAAAAAAMCQAAAAAAAAAAAAAMCQAAAAAAAAxJAAAAAAAAAAAAAAxJAAAAAAAADIkAAAAAAAAAAAAADIkAAAAAAAAMyQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAACjkAAAAAAAAKOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAvJAAAAAAAAC8kAAAAAAAAAAAAAAAA8L8"
						],
						[
							4756,
							1,
							"insert",
							{
								"characters": " ="
							},
							"AgAAADMkAAAAAAAANCQAAAAAAAAAAAAANCQAAAAAAAA1JAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAADjkAAAAAAAAOOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAzJAAAAAAAADMkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4757,
							1,
							"insert",
							{
								"characters": " d"
							},
							"AgAAADUkAAAAAAAANiQAAAAAAAAAAAAANiQAAAAAAAA3JAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAEDkAAAAAAAAQOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA1JAAAAAAAADUkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4758,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAADckAAAAAAAAOSQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAEjkAAAAAAAASOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA3JAAAAAAAADckAAAAAAAAAAAAAAAA8L8"
						],
						[
							4759,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAADgkAAAAAAAAOiQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAFDkAAAAAAAAUOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA4JAAAAAAAADgkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4760,
							1,
							"insert",
							{
								"characters": "l"
							},
							"AQAAADkkAAAAAAAAOiQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAFjkAAAAAAAAWOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA5JAAAAAAAADkkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4762,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAADwkAAAAAAAAPiQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAFzkAAAAAAAAXOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA8JAAAAAAAADwkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4763,
							1,
							"run_macro_file",
							{
								"file": "res://Packages/Default/Delete Left Right.sublime-macro"
							},
							"AgAAADwkAAAAAAAAPCQAAAAAAAABAAAAWzwkAAAAAAAAPCQAAAAAAAABAAAAXQ",
							"AgAAAAAAAAABAAAAGTkAAAAAAAAZOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA9JAAAAAAAAD0kAAAAAAAAAAAAAAAA8L8"
						],
						[
							4764,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAADwkAAAAAAAAPiQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAFzkAAAAAAAAXOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA8JAAAAAAAADwkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4765,
							1,
							"insert",
							{
								"characters": "1"
							},
							"AQAAAD0kAAAAAAAAPiQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAGTkAAAAAAAAZOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA9JAAAAAAAAD0kAAAAAAAAAAAAAAAA8L8"
						],
						[
							4767,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAAD8kAAAAAAAAQCQAAAAAAAAAAAAAQCQAAAAAAABMJAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAGjkAAAAAAAAaOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA/JAAAAAAAAD8kAAAAAAAAAAAAAAAA8L8"
						],
						[
							4768,
							1,
							"insert",
							{
								"characters": "d"
							},
							"AQAAAEwkAAAAAAAATSQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAJzkAAAAAAAAnOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABMJAAAAAAAAEwkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4769,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAE0kAAAAAAAATyQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAKDkAAAAAAAAoOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABNJAAAAAAAAE0kAAAAAAAAAAAAAAAA8L8"
						],
						[
							4770,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAAE4kAAAAAAAAUCQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAKjkAAAAAAAAqOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABOJAAAAAAAAE4kAAAAAAAAAAAAAAAA8L8"
						],
						[
							4771,
							1,
							"insert",
							{
								"characters": "l"
							},
							"AQAAAE8kAAAAAAAAUCQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAALDkAAAAAAAAsOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABPJAAAAAAAAE8kAAAAAAAAAAAAAAAA8L8"
						],
						[
							4773,
							1,
							"insert",
							{
								"characters": " ="
							},
							"AgAAAFIkAAAAAAAAUyQAAAAAAAAAAAAAUyQAAAAAAABUJAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAALTkAAAAAAAAtOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABSJAAAAAAAAFIkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4774,
							1,
							"insert",
							{
								"characters": " np.ze"
							},
							"BgAAAFQkAAAAAAAAVSQAAAAAAAAAAAAAVSQAAAAAAABWJAAAAAAAAAAAAABWJAAAAAAAAFckAAAAAAAAAAAAAFckAAAAAAAAWCQAAAAAAAAAAAAAWCQAAAAAAABZJAAAAAAAAAAAAABZJAAAAAAAAFokAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAALzkAAAAAAAAvOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABUJAAAAAAAAFQkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4775,
							1,
							"insert",
							{
								"characters": "rosl"
							},
							"BAAAAFokAAAAAAAAWyQAAAAAAAAAAAAAWyQAAAAAAABcJAAAAAAAAAAAAABcJAAAAAAAAF0kAAAAAAAAAAAAAF0kAAAAAAAAXiQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAANTkAAAAAAAA1OQAAAAAAAAAAAAAAAPC/AQAAAAEAAABaJAAAAAAAAFokAAAAAAAAAAAAAAAA8L8"
						],
						[
							4776,
							1,
							"insert_completion",
							{
								"completion": "zeros_like",
								"format": "snippet",
								"keep_prefix": false,
								"must_insert": false,
								"trigger": "zeros_like"
							},
							"AgAAAFgkAAAAAAAAWCQAAAAAAAAGAAAAemVyb3NsWCQAAAAAAABiJAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAOTkAAAAAAAA5OQAAAAAAAAAAAAAAAPC/AQAAAAEAAABeJAAAAAAAAF4kAAAAAAAAAAAAAAAA8L8"
						],
						[
							4777,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAGIkAAAAAAAAZCQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAPTkAAAAAAAA9OQAAAAAAAAAAAAAAAPC/AQAAAAEAAABiJAAAAAAAAGIkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4779,
							1,
							"insert",
							{
								"characters": "d"
							},
							"AQAAAGMkAAAAAAAAZCQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAPzkAAAAAAAA/OQAAAAAAAAAAAAAAAPC/AQAAAAEAAABjJAAAAAAAAGMkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4780,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAGQkAAAAAAAAZiQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAQDkAAAAAAABAOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABkJAAAAAAAAGQkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4781,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAAGUkAAAAAAAAZyQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAQjkAAAAAAABCOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABlJAAAAAAAAGUkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4782,
							1,
							"insert",
							{
								"characters": "r"
							},
							"AQAAAGYkAAAAAAAAZyQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAARDkAAAAAAABEOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABmJAAAAAAAAGYkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4784,
							1,
							"insert",
							{
								"characters": "\nd"
							},
							"AwAAAGokAAAAAAAAayQAAAAAAAAAAAAAayQAAAAAAAB3JAAAAAAAAAAAAAB3JAAAAAAAAHgkAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAARTkAAAAAAABFOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABqJAAAAAAAAGokAAAAAAAAAAAAAAAA8L8"
						],
						[
							4785,
							1,
							"left_delete",
							null,
							"AQAAAHckAAAAAAAAdyQAAAAAAAABAAAAZA",
							"AgAAAAAAAAABAAAAUzkAAAAAAABTOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB4JAAAAAAAAHgkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4786,
							2,
							"left_delete",
							null,
							"AgAAAHMkAAAAAAAAcyQAAAAAAAAEAAAAICAgIG8kAAAAAAAAbyQAAAAAAAAEAAAAICAgIA",
							"AgAAAAAAAAABAAAAUjkAAAAAAABSOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB3JAAAAAAAAHckAAAAAAAAAAAAAAAA8L8"
						],
						[
							4787,
							1,
							"insert",
							{
								"characters": "\t\t"
							},
							"AgAAAG8kAAAAAAAAcyQAAAAAAAAAAAAAcyQAAAAAAAB3JAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASjkAAAAAAABKOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABvJAAAAAAAAG8kAAAAAAAAAAAAAAAA8L8"
						],
						[
							4798,
							1,
							"left_delete",
							null,
							"AgAAAGkkAAAAAAAAaSQAAAAAAAABAAAAKWokAAAAAAAAaiQAAAAAAAAMAAAAICAgICAgICAgICAg",
							"AgAAAAAAAAABAAAAUjkAAAAAAABSOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABqJAAAAAAAAGokAAAAAAAA////////738"
						],
						[
							4802,
							1,
							"insert",
							{
								"characters": ")"
							},
							"AQAAAGkkAAAAAAAAaiQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAARTkAAAAAAABFOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABpJAAAAAAAAGkkAAAAAAAA////////738"
						],
						[
							4804,
							1,
							"reindent",
							null,
							"AQAAAGskAAAAAAAAdyQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAARjkAAAAAAABGOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABrJAAAAAAAAGskAAAAAAAAAAAAAABAekA"
						],
						[
							4805,
							1,
							"insert",
							{
								"characters": "d"
							},
							"AQAAAHckAAAAAAAAeCQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAUjkAAAAAAABSOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB3JAAAAAAAAHckAAAAAAAAAAAAAAAA8L8"
						],
						[
							4806,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAHgkAAAAAAAAeiQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAUzkAAAAAAABTOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB4JAAAAAAAAHgkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4807,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAAHkkAAAAAAAAeyQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAVTkAAAAAAABVOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB5JAAAAAAAAHkkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4808,
							1,
							"insert",
							{
								"characters": "l"
							},
							"AQAAAHokAAAAAAAAeyQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAVzkAAAAAAABXOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB6JAAAAAAAAHokAAAAAAAAAAAAAAAA8L8"
						],
						[
							4810,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAHwkAAAAAAAAfSQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAWDkAAAAAAABYOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB8JAAAAAAAAHwkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4811,
							1,
							"left_delete",
							null,
							"AQAAAHwkAAAAAAAAfCQAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAWTkAAAAAAABZOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB9JAAAAAAAAH0kAAAAAAAAAAAAAAAA8L8"
						],
						[
							4813,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAH0kAAAAAAAAfiQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAWDkAAAAAAABYOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB9JAAAAAAAAH0kAAAAAAAAAAAAAAAA8L8"
						],
						[
							4814,
							1,
							"insert",
							{
								"characters": "="
							},
							"AQAAAH4kAAAAAAAAfyQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAWTkAAAAAAABZOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB+JAAAAAAAAH4kAAAAAAAAAAAAAAAA8L8"
						],
						[
							4815,
							1,
							"insert",
							{
								"characters": " d"
							},
							"AgAAAH8kAAAAAAAAgCQAAAAAAAAAAAAAgCQAAAAAAACBJAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAWjkAAAAAAABaOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/JAAAAAAAAH8kAAAAAAAAAAAAAAAA8L8"
						],
						[
							4816,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAIEkAAAAAAAAgyQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAXDkAAAAAAABcOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACBJAAAAAAAAIEkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4817,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAAIIkAAAAAAAAhCQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAXjkAAAAAAABeOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACCJAAAAAAAAIIkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4818,
							1,
							"insert",
							{
								"characters": "r"
							},
							"AQAAAIMkAAAAAAAAhCQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAYDkAAAAAAABgOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACDJAAAAAAAAIMkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4820,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAIYkAAAAAAAAiCQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAYTkAAAAAAABhOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACGJAAAAAAAAIYkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4821,
							1,
							"insert",
							{
								"characters": "0"
							},
							"AQAAAIckAAAAAAAAiCQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAYzkAAAAAAABjOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACHJAAAAAAAAIckAAAAAAAAAAAAAAAA8L8"
						],
						[
							4825,
							1,
							"insert",
							{
								"characters": "np.st"
							},
							"BQAAAIAkAAAAAAAAgSQAAAAAAAAAAAAAgSQAAAAAAACCJAAAAAAAAAAAAACCJAAAAAAAAIMkAAAAAAAAAAAAAIMkAAAAAAAAhCQAAAAAAAAAAAAAhCQAAAAAAACFJAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAZDkAAAAAAABkOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACAJAAAAAAAAIAkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4826,
							1,
							"left_delete",
							null,
							"AQAAAIQkAAAAAAAAhCQAAAAAAAABAAAAdA",
							"AgAAAAAAAAABAAAAaTkAAAAAAABpOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACFJAAAAAAAAIUkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4827,
							1,
							"insert",
							{
								"characters": "tack"
							},
							"BAAAAIQkAAAAAAAAhSQAAAAAAAAAAAAAhSQAAAAAAACGJAAAAAAAAAAAAACGJAAAAAAAAIckAAAAAAAAAAAAAIckAAAAAAAAiCQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAaDkAAAAAAABoOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACEJAAAAAAAAIQkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4831,
							1,
							"insert_snippet",
							{
								"contents": "(${0:$SELECTION})"
							},
							"AgAAAIgkAAAAAAAAiCQAAAAAAAAJAAAAZFsiciJdWzBdiCQAAAAAAACTJAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAbDkAAAAAAABsOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACIJAAAAAAAAJEkAAAAAAAA////////738"
						],
						[
							4837,
							1,
							"insert",
							{
								"characters": "v"
							},
							"AQAAAIMkAAAAAAAAhCQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAbjkAAAAAAABuOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACDJAAAAAAAAIMkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4840,
							1,
							"insert",
							{
								"characters": ","
							},
							"AQAAAJMkAAAAAAAAlCQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAbzkAAAAAAABvOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACTJAAAAAAAAJMkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4841,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAJQkAAAAAAAAlSQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAcDkAAAAAAABwOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUJAAAAAAAAJQkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4850,
							1,
							"insert",
							{
								"characters": "d"
							},
							"AQAAAJUkAAAAAAAAliQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAcTkAAAAAAABxOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACVJAAAAAAAAJUkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4851,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAJYkAAAAAAAAmCQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAcjkAAAAAAAByOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACWJAAAAAAAAJYkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4852,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAAJckAAAAAAAAmSQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAdDkAAAAAAAB0OQAAAAAAAAAAAAAAAPC/AQAAAAEAAACXJAAAAAAAAJckAAAAAAAAAAAAAAAA8L8"
						],
						[
							4853,
							1,
							"insert",
							{
								"characters": "l"
							},
							"AQAAAJgkAAAAAAAAmSQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAdjkAAAAAAAB2OQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYJAAAAAAAAJgkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4857,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAHckAAAAAAAAeSQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAdzkAAAAAAAB3OQAAAAAAAAAAAAAAAPC/AQAAAAEAAACcJAAAAAAAAJwkAAAAAAAAAAAAAAAA8L8"
						],
						[
							4859,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAEwkAAAAAAAATiQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAeTkAAAAAAAB5OQAAAAAAAAAAAAAAAPC/AQAAAAEAAABqJAAAAAAAAGokAAAAAAAAAAAAAADgf0A"
						],
						[
							4861,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAC8kAAAAAAAAMSQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAezkAAAAAAAB7OQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA/JAAAAAAAAD8kAAAAAAAAAAAAAACAe0A"
						],
						[
							4863,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAPkjAAAAAAAA+yMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAfTkAAAAAAAB9OQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAPJAAAAAAAAA8kAAAAAAAAAAAAAADAckA"
						],
						[
							4960,
							1,
							"insert",
							{
								"characters": ":"
							},
							"CAAAAL4iAAAAAAAAvyIAAAAAAAAAAAAAvyIAAAAAAAC/IgAAAAAAAB0AAABhbmQgYWJzKHZfbG9jIC0gaV9tYXhoKSA+MC41OqAhAAAAAAAAoSEAAAAAAAAAAAAAoSEAAAAAAAChIQAAAAAAAB0AAABhbmQgYWJzKHZfbG9jIC0gaV9tYXhoKSA+MC41OoIgAAAAAAAAgyAAAAAAAAAAAAAAgyAAAAAAAACDIAAAAAAAAB0AAABhbmQgYWJzKHZfbG9jIC0gaV9tYXhoKSA+MC41OmsfAAAAAAAAbB8AAAAAAAAAAAAAbB8AAAAAAABsHwAAAAAAAB0AAABhbmQgYWJzKHZfbG9jIC0gaV9tYXhoKSA+MC41Og",
							"AgAAAAAAAAABAAAAfzkAAAAAAAB/OQAAAAAAAAAAAAAAAPC/AQAAAAQAAABrHwAAAAAAAIgfAAAAAAAA////////73+CIAAAAAAAAJ8gAAAAAAAA////////73+gIQAAAAAAAL0hAAAAAAAA////////73++IgAAAAAAANsiAAAAAAAA////////738"
						],
						[
							4961,
							2,
							"left_delete",
							null,
							"CAAAAGoiAAAAAAAAaiIAAAAAAAABAAAAOmghAAAAAAAAaCEAAAAAAAABAAAAOmYgAAAAAAAAZiAAAAAAAAABAAAAOmsfAAAAAAAAax8AAAAAAAABAAAAOmYiAAAAAAAAZiIAAAAAAAABAAAAIGUhAAAAAAAAZSEAAAAAAAABAAAAIGQgAAAAAAAAZCAAAAAAAAABAAAAIGofAAAAAAAAah8AAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAADzkAAAAAAAAPOQAAAAAAAAAAAAAAAPC/AQAAAAQAAABsHwAAAAAAAGwfAAAAAAAAAAAAAAAA8L9nIAAAAAAAAGcgAAAAAAAAAAAAAAAA8L9pIQAAAAAAAGkhAAAAAAAAAAAAAAAA8L9rIgAAAAAAAGsiAAAAAAAAAAAAAAAA8L8"
						],
						[
							4962,
							1,
							"insert",
							{
								"characters": ":"
							},
							"BAAAAGMiAAAAAAAAZCIAAAAAAAAAAAAAYyEAAAAAAABkIQAAAAAAAAAAAABjIAAAAAAAAGQgAAAAAAAAAAAAAGofAAAAAAAAax8AAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAABzkAAAAAAAAHOQAAAAAAAAAAAAAAAPC/AQAAAAQAAABqHwAAAAAAAGofAAAAAAAAAAAAAAAA8L9jIAAAAAAAAGMgAAAAAAAAAAAAAAAA8L9jIQAAAAAAAGMhAAAAAAAAAAAAAAAA8L9jIgAAAAAAAGMiAAAAAAAAAAAAAAAA8L8"
						],
						[
							4977,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"CAAAAMEiAAAAAAAAwiIAAAAAAAAAAAAAwiIAAAAAAADaIgAAAAAAAAAAAADAIQAAAAAAAMEhAAAAAAAAAAAAAMEhAAAAAAAA2SEAAAAAAAAAAAAAviAAAAAAAAC/IAAAAAAAAAAAAAC/IAAAAAAAANcgAAAAAAAAAAAAAMQfAAAAAAAAxR8AAAAAAAAAAAAAxR8AAAAAAADdHwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAACzkAAAAAAAALOQAAAAAAAAAAAAAAAPC/AQAAAAQAAADEHwAAAAAAAMQfAAAAAAAAAAAAAAAA8L++IAAAAAAAAL4gAAAAAAAAAAAAAAAA8L/AIQAAAAAAAMAhAAAAAAAAAAAAAAAA8L/BIgAAAAAAAMEiAAAAAAAAAAAAAAAA8L8"
						],
						[
							4978,
							1,
							"left_delete",
							null,
							"BAAAACEjAAAAAAAAISMAAAAAAAAEAAAAICAgIAciAAAAAAAAByIAAAAAAAAEAAAAICAgIOwgAAAAAAAA7CAAAAAAAAAEAAAAICAgINkfAAAAAAAA2R8AAAAAAAAEAAAAICAgIA",
							"AgAAAAAAAAABAAAAbzkAAAAAAABvOQAAAAAAAAAAAAAAAPC/AQAAAAQAAADdHwAAAAAAAN0fAAAAAAAAAAAAAAAA8L/wIAAAAAAAAPAgAAAAAAAAAAAAAAAA8L8LIgAAAAAAAAsiAAAAAAAAAAAAAAAA8L8lIwAAAAAAACUjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4979,
							1,
							"left_delete",
							null,
							"BAAAABEjAAAAAAAAESMAAAAAAAAEAAAAICAgIPshAAAAAAAA+yEAAAAAAAAEAAAAICAgIOQgAAAAAAAA5CAAAAAAAAAEAAAAICAgINUfAAAAAAAA1R8AAAAAAAAEAAAAICAgIA",
							"AgAAAAAAAAABAAAAXzkAAAAAAABfOQAAAAAAAAAAAAAAAPC/AQAAAAQAAADZHwAAAAAAANkfAAAAAAAAAAAAAAAA8L/oIAAAAAAAAOggAAAAAAAAAAAAAAAA8L//IQAAAAAAAP8hAAAAAAAAAAAAAAAA8L8VIwAAAAAAABUjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4980,
							1,
							"left_delete",
							null,
							"BAAAAAEjAAAAAAAAASMAAAAAAAAEAAAAICAgIO8hAAAAAAAA7yEAAAAAAAAEAAAAICAgINwgAAAAAAAA3CAAAAAAAAAEAAAAICAgINEfAAAAAAAA0R8AAAAAAAAEAAAAICAgIA",
							"AgAAAAAAAAABAAAATzkAAAAAAABPOQAAAAAAAAAAAAAAAPC/AQAAAAQAAADVHwAAAAAAANUfAAAAAAAAAAAAAAAA8L/gIAAAAAAAAOAgAAAAAAAAAAAAAAAA8L/zIQAAAAAAAPMhAAAAAAAAAAAAAAAA8L8FIwAAAAAAAAUjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4981,
							1,
							"insert",
							{
								"characters": "else:"
							},
							"FAAAAPUiAAAAAAAA9iIAAAAAAAAAAAAA5yEAAAAAAADoIQAAAAAAAAAAAADYIAAAAAAAANkgAAAAAAAAAAAAANEfAAAAAAAA0h8AAAAAAAAAAAAA+SIAAAAAAAD6IgAAAAAAAAAAAADqIQAAAAAAAOshAAAAAAAAAAAAANogAAAAAAAA2yAAAAAAAAAAAAAA0h8AAAAAAADTHwAAAAAAAAAAAAD9IgAAAAAAAP4iAAAAAAAAAAAAAO0hAAAAAAAA7iEAAAAAAAAAAAAA3CAAAAAAAADdIAAAAAAAAAAAAADTHwAAAAAAANQfAAAAAAAAAAAAAAEjAAAAAAAAAiMAAAAAAAAAAAAA8CEAAAAAAADxIQAAAAAAAAAAAADeIAAAAAAAAN8gAAAAAAAAAAAAANQfAAAAAAAA1R8AAAAAAAAAAAAABSMAAAAAAAAGIwAAAAAAAAAAAADzIQAAAAAAAPQhAAAAAAAAAAAAAOAgAAAAAAAA4SAAAAAAAAAAAAAA1R8AAAAAAADWHwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAPzkAAAAAAAA/OQAAAAAAAAAAAAAAAPC/AQAAAAQAAADRHwAAAAAAANEfAAAAAAAAAAAAAAAA8L/YIAAAAAAAANggAAAAAAAAAAAAAAAA8L/nIQAAAAAAAOchAAAAAAAAAAAAAAAA8L/1IgAAAAAAAPUiAAAAAAAAAAAAAAAA8L8"
						],
						[
							4982,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"DAAAAAkjAAAAAAAACiMAAAAAAAAAAAAACiMAAAAAAAAWIwAAAAAAAAAAAAAWIwAAAAAAABojAAAAAAAAAAAAAPYhAAAAAAAA9yEAAAAAAAAAAAAA9yEAAAAAAAADIgAAAAAAAAAAAAADIgAAAAAAAAciAAAAAAAAAAAAAOIgAAAAAAAA4yAAAAAAAAAAAAAA4yAAAAAAAADvIAAAAAAAAAAAAADvIAAAAAAAAPMgAAAAAAAAAAAAANYfAAAAAAAA1x8AAAAAAAAAAAAA1x8AAAAAAADjHwAAAAAAAAAAAADjHwAAAAAAAOcfAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAUzkAAAAAAABTOQAAAAAAAAAAAAAAAPC/AQAAAAQAAADWHwAAAAAAANYfAAAAAAAAAAAAAAAA8L/iIAAAAAAAAOIgAAAAAAAAAAAAAAAA8L/2IQAAAAAAAPYhAAAAAAAAAAAAAAAA8L8JIwAAAAAAAAkjAAAAAAAAAAAAAAAA8L8"
						],
						[
							4991,
							1,
							"paste",
							null,
							"BAAAAE0jAAAAAAAAcCMAAAAAAAAAAAAAKSIAAAAAAABMIgAAAAAAAAAAAAAEIQAAAAAAACYhAAAAAAAAAAAAAOcfAAAAAAAACSAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAlzkAAAAAAACXOQAAAAAAAAAAAAAAAPC/AQAAAAQAAADnHwAAAAAAAOcfAAAAAAAAAAAAAAAgckAEIQAAAAAAAAQhAAAAAAAAAAAAAAAgckApIgAAAAAAACkiAAAAAAAAAAAAAAAgckBNIwAAAAAAAE0jAAAAAAAAAAAAAAAgckA"
						],
						[
							4996,
							1,
							"insert",
							{
								"characters": "0"
							},
							"CAAAAMsjAAAAAAAAzCMAAAAAAAAAAAAAzCMAAAAAAADMIwAAAAAAAAoAAABhYnModl9sb2MphCIAAAAAAACFIgAAAAAAAAAAAACFIgAAAAAAAIUiAAAAAAAACgAAAGFicyh2X2xvYyk8IQAAAAAAAD0hAAAAAAAAAAAAAD0hAAAAAAAAPSEAAAAAAAAKAAAAYWJzKHZfbG9jKf0fAAAAAAAA/h8AAAAAAAAAAAAA/h8AAAAAAAD+HwAAAAAAAAoAAABhYnModl9sb2Mp",
							"AgAAAAAAAAABAAAAIToAAAAAAAAhOgAAAAAAAAAAAAAAAPC/AQAAAAQAAAAHIAAAAAAAAP0fAAAAAAAAAAAAAAAA8L9GIQAAAAAAADwhAAAAAAAAAAAAAAAA8L+OIgAAAAAAAIQiAAAAAAAAAAAAAAAA8L/VIwAAAAAAAMsjAAAAAAAAAAAAAAAA8L8"
						],
						[
							5072,
							2,
							"left_delete",
							null,
							"AgAAAMUfAAAAAAAAxR8AAAAAAAA7AAAAICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIGRbInIiXS5hcHBlbmQoW3lfdmFsLCAwXSnEHwAAAAAAAMQfAAAAAAAAAQAAAAo",
							"AgAAAAAAAAABAAAA/TkAAAAAAAD9OQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAIAAAAAAAAMUfAAAAAAAAAAAAAAAA8L8"
						],
						[
							5073,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAAMQfAAAAAAAAxR8AAAAAAAAAAAAAxR8AAAAAAADdHwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAwTkAAAAAAADBOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADEHwAAAAAAAMQfAAAAAAAAAAAAAAAA8L8"
						],
						[
							5074,
							7,
							"left_delete",
							null,
							"BwAAANkfAAAAAAAA2R8AAAAAAAAEAAAAICAgINUfAAAAAAAA1R8AAAAAAAAEAAAAICAgINEfAAAAAAAA0R8AAAAAAAAEAAAAICAgIM0fAAAAAAAAzR8AAAAAAAAEAAAAICAgIMkfAAAAAAAAyR8AAAAAAAAEAAAAICAgIMUfAAAAAAAAxR8AAAAAAAAEAAAAICAgIMQfAAAAAAAAxB8AAAAAAAABAAAACg",
							"AgAAAAAAAAABAAAA2jkAAAAAAADaOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADdHwAAAAAAAN0fAAAAAAAAAAAAAAAA8L8"
						],
						[
							5085,
							1,
							"run_macro_file",
							{
								"file": "res://Packages/Default/Delete Line.sublime-macro"
							},
							"BAAAAA8iAAAAAAAADyIAAAAAAAArAAAAICAgICAgICAgICAgICAgIGRbImwiXS5hcHBlbmQoW3lfdmFsLCAgMF0pCv0hAAAAAAAA/SEAAAAAAAASAAAAICAgICAgICAgICAgZWxzZToK0SAAAAAAAADRIAAAAAAAACoAAAAgICAgICAgICAgICAgICAgZFsiciJdLmFwcGVuZChbeV92YWwsIDBdKQq/IAAAAAAAAL8gAAAAAAAAEgAAACAgICAgICAgICAgIGVsc2U6Cg",
							"AgAAAAAAAAABAAAAwTkAAAAAAADBOQAAAAAAAAAAAAAAAPC/AQAAAAQAAADLIAAAAAAAAM8gAAAAAAAAAAAAAAAA8L/hIAAAAAAAAOEgAAAAAAAAAAAAAAAA8L8JIgAAAAAAAA0iAAAAAAAAAAAAAAAA8L8fIgAAAAAAAB8iAAAAAAAAAAAAAAAA8L8"
						],
						[
							5091,
							1,
							"run_macro_file",
							{
								"file": "res://Packages/Default/Delete Line.sublime-macro"
							},
							"AQAAAL8gAAAAAAAAvyAAAAAAAAABAAAACg",
							"AgAAAAAAAAABAAAASDkAAAAAAABIOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAC/IAAAAAAAAL8gAAAAAAAAAAAAAAAA8L8"
						],
						[
							5094,
							2,
							"left_delete",
							null,
							"AgAAAMEiAAAAAAAAwSIAAAAAAAARAAAAICAgICAgICAgICAgZWxzZTrAIgAAAAAAAMAiAAAAAAAAAQAAAAo",
							"AgAAAAAAAAABAAAARzkAAAAAAABHOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADSIgAAAAAAAMEiAAAAAAAAAAAAAAAA8L8"
						],
						[
							5103,
							1,
							"unindent",
							null,
							"AQAAAMEiAAAAAAAAwSIAAAAAAAAEAAAAICAgIA",
							"AgAAAAAAAAABAAAANTkAAAAAAAA1OQAAAAAAAAAAAAAAAPC/AQAAAAEAAADRIgAAAAAAANEiAAAAAAAAAAAAAAAA8L8"
						],
						[
							5104,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAAM0iAAAAAAAAziIAAAAAAAAAAAAAziIAAAAAAADaIgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAMTkAAAAAAAAxOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADNIgAAAAAAAM0iAAAAAAAAAAAAAAAA8L8"
						],
						[
							5108,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAAM0iAAAAAAAAziIAAAAAAAAAAAAAziIAAAAAAADaIgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAPjkAAAAAAAA+OQAAAAAAAAAAAAAAAPC/AQAAAAEAAADNIgAAAAAAAM0iAAAAAAAAAAAAAAAAXkA"
						],
						[
							5109,
							4,
							"left_delete",
							null,
							"BAAAANYiAAAAAAAA1iIAAAAAAAAEAAAAICAgINIiAAAAAAAA0iIAAAAAAAAEAAAAICAgIM4iAAAAAAAAziIAAAAAAAAEAAAAICAgIM0iAAAAAAAAzSIAAAAAAAABAAAACg",
							"AgAAAAAAAAABAAAASzkAAAAAAABLOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADaIgAAAAAAANoiAAAAAAAAAAAAAAAA8L8"
						],
						[
							5110,
							1,
							"insert",
							{
								"characters": "if"
							},
							"AgAAAM0iAAAAAAAAziIAAAAAAAAAAAAAziIAAAAAAADPIgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAPjkAAAAAAAA+OQAAAAAAAAAAAAAAAPC/AQAAAAEAAADNIgAAAAAAAM0iAAAAAAAAAAAAAAAA8L8"
						],
						[
							5111,
							1,
							"insert",
							{
								"characters": " d"
							},
							"AgAAAM8iAAAAAAAA0CIAAAAAAAAAAAAA0CIAAAAAAADRIgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAQDkAAAAAAABAOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADPIgAAAAAAAM8iAAAAAAAAAAAAAAAA8L8"
						],
						[
							5112,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAANEiAAAAAAAA0yIAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAQjkAAAAAAABCOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADRIgAAAAAAANEiAAAAAAAAAAAAAAAA8L8"
						],
						[
							5113,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAANIiAAAAAAAA1CIAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAARDkAAAAAAABEOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADSIgAAAAAAANIiAAAAAAAAAAAAAAAA8L8"
						],
						[
							5114,
							1,
							"insert",
							{
								"characters": "l"
							},
							"AQAAANMiAAAAAAAA1CIAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAARjkAAAAAAABGOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADTIgAAAAAAANMiAAAAAAAAAAAAAAAA8L8"
						],
						[
							5116,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAANYiAAAAAAAA2CIAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAARzkAAAAAAABHOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADWIgAAAAAAANYiAAAAAAAAAAAAAAAA8L8"
						],
						[
							5117,
							1,
							"insert",
							{
								"characters": "-1"
							},
							"AgAAANciAAAAAAAA2CIAAAAAAAAAAAAA2CIAAAAAAADZIgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASTkAAAAAAABJOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADXIgAAAAAAANciAAAAAAAAAAAAAAAA8L8"
						],
						[
							5122,
							1,
							"insert",
							{
								"characters": "not"
							},
							"AwAAANAiAAAAAAAA0SIAAAAAAAAAAAAA0SIAAAAAAADSIgAAAAAAAAAAAADSIgAAAAAAANMiAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASzkAAAAAAABLOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADQIgAAAAAAANAiAAAAAAAAAAAAAAAA8L8"
						],
						[
							5123,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAANMiAAAAAAAA1CIAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAATjkAAAAAAABOOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADTIgAAAAAAANMiAAAAAAAAAAAAAAAA8L8"
						],
						[
							5127,
							1,
							"insert",
							{
								"characters": "0"
							},
							"AgAAANsiAAAAAAAA3CIAAAAAAAAAAAAA3CIAAAAAAADcIgAAAAAAAAIAAAAtMQ",
							"AgAAAAAAAAABAAAATzkAAAAAAABPOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADdIgAAAAAAANsiAAAAAAAAAAAAAAAA8L8"
						],
						[
							5129,
							1,
							"insert",
							{
								"characters": " =="
							},
							"AwAAAN0iAAAAAAAA3iIAAAAAAAAAAAAA3iIAAAAAAADfIgAAAAAAAAAAAADfIgAAAAAAAOAiAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAATjkAAAAAAABOOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADdIgAAAAAAAN0iAAAAAAAAAAAAAAAA8L8"
						],
						[
							5130,
							1,
							"insert",
							{
								"characters": " y"
							},
							"AgAAAOAiAAAAAAAA4SIAAAAAAAAAAAAA4SIAAAAAAADiIgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAUTkAAAAAAABROQAAAAAAAAAAAAAAAPC/AQAAAAEAAADgIgAAAAAAAOAiAAAAAAAAAAAAAAAA8L8"
						],
						[
							5134,
							1,
							"insert_completion",
							{
								"completion": "y_val",
								"format": "snippet",
								"keep_prefix": false,
								"must_insert": false,
								"trigger": "y_val"
							},
							"AgAAAOEiAAAAAAAA4SIAAAAAAAABAAAAeeEiAAAAAAAA5iIAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAUzkAAAAAAABTOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADiIgAAAAAAAOIiAAAAAAAAAAAAAAAA8L8"
						],
						[
							5136,
							1,
							"indent",
							null,
							"AQAAAOciAAAAAAAA6yIAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAVzkAAAAAAABXOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAMIwAAAAAAAAwjAAAAAAAAAAAAAAAgd0A"
						],
						[
							5143,
							1,
							"duplicate_lines",
							null,
							"AQAAAMEiAAAAAAAAEiMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAWzkAAAAAAABbOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADNIgAAAAAAABEjAAAAAAAA////////738"
						],
						[
							5144,
							12,
							"swap_line_up",
							null,
							"GAAAABIjAAAAAAAAEiMAAAAAAABRAAAAICAgICAgICAgICAgaWYgbm90IGRbImwiXVswXSA9PSB5X3ZhbAogICAgICAgICAgICAgICAgZFsibCJdLmFwcGVuZChbeV92YWwsICAwXSkK5yIAAAAAAAA4IwAAAAAAAAAAAADnIgAAAAAAAOciAAAAAAAAUQAAACAgICAgICAgICAgIGlmIG5vdCBkWyJsIl1bMF0gPT0geV92YWwKICAgICAgICAgICAgICAgIGRbImwiXS5hcHBlbmQoW3lfdmFsLCAgMF0pCsEiAAAAAAAAEiMAAAAAAAAAAAAAwSIAAAAAAADBIgAAAAAAAFEAAAAgICAgICAgICAgICBpZiBub3QgZFsibCJdWzBdID09IHlfdmFsCiAgICAgICAgICAgICAgICBkWyJsIl0uYXBwZW5kKFt5X3ZhbCwgIDBdKQqjIgAAAAAAAPQiAAAAAAAAAAAAAKMiAAAAAAAAoyIAAAAAAABRAAAAICAgICAgICAgICAgaWYgbm90IGRbImwiXVswXSA9PSB5X3ZhbAogICAgICAgICAgICAgICAgZFsibCJdLmFwcGVuZChbeV92YWwsICAwXSkKZyIAAAAAAAC4IgAAAAAAAAAAAABnIgAAAAAAAGciAAAAAAAAUQAAACAgICAgICAgICAgIGlmIG5vdCBkWyJsIl1bMF0gPT0geV92YWwKICAgICAgICAgICAgICAgIGRbImwiXS5hcHBlbmQoW3lfdmFsLCAgMF0pCkAiAAAAAAAAkSIAAAAAAAAAAAAAQCIAAAAAAABAIgAAAAAAAFEAAAAgICAgICAgICAgICBpZiBub3QgZFsibCJdWzBdID09IHlfdmFsCiAgICAgICAgICAgICAgICBkWyJsIl0uYXBwZW5kKFt5X3ZhbCwgIDBdKQoIIgAAAAAAAFkiAAAAAAAAAAAAAAgiAAAAAAAACCIAAAAAAABRAAAAICAgICAgICAgICAgaWYgbm90IGRbImwiXVswXSA9PSB5X3ZhbAogICAgICAgICAgICAgICAgZFsibCJdLmFwcGVuZChbeV92YWwsICAwXSkKwCEAAAAAAAARIgAAAAAAAAAAAADAIQAAAAAAAMAhAAAAAAAAUQAAACAgICAgICAgICAgIGlmIG5vdCBkWyJsIl1bMF0gPT0geV92YWwKICAgICAgICAgICAgICAgIGRbImwiXS5hcHBlbmQoW3lfdmFsLCAgMF0pCqIhAAAAAAAA8yEAAAAAAAAAAAAAoiEAAAAAAACiIQAAAAAAAFEAAAAgICAgICAgICAgICBpZiBub3QgZFsibCJdWzBdID09IHlfdmFsCiAgICAgICAgICAgICAgICBkWyJsIl0uYXBwZW5kKFt5X3ZhbCwgIDBdKQpmIQAAAAAAALchAAAAAAAAAAAAAGYhAAAAAAAAZiEAAAAAAABRAAAAICAgICAgICAgICAgaWYgbm90IGRbImwiXVswXSA9PSB5X3ZhbAogICAgICAgICAgICAgICAgZFsibCJdLmFwcGVuZChbeV92YWwsICAwXSkKPyEAAAAAAACQIQAAAAAAAAAAAAA/IQAAAAAAAD8hAAAAAAAAUQAAACAgICAgICAgICAgIGlmIG5vdCBkWyJsIl1bMF0gPT0geV92YWwKICAgICAgICAgICAgICAgIGRbImwiXS5hcHBlbmQoW3lfdmFsLCAgMF0pCgchAAAAAAAAWCEAAAAAAAAAAAAAByEAAAAAAAAHIQAAAAAAAFEAAAAgICAgICAgICAgICBpZiBub3QgZFsibCJdWzBdID09IHlfdmFsCiAgICAgICAgICAgICAgICBkWyJsIl0uYXBwZW5kKFt5X3ZhbCwgIDBdKQq/IAAAAAAAABAhAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAArDkAAAAAAACsOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAeIwAAAAAAAGIjAAAAAAAAAAAAAAAA8L8"
						],
						[
							5166,
							1,
							"insert",
							{
								"characters": "r"
							},
							"BAAAAPggAAAAAAAA+SAAAAAAAAAAAAAA+SAAAAAAAAD5IAAAAAAAAAEAAABs1SAAAAAAAADWIAAAAAAAAAAAAADWIAAAAAAAANYgAAAAAAAAAQAAAGw",
							"AgAAAAAAAAABAAAArDkAAAAAAACsOQAAAAAAAAAAAAAAAPC/AQAAAAIAAADVIAAAAAAAANYgAAAAAAAAAAAAAAAA8L/4IAAAAAAAAPkgAAAAAAAAAAAAAAAA8L8"
						],
						[
							5172,
							1,
							"insert",
							{
								"characters": ":"
							},
							"AgAAADcjAAAAAAAAOCMAAAAAAAAAAAAA5CAAAAAAAADlIAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAArDkAAAAAAACsOQAAAAAAAAAAAAAAAPC/AQAAAAIAAADkIAAAAAAAAOQgAAAAAAAAAAAAAAAA8L83IwAAAAAAADcjAAAAAAAAAAAAAAAA8L8"
						],
						[
							5180,
							1,
							"insert",
							{
								"characters": "-1"
							},
							"BgAAAC0jAAAAAAAALiMAAAAAAAAAAAAALiMAAAAAAAAuIwAAAAAAAAEAAAAw2SAAAAAAAADaIAAAAAAAAAAAAADaIAAAAAAAANogAAAAAAAAAQAAADAuIwAAAAAAAC8jAAAAAAAAAAAAANogAAAAAAAA2yAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAArjkAAAAAAACuOQAAAAAAAAAAAAAAAPC/AQAAAAIAAADaIAAAAAAAANkgAAAAAAAAAAAAAAAA8L8uIwAAAAAAAC0jAAAAAAAAAAAAAAAA8L8"
						],
						[
							5182,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AgAAANwgAAAAAAAA3iAAAAAAAAAAAAAAMyMAAAAAAAA1IwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAsDkAAAAAAACwOQAAAAAAAAAAAAAAAPC/AQAAAAIAAADcIAAAAAAAANwgAAAAAAAAAAAAAAAA8L8xIwAAAAAAADEjAAAAAAAAAAAAAAAA8L8"
						],
						[
							5183,
							1,
							"insert",
							{
								"characters": "0"
							},
							"AgAAADQjAAAAAAAANSMAAAAAAAAAAAAA3SAAAAAAAADeIAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAtDkAAAAAAAC0OQAAAAAAAAAAAAAAAPC/AQAAAAIAAADdIAAAAAAAAN0gAAAAAAAAAAAAAAAA8L80IwAAAAAAADQjAAAAAAAAAAAAAAAA8L8"
						],
						[
							5201,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AwAAAMoeAAAAAAAAyx4AAAAAAAAAAAAAyx4AAAAAAADTHgAAAAAAAAAAAADTHgAAAAAAANceAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAtjkAAAAAAAC2OQAAAAAAAAAAAAAAAPC/AQAAAAEAAADKHgAAAAAAAMoeAAAAAAAAAAAAAAAA8L8"
						],
						[
							5202,
							1,
							"paste",
							null,
							"AQAAANceAAAAAAAAHx8AAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAwzkAAAAAAADDOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADXHgAAAAAAANceAAAAAAAAAAAAAAAA8L8"
						],
						[
							5203,
							1,
							"unindent",
							null,
							"AQAAAPseAAAAAAAA+x4AAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAACzoAAAAAAAALOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAfHwAAAAAAAB8fAAAAAAAAAAAAAAAA8L8"
						],
						[
							5204,
							3,
							"indent",
							null,
							"AwAAAPseAAAAAAAA/x4AAAAAAAAAAAAA+x4AAAAAAAD/HgAAAAAAAAAAAAD7HgAAAAAAAP8eAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAACjoAAAAAAAAKOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAeHwAAAAAAAB4fAAAAAAAAAAAAAAAA8L8"
						],
						[
							5207,
							1,
							"left_delete",
							null,
							"AQAAANceAAAAAAAA1x4AAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAFjoAAAAAAAAWOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADYHgAAAAAAANgeAAAAAAAAAAAAAABAYEA"
						],
						[
							5225,
							3,
							"left_delete",
							null,
							"BgAAAB0fAAAAAAAAHR8AAAAAAAAKAAAAYWJzKHZfbG9jKe0eAAAAAAAA7R4AAAAAAAAKAAAAYWJzKHZfbG9jKRIfAAAAAAAAEh8AAAAAAAABAAAAIOweAAAAAAAA7B4AAAAAAAABAAAAIBAfAAAAAAAAEB8AAAAAAAABAAAAIOseAAAAAAAA6x4AAAAAAAABAAAALA",
							"AgAAAAAAAAABAAAAFToAAAAAAAAVOgAAAAAAAAAAAAAAAPC/AQAAAAIAAADtHgAAAAAAAPceAAAAAAAAAAAAAAAA8L8dHwAAAAAAACcfAAAAAAAAAAAAAAAA8L8"
						],
						[
							5231,
							1,
							"left_delete",
							null,
							"AQAAAA4fAAAAAAAADh8AAAAAAAABAAAALA",
							"AgAAAAAAAAABAAAA/TkAAAAAAAD9OQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAPHwAAAAAAAA8fAAAAAAAAAAAAAAAA8L8"
						],
						[
							5234,
							1,
							"insert",
							{
								"characters": ","
							},
							"AgAAAA4fAAAAAAAADx8AAAAAAAAAAAAA6x4AAAAAAADsHgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA/DkAAAAAAAD8OQAAAAAAAAAAAAAAAPC/AQAAAAIAAADrHgAAAAAAAOseAAAAAAAAAAAAAAAAdEAOHwAAAAAAAA4fAAAAAAAAAAAAAAAAdEA"
						],
						[
							5235,
							1,
							"insert",
							{
								"characters": " 00"
							},
							"BgAAABAfAAAAAAAAER8AAAAAAAAAAAAA7B4AAAAAAADtHgAAAAAAAAAAAAASHwAAAAAAABMfAAAAAAAAAAAAAO0eAAAAAAAA7h4AAAAAAAAAAAAAFB8AAAAAAAAVHwAAAAAAAAAAAADuHgAAAAAAAO8eAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA/jkAAAAAAAD+OQAAAAAAAAAAAAAAAPC/AQAAAAIAAADsHgAAAAAAAOweAAAAAAAAAAAAAAAA8L8QHwAAAAAAABAfAAAAAAAAAAAAAAAA8L8"
						],
						[
							5236,
							1,
							"left_delete",
							null,
							"AgAAABUfAAAAAAAAFR8AAAAAAAABAAAAMO4eAAAAAAAA7h4AAAAAAAABAAAAMA",
							"AgAAAAAAAAABAAAABDoAAAAAAAAEOgAAAAAAAAAAAAAAAPC/AQAAAAIAAADvHgAAAAAAAO8eAAAAAAAAAAAAAAAA8L8WHwAAAAAAABYfAAAAAAAAAAAAAAAA8L8"
						],
						[
							5251,
							1,
							"run_macro_file",
							{
								"file": "res://Packages/Default/Delete Line.sublime-macro"
							},
							"AgAAAGMjAAAAAAAAYyMAAAAAAABWAAAAICAgICAgICAgICAgaWYgbm90IGRbImwiXVstMV1bMF0gPT0geV92YWw6CiAgICAgICAgICAgICAgICBkWyJsIl0uYXBwZW5kKFt5X3ZhbCwgIDBdKQoLIQAAAAAAAAshAAAAAAAAVgAAACAgICAgICAgICAgIGlmIG5vdCBkWyJyIl1bLTFdWzBdID09IHlfdmFsOgogICAgICAgICAgICAgICAgZFsiciJdLmFwcGVuZChbeV92YWwsICAwXSkK",
							"AgAAAAAAAAABAAAAAjoAAAAAAAACOgAAAAAAAAAAAAAAAPC/AQAAAAIAAABgIQAAAAAAACMhAAAAAAAAAAAAAAAA8L+4IwAAAAAAAIcjAAAAAAAAAAAAAAAA8L8"
						],
						[
							5258,
							2,
							"left_delete",
							null,
							"CAAAANIiAAAAAAAA0iIAAAAAAAAGAAAAYXBwZW5k0SEAAAAAAADRIQAAAAAAAAYAAABhcHBlbmTRIAAAAAAAANEgAAAAAAAABgAAAGFwcGVuZNcfAAAAAAAA1x8AAAAAAAAGAAAAYXBwZW5kvyIAAAAAAAC/IgAAAAAAAAEAAAAuxCEAAAAAAADEIQAAAAAAAAEAAAAuyiAAAAAAAADKIAAAAAAAAAEAAAAu1h8AAAAAAADWHwAAAAAAAAEAAAAu",
							"AgAAAAAAAAABAAAAVjkAAAAAAABWOQAAAAAAAAAAAAAAAPC/AQAAAAQAAADXHwAAAAAAAN0fAAAAAAAAAAAAAAAA8L/RIAAAAAAAANcgAAAAAAAAAAAAAAAA8L/RIQAAAAAAANchAAAAAAAAAAAAAAAA8L/SIgAAAAAAANgiAAAAAAAAAAAAAAAA8L8"
						],
						[
							5259,
							1,
							"insert",
							{
								"characters": "[-1]"
							},
							"EAAAALwiAAAAAAAAvSIAAAAAAAAAAAAAwiEAAAAAAADDIQAAAAAAAAAAAADJIAAAAAAAAMogAAAAAAAAAAAAANYfAAAAAAAA1x8AAAAAAAAAAAAAwCIAAAAAAADBIgAAAAAAAAAAAADFIQAAAAAAAMYhAAAAAAAAAAAAAMsgAAAAAAAAzCAAAAAAAAAAAAAA1x8AAAAAAADYHwAAAAAAAAAAAADEIgAAAAAAAMUiAAAAAAAAAAAAAMghAAAAAAAAySEAAAAAAAAAAAAAzSAAAAAAAADOIAAAAAAAAAAAAADYHwAAAAAAANkfAAAAAAAAAAAAAMgiAAAAAAAAySIAAAAAAAAAAAAAyyEAAAAAAADMIQAAAAAAAAAAAADPIAAAAAAAANAgAAAAAAAAAAAAANkfAAAAAAAA2h8AAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAOjkAAAAAAAA6OQAAAAAAAAAAAAAAAPC/AQAAAAQAAADWHwAAAAAAANYfAAAAAAAAAAAAAAAA8L/JIAAAAAAAAMkgAAAAAAAAAAAAAAAA8L/CIQAAAAAAAMIhAAAAAAAAAAAAAAAA8L+8IgAAAAAAALwiAAAAAAAAAAAAAAAA8L8"
						],
						[
							5260,
							1,
							"insert",
							{
								"characters": " ="
							},
							"CAAAAMwiAAAAAAAAzSIAAAAAAAAAAAAAziEAAAAAAADPIQAAAAAAAAAAAADRIAAAAAAAANIgAAAAAAAAAAAAANofAAAAAAAA2x8AAAAAAAAAAAAA0CIAAAAAAADRIgAAAAAAAAAAAADRIQAAAAAAANIhAAAAAAAAAAAAANMgAAAAAAAA1CAAAAAAAAAAAAAA2x8AAAAAAADcHwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASjkAAAAAAABKOQAAAAAAAAAAAAAAAPC/AQAAAAQAAADaHwAAAAAAANofAAAAAAAAAAAAAAAA8L/RIAAAAAAAANEgAAAAAAAAAAAAAAAA8L/OIQAAAAAAAM4hAAAAAAAAAAAAAAAA8L/MIgAAAAAAAMwiAAAAAAAAAAAAAAAA8L8"
						],
						[
							5261,
							1,
							"insert",
							{
								"characters": " "
							},
							"BAAAANQiAAAAAAAA1SIAAAAAAAAAAAAA1CEAAAAAAADVIQAAAAAAAAAAAADVIAAAAAAAANYgAAAAAAAAAAAAANwfAAAAAAAA3R8AAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAUjkAAAAAAABSOQAAAAAAAAAAAAAAAPC/AQAAAAQAAADcHwAAAAAAANwfAAAAAAAAAAAAAAAA8L/VIAAAAAAAANUgAAAAAAAAAAAAAAAA8L/UIQAAAAAAANQhAAAAAAAAAAAAAAAA8L/UIgAAAAAAANQiAAAAAAAAAAAAAAAA8L8"
						],
						[
							5273,
							1,
							"insert",
							{
								"characters": "i_maxh"
							},
							"DgAAABMfAAAAAAAAFB8AAAAAAAAAAAAAFB8AAAAAAAAUHwAAAAAAAAEAAAAw7R4AAAAAAADuHgAAAAAAAAAAAADuHgAAAAAAAO4eAAAAAAAAAQAAADAUHwAAAAAAABUfAAAAAAAAAAAAAO4eAAAAAAAA7x4AAAAAAAAAAAAAFh8AAAAAAAAXHwAAAAAAAAAAAADvHgAAAAAAAPAeAAAAAAAAAAAAABgfAAAAAAAAGR8AAAAAAAAAAAAA8B4AAAAAAADxHgAAAAAAAAAAAAAaHwAAAAAAABsfAAAAAAAAAAAAAPEeAAAAAAAA8h4AAAAAAAAAAAAAHB8AAAAAAAAdHwAAAAAAAAAAAADyHgAAAAAAAPMeAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAVjkAAAAAAABWOQAAAAAAAAAAAAAAAPC/AQAAAAIAAADtHgAAAAAAAO4eAAAAAAAAAAAAAAAA8L8THwAAAAAAABQfAAAAAAAAAAAAAAAA8L8"
						],
						[
							5306,
							1,
							"insert",
							{
								"characters": "1024"
							},
							"BQAAANsBAAAAAAAA3AEAAAAAAAAAAAAA3AEAAAAAAADcAQAAAAAAAAMAAAA1MTLcAQAAAAAAAN0BAAAAAAAAAAAAAN0BAAAAAAAA3gEAAAAAAAAAAAAA3gEAAAAAAADfAQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAYDkAAAAAAABgOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADbAQAAAAAAAN4BAAAAAAAAAAAAAAAA8L8"
						],
						[
							5314,
							1,
							"insert",
							{
								"characters": "2**10"
							},
							"BgAAANsBAAAAAAAA3AEAAAAAAAAAAAAA3AEAAAAAAADcAQAAAAAAAAQAAAAxMDI03AEAAAAAAADdAQAAAAAAAAAAAADdAQAAAAAAAN4BAAAAAAAAAAAAAN4BAAAAAAAA3wEAAAAAAAAAAAAA3wEAAAAAAADgAQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAYTkAAAAAAABhOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADbAQAAAAAAAN8BAAAAAAAAAAAAAAAA8L8"
						],
						[
							5324,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AgAAABQlAAAAAAAAFCUAAAAAAAACAAAAIyDZJAAAAAAAANkkAAAAAAAAAgAAACMg",
							"AgAAAAAAAAABAAAAYjkAAAAAAABiOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABHJQAAAAAAANkkAAAAAAAAAAAAAAAA8L8"
						],
						[
							5328,
							1,
							"insert",
							{
								"characters": "\nprint"
							},
							"BwAAAEMlAAAAAAAARCUAAAAAAAAAAAAARCUAAAAAAABMJQAAAAAAAAAAAABMJQAAAAAAAE0lAAAAAAAAAAAAAE0lAAAAAAAATiUAAAAAAAAAAAAATiUAAAAAAABPJQAAAAAAAAAAAABPJQAAAAAAAFAlAAAAAAAAAAAAAFAlAAAAAAAAUSUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAXjkAAAAAAABeOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABDJQAAAAAAAEMlAAAAAAAAAAAAAADQgUA"
						],
						[
							5329,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAFElAAAAAAAAUyUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAbDkAAAAAAABsOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABRJQAAAAAAAFElAAAAAAAAAAAAAAAA8L8"
						],
						[
							5331,
							1,
							"insert",
							{
								"characters": "left"
							},
							"BAAAAFIlAAAAAAAAUyUAAAAAAAAAAAAAUyUAAAAAAABUJQAAAAAAAAAAAABUJQAAAAAAAFUlAAAAAAAAAAAAAFUlAAAAAAAAViUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAbjkAAAAAAABuOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABSJQAAAAAAAFIlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5333,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAFclAAAAAAAAWSUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAcjkAAAAAAAByOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABXJQAAAAAAAFclAAAAAAAAAAAAAAAA8L8"
						],
						[
							5335,
							1,
							"run_macro_file",
							{
								"file": "res://Packages/Default/Delete Left Right.sublime-macro"
							},
							"AgAAAFclAAAAAAAAVyUAAAAAAAABAAAAKFclAAAAAAAAVyUAAAAAAAABAAAAKQ",
							"AgAAAAAAAAABAAAAdDkAAAAAAAB0OQAAAAAAAAAAAAAAAPC/AQAAAAEAAABYJQAAAAAAAFglAAAAAAAAAAAAAAAA8L8"
						],
						[
							5336,
							1,
							"insert",
							{
								"characters": "print"
							},
							"BQAAAFclAAAAAAAAWCUAAAAAAAAAAAAAWCUAAAAAAABZJQAAAAAAAAAAAABZJQAAAAAAAFolAAAAAAAAAAAAAFolAAAAAAAAWyUAAAAAAAAAAAAAWyUAAAAAAABcJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAcjkAAAAAAAByOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABXJQAAAAAAAFclAAAAAAAAAAAAAAAA8L8"
						],
						[
							5337,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAFwlAAAAAAAAXiUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAdzkAAAAAAAB3OQAAAAAAAAAAAAAAAPC/AQAAAAEAAABcJQAAAAAAAFwlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5338,
							1,
							"insert",
							{
								"characters": "right"
							},
							"BQAAAF0lAAAAAAAAXiUAAAAAAAAAAAAAXiUAAAAAAABfJQAAAAAAAAAAAABfJQAAAAAAAGAlAAAAAAAAAAAAAGAlAAAAAAAAYSUAAAAAAAAAAAAAYSUAAAAAAABiJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAeTkAAAAAAAB5OQAAAAAAAAAAAAAAAPC/AQAAAAEAAABdJQAAAAAAAF0lAAAAAAAAAAAAAAAA8L8"
						],
						[
							5343,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAAFclAAAAAAAAWCUAAAAAAAAAAAAAWCUAAAAAAABgJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAfjkAAAAAAAB+OQAAAAAAAAAAAAAAAPC/AQAAAAEAAABXJQAAAAAAAFclAAAAAAAAAAAAAAAA8L8"
						],
						[
							5346,
							2,
							"swap_line_down",
							null,
							"BAAAAIMlAAAAAAAArCUAAAAAAAAAAAAARCUAAAAAAABEJQAAAAAAACkAAAAgICAgICAgIHByaW50KGxlZnQpCiAgICAgICAgcHJpbnQocmlnaHQpCpklAAAAAAAAwiUAAAAAAAAAAAAAWiUAAAAAAABaJQAAAAAAACkAAAAgICAgICAgIHByaW50KGxlZnQpCiAgICAgICAgcHJpbnQocmlnaHQpCg",
							"AgAAAAAAAAABAAAAhzkAAAAAAACHOQAAAAAAAAAAAAAAAPC/AQAAAAIAAABMJQAAAAAAAEwlAAAAAAAAAAAAAAAAVEBgJQAAAAAAAGAlAAAAAAAAAAAAAAAAVEA"
						],
						[
							5356,
							1,
							"insert",
							{
								"characters": "d"
							},
							"AgAAAColAAAAAAAAKyUAAAAAAAAAAAAA8CQAAAAAAADxJAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAhzkAAAAAAACHOQAAAAAAAAAAAAAAAPC/AQAAAAIAAADwJAAAAAAAAPAkAAAAAAAAAAAAAAAA8L8qJQAAAAAAAColAAAAAAAAAAAAAAAA8L8"
						],
						[
							5358,
							1,
							"insert_snippet",
							{
								"contents": "[${0:$SELECTION}]"
							},
							"BAAAAPEkAAAAAAAA8SQAAAAAAAABAAAAbPEkAAAAAAAA9CQAAAAAAAAAAAAALiUAAAAAAAAuJQAAAAAAAAEAAABsLiUAAAAAAAAxJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAiTkAAAAAAACJOQAAAAAAAAAAAAAAAPC/AQAAAAIAAADxJAAAAAAAAPIkAAAAAAAAAAAAAAAA8L8sJQAAAAAAAC0lAAAAAAAAAAAAAAAA8L8"
						],
						[
							5359,
							1,
							"insert_snippet",
							{
								"contents": "\"${0:$SELECTION}\""
							},
							"BAAAAPIkAAAAAAAA8iQAAAAAAAABAAAAbPIkAAAAAAAA9SQAAAAAAAAAAAAAMSUAAAAAAAAxJQAAAAAAAAEAAABsMSUAAAAAAAA0JQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAjTkAAAAAAACNOQAAAAAAAAAAAAAAAPC/AQAAAAIAAADyJAAAAAAAAPMkAAAAAAAAAAAAAAAA8L8vJQAAAAAAADAlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5365,
							1,
							"overwrite",
							{
								"characters": "r"
							},
							"AgAAADIlAAAAAAAAMyUAAAAAAAAAAAAAMyUAAAAAAAAzJQAAAAAAAAEAAABs",
							"AgAAAAAAAAABAAAAkTkAAAAAAACROQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAyJQAAAAAAADIlAAAAAAAAAAAAAADgdUA"
						],
						[
							5375,
							1,
							"left_delete",
							null,
							"AgAAAEslAAAAAAAASyUAAAAAAAABAAAAMgwlAAAAAAAADCUAAAAAAAABAAAAMg",
							"AgAAAAAAAAABAAAAkTkAAAAAAACROQAAAAAAAAAAAAAAAPC/AQAAAAIAAAANJQAAAAAAAA0lAAAAAAAAAAAAAAAA8L9MJQAAAAAAAEwlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5384,
							1,
							"alignment",
							null,
							"BAAAANkkAAAAAAAA2SQAAAAAAAAAAAAAFiUAAAAAAAAWJQAAAAAAAAAAAADeJAAAAAAAAN8kAAAAAAAAAAAAAB0lAAAAAAAAHSUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAjzkAAAAAAACPOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADZJAAAAAAAAEslAAAAAAAA////////738"
						],
						[
							5390,
							1,
							"insert",
							{
								"characters": "2"
							},
							"AgAAAEslAAAAAAAATCUAAAAAAAAAAAAADSUAAAAAAAAOJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAkDkAAAAAAACQOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAANJQAAAAAAAA0lAAAAAAAAAAAAAAAA8L9LJQAAAAAAAEslAAAAAAAAAAAAAADAgkA"
						],
						[
							5400,
							2,
							"left_delete",
							null,
							"AgAAAN8BAAAAAAAA3wEAAAAAAAABAAAAMN4BAAAAAAAA3gEAAAAAAAABAAAAMQ",
							"AgAAAAAAAAABAAAAkjkAAAAAAACSOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADgAQAAAAAAAOABAAAAAAAAAAAAAAAA8L8"
						],
						[
							5401,
							1,
							"insert",
							{
								"characters": "9"
							},
							"AQAAAN4BAAAAAAAA3wEAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAkDkAAAAAAACQOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADeAQAAAAAAAN4BAAAAAAAAAAAAAAAA8L8"
						],
						[
							5402,
							1,
							"insert",
							{
								"characters": "2"
							},
							"AQAAAN8BAAAAAAAA4AEAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAkTkAAAAAAACROQAAAAAAAAAAAAAAAPC/AQAAAAEAAADfAQAAAAAAAN8BAAAAAAAAAAAAAAAA8L8"
						],
						[
							5403,
							1,
							"left_delete",
							null,
							"AQAAAN8BAAAAAAAA3wEAAAAAAAABAAAAMg",
							"AgAAAAAAAAABAAAAkjkAAAAAAACSOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADgAQAAAAAAAOABAAAAAAAAAAAAAAAA8L8"
						],
						[
							5407,
							1,
							"left_delete",
							null,
							"AgAAAEwlAAAAAAAATCUAAAAAAAABAAAAKQ0lAAAAAAAADSUAAAAAAAABAAAAKQ",
							"AgAAAAAAAAABAAAAkTkAAAAAAACROQAAAAAAAAAAAAAAAPC/AQAAAAIAAAAOJQAAAAAAAA4lAAAAAAAAAAAAAAAA8L9NJQAAAAAAAE0lAAAAAAAAAAAAAABgg0A"
						],
						[
							5409,
							1,
							"insert",
							{
								"characters": "1"
							},
							"BAAAAEolAAAAAAAASyUAAAAAAAAAAAAASyUAAAAAAABLJQAAAAAAAAEAAAAyDCUAAAAAAAANJQAAAAAAAAAAAAANJQAAAAAAAA0lAAAAAAAAAQAAADI",
							"AgAAAAAAAAABAAAAjzkAAAAAAACPOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAANJQAAAAAAAAwlAAAAAAAAAAAAAAAA8L9LJQAAAAAAAEolAAAAAAAAAAAAAAAA8L8"
						],
						[
							5411,
							1,
							"insert",
							{
								"characters": ")"
							},
							"AgAAAEslAAAAAAAATCUAAAAAAAAAAAAADSUAAAAAAAAOJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAjzkAAAAAAACPOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAANJQAAAAAAAA0lAAAAAAAAAAAAAAAA8L9LJQAAAAAAAEslAAAAAAAAAAAAAAAA8L8"
						],
						[
							5418,
							1,
							"insert",
							{
								"characters": "\nprint"
							},
							"BwAAAM8kAAAAAAAA0CQAAAAAAAAAAAAA0CQAAAAAAADYJAAAAAAAAAAAAADYJAAAAAAAANkkAAAAAAAAAAAAANkkAAAAAAAA2iQAAAAAAAAAAAAA2iQAAAAAAADbJAAAAAAAAAAAAADbJAAAAAAAANwkAAAAAAAAAAAAANwkAAAAAAAA3SQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAkTkAAAAAAACROQAAAAAAAAAAAAAAAPC/AQAAAAEAAADPJAAAAAAAAM8kAAAAAAAAAAAAAAAQg0A"
						],
						[
							5419,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAN0kAAAAAAAA3yQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAnzkAAAAAAACfOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADdJAAAAAAAAN0kAAAAAAAAAAAAAAAA8L8"
						],
						[
							5421,
							1,
							"insert",
							{
								"characters": "d"
							},
							"AQAAAN4kAAAAAAAA3yQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAoTkAAAAAAAChOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADeJAAAAAAAAN4kAAAAAAAAAAAAAAAA8L8"
						],
						[
							5422,
							1,
							"left_delete",
							null,
							"AQAAAN4kAAAAAAAA3iQAAAAAAAABAAAAZA",
							"AgAAAAAAAAABAAAAojkAAAAAAACiOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADfJAAAAAAAAN8kAAAAAAAAAAAAAAAA8L8"
						],
						[
							5424,
							1,
							"insert",
							{
								"characters": "max"
							},
							"AwAAAN4kAAAAAAAA3yQAAAAAAAAAAAAA3yQAAAAAAADgJAAAAAAAAAAAAADgJAAAAAAAAOEkAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAoTkAAAAAAAChOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADeJAAAAAAAAN4kAAAAAAAAAAAAAAAA8L8"
						],
						[
							5425,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAOEkAAAAAAAA4yQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAApDkAAAAAAACkOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADhJAAAAAAAAOEkAAAAAAAAAAAAAAAA8L8"
						],
						[
							5426,
							1,
							"insert",
							{
								"characters": "d"
							},
							"AQAAAOIkAAAAAAAA4yQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAApjkAAAAAAACmOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADiJAAAAAAAAOIkAAAAAAAAAAAAAAAA8L8"
						],
						[
							5427,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAOMkAAAAAAAA5SQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAApzkAAAAAAACnOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADjJAAAAAAAAOMkAAAAAAAAAAAAAAAA8L8"
						],
						[
							5428,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAAOQkAAAAAAAA5iQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAqTkAAAAAAACpOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADkJAAAAAAAAOQkAAAAAAAAAAAAAAAA8L8"
						],
						[
							5429,
							1,
							"insert",
							{
								"characters": "h"
							},
							"AQAAAOUkAAAAAAAA5iQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAqzkAAAAAAACrOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADlJAAAAAAAAOUkAAAAAAAAAAAAAAAA8L8"
						],
						[
							5434,
							4,
							"swap_line_down",
							null,
							"CAAAAColAAAAAAAARSUAAAAAAAAAAAAA0CQAAAAAAADQJAAAAAAAABsAAAAgICAgICAgIHByaW50KG1heChkWyJoIl0pKQppJQAAAAAAAIQlAAAAAAAAAAAAAA8lAAAAAAAADyUAAAAAAAAbAAAAICAgICAgICBwcmludChtYXgoZFsiaCJdKSkKfyUAAAAAAACaJQAAAAAAAAAAAABOJQAAAAAAAE4lAAAAAAAAGwAAACAgICAgICAgcHJpbnQobWF4KGRbImgiXSkpCpUlAAAAAAAAsCUAAAAAAAAAAAAAZCUAAAAAAABkJQAAAAAAABsAAAAgICAgICAgIHByaW50KG1heChkWyJoIl0pKQo",
							"AgAAAAAAAAABAAAArDkAAAAAAACsOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqJAAAAAAAAOokAAAAAAAAAAAAAAAA8L8"
						],
						[
							5435,
							2,
							"swap_line_up",
							null,
							"BAAAAHolAAAAAAAAeiUAAAAAAAAbAAAAICAgICAgICBwcmludChtYXgoZFsiaCJdKSkKZCUAAAAAAAB/JQAAAAAAAAAAAABkJQAAAAAAAGQlAAAAAAAAGwAAACAgICAgICAgcHJpbnQobWF4KGRbImgiXSkpCk4lAAAAAAAAaSUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAArDkAAAAAAACsOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUJQAAAAAAAJQlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5441,
							2,
							"swap_line_down",
							null,
							"BAAAAH8lAAAAAAAAmiUAAAAAAAAAAAAATiUAAAAAAABOJQAAAAAAABsAAAAgICAgICAgIHByaW50KG1heChkWyJoIl0pKQqVJQAAAAAAALAlAAAAAAAAAAAAAGQlAAAAAAAAZCUAAAAAAAAbAAAAICAgICAgICBwcmludChtYXgoZFsiaCJdKSkK",
							"AgAAAAAAAAABAAAArDkAAAAAAACsOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABoJQAAAAAAAGglAAAAAAAAAAAAAAAA8L8"
						],
						[
							5444,
							1,
							"insert",
							{
								"characters": "/2"
							},
							"AgAAAJIlAAAAAAAAkyUAAAAAAAAAAAAAkyUAAAAAAACUJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAArDkAAAAAAACsOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACSJQAAAAAAAJIlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5450,
							2,
							"left_delete",
							null,
							"AgAAAJMlAAAAAAAAkyUAAAAAAAABAAAAMpIlAAAAAAAAkiUAAAAAAAABAAAALw",
							"AgAAAAAAAAABAAAArjkAAAAAAACuOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACUJQAAAAAAAJQlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5452,
							1,
							"insert",
							{
								"characters": "/2"
							},
							"AgAAAJMlAAAAAAAAlCUAAAAAAAAAAAAAlCUAAAAAAACVJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAArDkAAAAAAACsOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACTJQAAAAAAAJMlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5463,
							1,
							"paste",
							null,
							"BAAAADwlAAAAAAAASSUAAAAAAAAAAAAASSUAAAAAAABJJQAAAAAAABAAAABkWyJoIl1baV9tYXhoXS8x/SQAAAAAAAAKJQAAAAAAAAAAAAAKJQAAAAAAAAolAAAAAAAAEAAAAGRbImgiXVtpX21heGhdLzE",
							"AgAAAAAAAAABAAAArjkAAAAAAACuOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAD9JAAAAAAAAA0lAAAAAAAAAAAAAAAA8L88JQAAAAAAAEwlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5477,
							1,
							"insert",
							{
								"characters": "-"
							},
							"AgAAADclAAAAAAAAOCUAAAAAAAAAAAAA+yQAAAAAAAD8JAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAqDkAAAAAAACoOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAD7JAAAAAAAAPskAAAAAAAAAAAAAAAA8L83JQAAAAAAADclAAAAAAAAAAAAAAAA8L8"
						],
						[
							5482,
							1,
							"permute_selection",
							{
								"operation": "reverse"
							},
							"AgAAAC0lAAAAAAAAOCUAAAAAAAALAAAAZFsiciJdLlRbMV3wJAAAAAAAAPskAAAAAAAACwAAAGRbImwiXS5UWzFd",
							"AgAAAAAAAAABAAAAqjkAAAAAAACqOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAD7JAAAAAAAAPAkAAAAAAAAAAAAAAAA8L84JQAAAAAAAC0lAAAAAAAAAAAAAAAA8L8"
						],
						[
							5483,
							1,
							"permute_selection",
							{
								"operation": "reverse"
							},
							"AgAAAC0lAAAAAAAAOCUAAAAAAAALAAAAZFsibCJdLlRbMV3wJAAAAAAAAPskAAAAAAAACwAAAGRbInIiXS5UWzFd",
							"AgAAAAAAAAABAAAAqjkAAAAAAACqOQAAAAAAAAAAAAAAAPC/AQAAAAIAAADwJAAAAAAAAPskAAAAAAAAAAAAAAAA8L8tJQAAAAAAADglAAAAAAAAAAAAAAAA8L8"
						],
						[
							5485,
							1,
							"paste",
							null,
							"AgAAADklAAAAAAAARCUAAAAAAAAAAAAA/CQAAAAAAAAHJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAqjkAAAAAAACqOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAD8JAAAAAAAAPwkAAAAAAAAAAAAAAAA8L85JQAAAAAAADklAAAAAAAAAAAAAAAA8L8"
						],
						[
							5497,
							1,
							"permute_selection",
							{
								"operation": "reverse"
							},
							"AgAAAEQlAAAAAAAATyUAAAAAAAALAAAAZFsiciJdLlRbMV38JAAAAAAAAAclAAAAAAAACwAAAGRbImwiXS5UWzFd",
							"AgAAAAAAAAABAAAAwDkAAAAAAADAOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAAHJQAAAAAAAPwkAAAAAAAAAAAAAAAA8L9PJQAAAAAAAEQlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5517,
							1,
							"insert",
							{
								"characters": " "
							},
							"BAAAAFAlAAAAAAAAUSUAAAAAAAAAAAAAUSUAAAAAAABRJQAAAAAAAA4AAAAgbWF4KGRbImgiXSkvMgglAAAAAAAACSUAAAAAAAAAAAAACSUAAAAAAAAJJQAAAAAAAA4AAAAgbWF4KGRbImgiXSkvMg",
							"AgAAAAAAAAABAAAAwDkAAAAAAADAOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAAIJQAAAAAAABYlAAAAAAAAAAAAAAAA8L9QJQAAAAAAAF4lAAAAAAAAAAAAAAAA8L8"
						],
						[
							5518,
							1,
							"paste",
							null,
							"AgAAAEQlAAAAAAAAWyUAAAAAAAAAAAAACSUAAAAAAAAgJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAApjkAAAAAAACmOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAAJJQAAAAAAAAklAAAAAAAAAAAAAAAA8L9EJQAAAAAAAEQlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5522,
							1,
							"insert",
							{
								"characters": "i_maxh"
							},
							"DgAAAGclAAAAAAAAaCUAAAAAAAAAAAAAaCUAAAAAAABoJQAAAAAAAAsAAABkWyJsIl0uVFsxXRUlAAAAAAAAFiUAAAAAAAAAAAAAFiUAAAAAAAAWJQAAAAAAAAsAAABkWyJyIl0uVFsxXV4lAAAAAAAAXyUAAAAAAAAAAAAAFiUAAAAAAAAXJQAAAAAAAAAAAABgJQAAAAAAAGElAAAAAAAAAAAAABclAAAAAAAAGCUAAAAAAAAAAAAAYiUAAAAAAABjJQAAAAAAAAAAAAAYJQAAAAAAABklAAAAAAAAAAAAAGQlAAAAAAAAZSUAAAAAAAAAAAAAGSUAAAAAAAAaJQAAAAAAAAAAAABmJQAAAAAAAGclAAAAAAAAAAAAABolAAAAAAAAGyUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA1DkAAAAAAADUOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAAVJQAAAAAAACAlAAAAAAAAAAAAAAAA8L9nJQAAAAAAAHIlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5525,
							1,
							"insert_snippet",
							{
								"contents": "(${0:$SELECTION})"
							},
							"BAAAAAklAAAAAAAACSUAAAAAAAASAAAAZFsibCJdLlRbMV0taV9tYXhoCSUAAAAAAAAdJQAAAAAAAAAAAABYJQAAAAAAAFglAAAAAAAAEgAAAGRbInIiXS5UWzFdLWlfbWF4aFglAAAAAAAAbCUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAyjkAAAAAAADKOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAAbJQAAAAAAAAklAAAAAAAAAAAAAAAA8L9oJQAAAAAAAFYlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5527,
							1,
							"insert",
							{
								"characters": "abs"
							},
							"BgAAAFglAAAAAAAAWSUAAAAAAAAAAAAACSUAAAAAAAAKJQAAAAAAAAAAAABaJQAAAAAAAFslAAAAAAAAAAAAAAolAAAAAAAACyUAAAAAAAAAAAAAXCUAAAAAAABdJQAAAAAAAAAAAAALJQAAAAAAAAwlAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAzjkAAAAAAADOOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAAJJQAAAAAAAAklAAAAAAAAAAAAAAAA8L9YJQAAAAAAAFglAAAAAAAAAAAAAAAA8L8"
						],
						[
							5538,
							1,
							"insert",
							{
								"characters": "np.asarray"
							},
							"FAAAAGslAAAAAAAAbCUAAAAAAAAAAAAAGSUAAAAAAAAaJQAAAAAAAAAAAABtJQAAAAAAAG4lAAAAAAAAAAAAABolAAAAAAAAGyUAAAAAAAAAAAAAbyUAAAAAAABwJQAAAAAAAAAAAAAbJQAAAAAAABwlAAAAAAAAAAAAAHElAAAAAAAAciUAAAAAAAAAAAAAHCUAAAAAAAAdJQAAAAAAAAAAAABzJQAAAAAAAHQlAAAAAAAAAAAAAB0lAAAAAAAAHiUAAAAAAAAAAAAAdSUAAAAAAAB2JQAAAAAAAAAAAAAeJQAAAAAAAB8lAAAAAAAAAAAAAHclAAAAAAAAeCUAAAAAAAAAAAAAHyUAAAAAAAAgJQAAAAAAAAAAAAB5JQAAAAAAAHolAAAAAAAAAAAAACAlAAAAAAAAISUAAAAAAAAAAAAAeyUAAAAAAAB8JQAAAAAAAAAAAAAhJQAAAAAAACIlAAAAAAAAAAAAAH0lAAAAAAAAfiUAAAAAAAAAAAAAIiUAAAAAAAAjJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA1DkAAAAAAADUOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAAZJQAAAAAAABklAAAAAAAAAAAAAAAA8L9rJQAAAAAAAGslAAAAAAAAAAAAAAAA8L8"
						],
						[
							5540,
							1,
							"insert_snippet",
							{
								"contents": "(${0:$SELECTION})"
							},
							"BAAAACMlAAAAAAAAIyUAAAAAAAAGAAAAaV9tYXhoIyUAAAAAAAArJQAAAAAAAAAAAACBJQAAAAAAAIElAAAAAAAABgAAAGlfbWF4aIElAAAAAAAAiSUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA6DkAAAAAAADoOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAAjJQAAAAAAACklAAAAAAAAAAAAAAAA8L9/JQAAAAAAAIUlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5557,
							1,
							"bh_key",
							{
								"plugin":
								{
									"args":
									{
										"remove_block": false,
										"remove_content": false,
										"remove_indent": false
									},
									"command": "bh_modules.bracketremove",
									"type":
									[
										"__all__"
									]
								}
							},
							"BAAAAColAAAAAAAAKiUAAAAAAAABAAAAKSMlAAAAAAAAIyUAAAAAAAABAAAAKIYlAAAAAAAAhiUAAAAAAAABAAAAKX8lAAAAAAAAfyUAAAAAAAABAAAAKA",
							"AgAAAAAAAAABAAAA7DkAAAAAAADsOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAApJQAAAAAAACklAAAAAAAAAAAAAAAA8L+HJQAAAAAAAIclAAAAAAAAAAAAAAAA8L8"
						],
						[
							5560,
							4,
							"left_delete",
							null,
							"CAAAAHglAAAAAAAAeCUAAAAAAAAHAAAAYXNhcnJheRwlAAAAAAAAHCUAAAAAAAAHAAAAYXNhcnJheXAlAAAAAAAAcCUAAAAAAAABAAAALhslAAAAAAAAGyUAAAAAAAABAAAALm4lAAAAAAAAbiUAAAAAAAABAAAAcBolAAAAAAAAGiUAAAAAAAABAAAAcGwlAAAAAAAAbCUAAAAAAAABAAAAbhklAAAAAAAAGSUAAAAAAAABAAAAbg",
							"AgAAAAAAAAABAAAA6DkAAAAAAADoOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAAjJQAAAAAAABwlAAAAAAAAAAAAAAAA8L9/JQAAAAAAAHglAAAAAAAAAAAAAAAA8L8"
						],
						[
							5568,
							1,
							"left_delete",
							null,
							"AgAAAE0lAAAAAAAATSUAAAAAAAAMAAAALWRbImwiXS5UWzFd+yQAAAAAAAD7JAAAAAAAAAwAAAAtZFsiciJdLlRbMV0",
							"AgAAAAAAAAABAAAA1DkAAAAAAADUOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAD7JAAAAAAAAAclAAAAAAAAAAAAAAAA8L9NJQAAAAAAAFklAAAAAAAAAAAAAAAA8L8"
						],
						[
							5576,
							1,
							"left_delete",
							null,
							"AgAAAEMlAAAAAAAAQyUAAAAAAAAXAAAAYWJzKGRbInIiXS5UWzFdLWlfbWF4aCn9JAAAAAAAAP0kAAAAAAAAFwAAAGFicyhkWyJsIl0uVFsxXS1pX21heGgp",
							"AgAAAAAAAAABAAAAvDkAAAAAAAC8OQAAAAAAAAAAAAAAAPC/AQAAAAIAAAD9JAAAAAAAABQlAAAAAAAAAAAAAAAA8L9DJQAAAAAAAFolAAAAAAAAAAAAAAAA8L8"
						],
						[
							5577,
							1,
							"insert",
							{
								"characters": "i_maxh"
							},
							"DAAAACwlAAAAAAAALSUAAAAAAAAAAAAA/SQAAAAAAAD+JAAAAAAAAAAAAAAuJQAAAAAAAC8lAAAAAAAAAAAAAP4kAAAAAAAA/yQAAAAAAAAAAAAAMCUAAAAAAAAxJQAAAAAAAAAAAAD/JAAAAAAAAAAlAAAAAAAAAAAAADIlAAAAAAAAMyUAAAAAAAAAAAAAACUAAAAAAAABJQAAAAAAAAAAAAA0JQAAAAAAADUlAAAAAAAAAAAAAAElAAAAAAAAAiUAAAAAAAAAAAAANiUAAAAAAAA3JQAAAAAAAAAAAAACJQAAAAAAAAMlAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAjjkAAAAAAACOOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAD9JAAAAAAAAP0kAAAAAAAAAAAAAAAA8L8sJQAAAAAAACwlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5578,
							1,
							"insert",
							{
								"characters": "/2"
							},
							"BAAAADglAAAAAAAAOSUAAAAAAAAAAAAAAyUAAAAAAAAEJQAAAAAAAAAAAAA6JQAAAAAAADslAAAAAAAAAAAAAAQlAAAAAAAABSUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAmjkAAAAAAACaOQAAAAAAAAAAAAAAAPC/AQAAAAIAAAADJQAAAAAAAAMlAAAAAAAAAAAAAAAA8L84JQAAAAAAADglAAAAAAAAAAAAAAAA8L8"
						],
						[
							5583,
							1,
							"insert",
							{
								"characters": "imac"
							},
							"BQAAAHglAAAAAAAAeSUAAAAAAAAAAAAAeSUAAAAAAAB5JQAAAAAAAAsAAABtYXgoZFsiaCJdKXklAAAAAAAAeiUAAAAAAAAAAAAAeiUAAAAAAAB7JQAAAAAAAAAAAAB7JQAAAAAAAHwlAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAnjkAAAAAAACeOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACDJQAAAAAAAHglAAAAAAAAAAAAAAAA8L8"
						],
						[
							5584,
							1,
							"left_delete",
							null,
							"AQAAAHslAAAAAAAAeyUAAAAAAAABAAAAYw",
							"AgAAAAAAAAABAAAAlzkAAAAAAACXOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB8JQAAAAAAAHwlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5585,
							1,
							"insert",
							{
								"characters": "xh"
							},
							"AgAAAHslAAAAAAAAfCUAAAAAAAAAAAAAfCUAAAAAAAB9JQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAljkAAAAAAACWOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB7JQAAAAAAAHslAAAAAAAAAAAAAAAA8L8"
						],
						[
							5586,
							1,
							"insert_completion",
							{
								"completion": "i_maxh",
								"format": "text",
								"keep_prefix": false,
								"must_insert": false,
								"trigger": "i_maxh"
							},
							"AgAAAHglAAAAAAAAeCUAAAAAAAAFAAAAaW1heGh4JQAAAAAAAH4lAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAmDkAAAAAAACYOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB9JQAAAAAAAH0lAAAAAAAAAAAAAAAA8L8"
						],
						[
							5596,
							1,
							"duplicate_lines",
							null,
							"AQAAAD4lAAAAAAAAVCUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAmTkAAAAAAACZOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABTJQAAAAAAAFMlAAAAAAAAAAAAAABAakA"
						],
						[
							5597,
							1,
							"swap_line_down",
							null,
							"AgAAAIAlAAAAAAAAliUAAAAAAAAAAAAAVCUAAAAAAABUJQAAAAAAABYAAAAgICAgICAgIHByaW50KGRbInIiXSkK",
							"AgAAAAAAAAABAAAArzkAAAAAAACvOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABpJQAAAAAAAGklAAAAAAAAAAAAAAAA8L8"
						],
						[
							5600,
							1,
							"insert",
							{
								"characters": "+d"
							},
							"AgAAAH4lAAAAAAAAfyUAAAAAAAAAAAAAfyUAAAAAAACAJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAArzkAAAAAAACvOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB+JQAAAAAAAH4lAAAAAAAAAAAAAAAA8L8"
						],
						[
							5601,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAIAlAAAAAAAAgiUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAsTkAAAAAAACxOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACAJQAAAAAAAIAlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5602,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAAIElAAAAAAAAgyUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAszkAAAAAAACzOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACBJQAAAAAAAIElAAAAAAAAAAAAAAAA8L8"
						],
						[
							5603,
							1,
							"insert",
							{
								"characters": "l"
							},
							"AQAAAIIlAAAAAAAAgyUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAtTkAAAAAAAC1OQAAAAAAAAAAAAAAAPC/AQAAAAEAAACCJQAAAAAAAIIlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5617,
							1,
							"insert",
							{
								"characters": "[1]"
							},
							"BgAAAIUlAAAAAAAAhiUAAAAAAAAAAAAAfiUAAAAAAAB/JQAAAAAAAAAAAACHJQAAAAAAAIglAAAAAAAAAAAAAH8lAAAAAAAAgCUAAAAAAAAAAAAAiSUAAAAAAACKJQAAAAAAAAAAAACAJQAAAAAAAIElAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAtjkAAAAAAAC2OQAAAAAAAAAAAAAAAPC/AQAAAAIAAAB+JQAAAAAAAH4lAAAAAAAAAAAAAAAA8L+FJQAAAAAAAIUlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5624,
							1,
							"insert_snippet",
							{
								"contents": "(${0:$SELECTION})"
							},
							"AgAAAHglAAAAAAAAeCUAAAAAAAATAAAAZFsiciJdWzFdK2RbImwiXVsxXXglAAAAAAAAjSUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAvDkAAAAAAAC8OQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB4JQAAAAAAAIslAAAAAAAAAAAAAAAA8L8"
						],
						[
							5626,
							1,
							"insert",
							{
								"characters": "d"
							},
							"AQAAAHklAAAAAAAAeiUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAvjkAAAAAAAC+OQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB5JQAAAAAAAHklAAAAAAAAAAAAAAAA8L8"
						],
						[
							5627,
							1,
							"insert",
							{
								"characters": "[\""
							},
							"AgAAAHolAAAAAAAAeyUAAAAAAAAAAAAAeyUAAAAAAAB8JQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAvzkAAAAAAAC/OQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB6JQAAAAAAAHolAAAAAAAAAAAAAAAA8L8"
						],
						[
							5628,
							1,
							"insert",
							{
								"characters": "r\"][0]"
							},
							"BgAAAHwlAAAAAAAAfSUAAAAAAAAAAAAAfSUAAAAAAAB+JQAAAAAAAAAAAAB+JQAAAAAAAH8lAAAAAAAAAAAAAH8lAAAAAAAAgCUAAAAAAAAAAAAAgCUAAAAAAACBJQAAAAAAAAAAAACBJQAAAAAAAIIlAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAwTkAAAAAAADBOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB8JQAAAAAAAHwlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5629,
							1,
							"insert",
							{
								"characters": ","
							},
							"AQAAAIIlAAAAAAAAgyUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAxzkAAAAAAADHOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACCJQAAAAAAAIIlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5630,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAIMlAAAAAAAAhCUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAyDkAAAAAAADIOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACDJQAAAAAAAIMlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5634,
							1,
							"insert",
							{
								"characters": "np.asarray"
							},
							"CgAAAHglAAAAAAAAeSUAAAAAAAAAAAAAeSUAAAAAAAB6JQAAAAAAAAAAAAB6JQAAAAAAAHslAAAAAAAAAAAAAHslAAAAAAAAfCUAAAAAAAAAAAAAfCUAAAAAAAB9JQAAAAAAAAAAAAB9JQAAAAAAAH4lAAAAAAAAAAAAAH4lAAAAAAAAfyUAAAAAAAAAAAAAfyUAAAAAAACAJQAAAAAAAAAAAACAJQAAAAAAAIElAAAAAAAAAAAAAIElAAAAAAAAgiUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAyTkAAAAAAADJOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB4JQAAAAAAAHglAAAAAAAAAAAAAAAA8L8"
						],
						[
							5641,
							1,
							"insert",
							{
								"characters": "array"
							},
							"BgAAAHslAAAAAAAAfCUAAAAAAAAAAAAAfCUAAAAAAAB8JQAAAAAAAAcAAABhc2FycmF5fCUAAAAAAAB9JQAAAAAAAAAAAAB9JQAAAAAAAH4lAAAAAAAAAAAAAH4lAAAAAAAAfyUAAAAAAAAAAAAAfyUAAAAAAACAJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA0zkAAAAAAADTOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB7JQAAAAAAAIIlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5645,
							4,
							"left_delete",
							null,
							"BAAAAHslAAAAAAAAeyUAAAAAAAAFAAAAYXJyYXl6JQAAAAAAAHolAAAAAAAAAQAAAC55JQAAAAAAAHklAAAAAAAAAQAAAHB4JQAAAAAAAHglAAAAAAAAAQAAAG4",
							"AgAAAAAAAAABAAAA0TkAAAAAAADROQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB7JQAAAAAAAIAlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5648,
							1,
							"bh_key",
							{
								"plugin":
								{
									"command": "bh_modules.swapbrackets",
									"type":
									[
										"__all__"
									]
								}
							},
							"AgAAAJclAAAAAAAAlyUAAAAAAAABAAAAKXglAAAAAAAAeCUAAAAAAAABAAAAKA",
							"AgAAAAAAAAABAAAAyTkAAAAAAADJOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB5JQAAAAAAAHklAAAAAAAAAAAAAAAA8L8"
						],
						[
							5649,
							1,
							"execute_wrap_instance",
							null,
							"AwAAAHglAAAAAAAAeSUAAAAAAAAAAAAAlyUAAAAAAAChJQAAAAAAAAAAAACYJQAAAAAAAJglAAAAAAAACQAAACR7QkhfU0VMfQ",
							"AgAAAAAAAAABAAAAxzkAAAAAAADHOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB4JQAAAAAAAJYlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5681,
							1,
							"insert",
							{
								"characters": ".T"
							},
							"BgAAAJclAAAAAAAAmCUAAAAAAAAAAAAAjSUAAAAAAACOJQAAAAAAAAAAAACCJQAAAAAAAIMlAAAAAAAAAAAAAJolAAAAAAAAmyUAAAAAAAAAAAAAjyUAAAAAAACQJQAAAAAAAAAAAACDJQAAAAAAAIQlAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAyTkAAAAAAADJOQAAAAAAAAAAAAAAAPC/AQAAAAMAAACCJQAAAAAAAIIlAAAAAAAAAAAAAAAA8L+NJQAAAAAAAI0lAAAAAAAAAAAAAAAA8L+XJQAAAAAAAJclAAAAAAAAAAAAAAAA8L8"
						],
						[
							5689,
							1,
							"bh_key",
							{
								"plugin":
								{
									"command": "bh_modules.swapbrackets",
									"type":
									[
										"__all__"
									]
								}
							},
							"AgAAAJ0lAAAAAAAAnSUAAAAAAAABAAAAXXglAAAAAAAAeCUAAAAAAAABAAAAWw",
							"AgAAAAAAAAABAAAAzzkAAAAAAADPOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB5JQAAAAAAAHklAAAAAAAAAAAAAAAA8L8"
						],
						[
							5690,
							1,
							"execute_wrap_instance",
							null,
							"AwAAAHglAAAAAAAAeSUAAAAAAAAAAAAAnSUAAAAAAACnJQAAAAAAAAAAAACeJQAAAAAAAJ4lAAAAAAAACQAAACR7QkhfU0VMfQ",
							"AgAAAAAAAAABAAAAzTkAAAAAAADNOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB4JQAAAAAAAJwlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5692,
							1,
							"bh_key",
							{
								"plugin":
								{
									"command": "bh_modules.swapbrackets",
									"type":
									[
										"__all__"
									]
								}
							},
							"AgAAAJ4lAAAAAAAAniUAAAAAAAABAAAAKXclAAAAAAAAdyUAAAAAAAABAAAAKA",
							"AgAAAAAAAAABAAAAzzkAAAAAAADPOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACeJQAAAAAAAJ4lAAAAAAAAAAAAAAAA8L8"
						],
						[
							5693,
							1,
							"execute_wrap_instance",
							null,
							"AwAAAHclAAAAAAAAeCUAAAAAAAAAAAAAniUAAAAAAACoJQAAAAAAAAAAAACfJQAAAAAAAJ8lAAAAAAAACQAAACR7QkhfU0VMfQ",
							"AgAAAAAAAAABAAAAzTkAAAAAAADNOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB3JQAAAAAAAJ0lAAAAAAAAAAAAAAAA8L8"
						],
						[
							5696,
							1,
							"bh_key",
							{
								"plugin":
								{
									"command": "bh_modules.swapbrackets",
									"type":
									[
										"__all__"
									]
								}
							},
							"AgAAAJ0lAAAAAAAAnSUAAAAAAAABAAAAfXglAAAAAAAAeCUAAAAAAAABAAAAew",
							"AgAAAAAAAAABAAAAzzkAAAAAAADPOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACdJQAAAAAAAJ0lAAAAAAAAAAAAAAAA8L8"
						],
						[
							5697,
							1,
							"execute_wrap_instance",
							null,
							"AwAAAHglAAAAAAAAeSUAAAAAAAAAAAAAnSUAAAAAAACnJQAAAAAAAAAAAACeJQAAAAAAAJ4lAAAAAAAACQAAACR7QkhfU0VMfQ",
							"AgAAAAAAAAABAAAAzTkAAAAAAADNOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB4JQAAAAAAAJwlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5701,
							1,
							"insert",
							{
								"characters": "np.array"
							},
							"CAAAAHglAAAAAAAAeSUAAAAAAAAAAAAAeSUAAAAAAAB6JQAAAAAAAAAAAAB6JQAAAAAAAHslAAAAAAAAAAAAAHslAAAAAAAAfCUAAAAAAAAAAAAAfCUAAAAAAAB9JQAAAAAAAAAAAAB9JQAAAAAAAH4lAAAAAAAAAAAAAH4lAAAAAAAAfyUAAAAAAAAAAAAAfyUAAAAAAACAJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAzzkAAAAAAADPOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB4JQAAAAAAAHglAAAAAAAAAAAAAAAA8L8"
						],
						[
							5704,
							1,
							"insert",
							{
								"characters": ".T"
							},
							"AgAAAKYlAAAAAAAApyUAAAAAAAAAAAAApyUAAAAAAACoJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA1zkAAAAAAADXOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACmJQAAAAAAAKYlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5709,
							2,
							"left_delete",
							null,
							"AgAAAKclAAAAAAAApyUAAAAAAAABAAAAVKYlAAAAAAAApiUAAAAAAAABAAAALg",
							"AgAAAAAAAAABAAAA2TkAAAAAAADZOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACoJQAAAAAAAKglAAAAAAAAAAAAAAAA8L8"
						],
						[
							5724,
							1,
							"insert_snippet",
							{
								"contents": "[${0:$SELECTION}]"
							},
							"AgAAAIElAAAAAAAAgSUAAAAAAAAkAAAAZFsiciJdWzBdLlQsIGRbInIiXVsxXS5UK2RbImwiXVsxXS5UgSUAAAAAAACnJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA1zkAAAAAAADXOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACBJQAAAAAAAKUlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5732,
							1,
							"left_delete",
							null,
							"AwAAAKQlAAAAAAAApCUAAAAAAAACAAAALlSYJQAAAAAAAJglAAAAAAAAAgAAAC5UiyUAAAAAAACLJQAAAAAAAAIAAAAuVA",
							"AgAAAAAAAAABAAAA2TkAAAAAAADZOQAAAAAAAAAAAAAAAPC/AQAAAAMAAACNJQAAAAAAAIslAAAAAAAAAAAAAAAA8L+YJQAAAAAAAJolAAAAAAAAAAAAAAAA8L+kJQAAAAAAAKYlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5751,
							1,
							"insert",
							{
								"characters": "vstack"
							},
							"BwAAAHslAAAAAAAAfCUAAAAAAAAAAAAAfCUAAAAAAAB8JQAAAAAAAAUAAABhcnJheXwlAAAAAAAAfSUAAAAAAAAAAAAAfSUAAAAAAAB+JQAAAAAAAAAAAAB+JQAAAAAAAH8lAAAAAAAAAAAAAH8lAAAAAAAAgCUAAAAAAAAAAAAAgCUAAAAAAACBJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA0zkAAAAAAADTOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB7JQAAAAAAAIAlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5780,
							1,
							"insert",
							{
								"characters": ".T"
							},
							"AgAAAIwlAAAAAAAAjSUAAAAAAAAAAAAAjSUAAAAAAACOJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA1DkAAAAAAADUOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACMJQAAAAAAAIwlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5781,
							1,
							"insert_completion",
							{
								"completion": ".Trash/",
								"format": "snippet",
								"keep_prefix": false,
								"must_insert": false,
								"trigger": ".Trash/"
							},
							"AgAAAIwlAAAAAAAAjCUAAAAAAAACAAAALlSMJQAAAAAAAJMlAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA1jkAAAAAAADWOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACOJQAAAAAAAI4lAAAAAAAAAAAAAAAA8L8"
						],
						[
							5782,
							5,
							"left_delete",
							null,
							"BQAAAJIlAAAAAAAAkiUAAAAAAAABAAAAL5ElAAAAAAAAkSUAAAAAAAABAAAAaJAlAAAAAAAAkCUAAAAAAAABAAAAc48lAAAAAAAAjyUAAAAAAAABAAAAYY4lAAAAAAAAjiUAAAAAAAABAAAAcg",
							"AgAAAAAAAAABAAAA2zkAAAAAAADbOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACTJQAAAAAAAJMlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5785,
							1,
							"insert",
							{
								"characters": ".T"
							},
							"AgAAAJklAAAAAAAAmiUAAAAAAAAAAAAAmiUAAAAAAACbJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA1jkAAAAAAADWOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACZJQAAAAAAAJklAAAAAAAAAAAAAAAA8L8"
						],
						[
							5788,
							1,
							"insert",
							{
								"characters": ".T"
							},
							"AgAAAKYlAAAAAAAApyUAAAAAAAAAAAAApyUAAAAAAACoJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA2DkAAAAAAADYOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACmJQAAAAAAAKYlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5791,
							2,
							"left_delete",
							null,
							"AgAAAKclAAAAAAAApyUAAAAAAAABAAAAVKYlAAAAAAAApiUAAAAAAAABAAAALg",
							"AgAAAAAAAAABAAAA2jkAAAAAAADaOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACoJQAAAAAAAKglAAAAAAAAAAAAAAAA8L8"
						],
						[
							5793,
							1,
							"insert",
							{
								"characters": ","
							},
							"AQAAAKUlAAAAAAAApiUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA2DkAAAAAAADYOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAClJQAAAAAAAKUlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5794,
							1,
							"left_delete",
							null,
							"AQAAAKUlAAAAAAAApSUAAAAAAAABAAAALA",
							"AgAAAAAAAAABAAAA2TkAAAAAAADZOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACmJQAAAAAAAKYlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5795,
							1,
							"insert",
							{
								"characters": ".T"
							},
							"AgAAAKUlAAAAAAAApiUAAAAAAAAAAAAApiUAAAAAAACnJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA2DkAAAAAAADYOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAClJQAAAAAAAKUlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5797,
							1,
							"insert",
							{
								"characters": ".T"
							},
							"AgAAAKglAAAAAAAAqSUAAAAAAAAAAAAAqSUAAAAAAACqJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA2jkAAAAAAADaOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACoJQAAAAAAAKglAAAAAAAAAAAAAAAA8L8"
						],
						[
							5809,
							2,
							"left_delete",
							null,
							"AgAAAKklAAAAAAAAqSUAAAAAAAABAAAAVKglAAAAAAAAqCUAAAAAAAABAAAALg",
							"AgAAAAAAAAABAAAA3DkAAAAAAADcOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACqJQAAAAAAAKolAAAAAAAAAAAAAAAA8L8"
						],
						[
							5821,
							1,
							"left_delete",
							null,
							"AwAAAKUlAAAAAAAApSUAAAAAAAACAAAALlSZJQAAAAAAAJklAAAAAAAAAgAAAC5UjCUAAAAAAACMJQAAAAAAAAIAAAAuVA",
							"AgAAAAAAAAABAAAA2jkAAAAAAADaOQAAAAAAAAAAAAAAAPC/AQAAAAMAAACOJQAAAAAAAIwlAAAAAAAAAAAAAAAA8L+ZJQAAAAAAAJslAAAAAAAAAAAAAAAA8L+lJQAAAAAAAKclAAAAAAAAAAAAAAAA8L8"
						],
						[
							5836,
							1,
							"insert",
							{
								"characters": ".T"
							},
							"BgAAAJ4lAAAAAAAAnyUAAAAAAAAAAAAAlCUAAAAAAACVJQAAAAAAAAAAAACJJQAAAAAAAIolAAAAAAAAAAAAAKElAAAAAAAAoiUAAAAAAAAAAAAAliUAAAAAAACXJQAAAAAAAAAAAACKJQAAAAAAAIslAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA1DkAAAAAAADUOQAAAAAAAAAAAAAAAPC/AQAAAAMAAACJJQAAAAAAAIklAAAAAAAAAAAAAAAA8L+UJQAAAAAAAJQlAAAAAAAAAAAAAAAA8L+eJQAAAAAAAJ4lAAAAAAAAAAAAAAAA8L8"
						],
						[
							5840,
							1,
							"insert",
							{
								"characters": ".T"
							},
							"AgAAAKklAAAAAAAAqiUAAAAAAAAAAAAAqiUAAAAAAACrJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA2jkAAAAAAADaOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACpJQAAAAAAAKklAAAAAAAAAAAAAAAA8L8"
						],
						[
							5854,
							1,
							"left_delete",
							null,
							"AQAAAJslAAAAAAAAmyUAAAAAAAABAAAAKw",
							"AgAAAAAAAAABAAAA3DkAAAAAAADcOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACcJQAAAAAAAJwlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5855,
							1,
							"insert",
							{
								"characters": "-"
							},
							"AQAAAJslAAAAAAAAnCUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA2zkAAAAAAADbOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACbJQAAAAAAAJslAAAAAAAAAAAAAAAA8L8"
						],
						[
							5861,
							1,
							"left_delete",
							null,
							"AQAAAHElAAAAAAAAcSUAAAAAAAAHAAAAIHByaW50KA",
							"AgAAAAAAAAABAAAA3DkAAAAAAADcOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB4JQAAAAAAAHElAAAAAAAAAAAAAAAA8L8"
						],
						[
							5862,
							1,
							"insert",
							{
								"characters": " e"
							},
							"AgAAAHElAAAAAAAAciUAAAAAAAAAAAAAciUAAAAAAABzJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA1TkAAAAAAADVOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABxJQAAAAAAAHElAAAAAAAAAAAAAAAA8L8"
						],
						[
							5863,
							1,
							"left_delete",
							null,
							"AQAAAHIlAAAAAAAAciUAAAAAAAABAAAAZQ",
							"AgAAAAAAAAABAAAA1zkAAAAAAADXOQAAAAAAAAAAAAAAAPC/AQAAAAEAAABzJQAAAAAAAHMlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5864,
							1,
							"insert",
							{
								"characters": "widths"
							},
							"BgAAAHIlAAAAAAAAcyUAAAAAAAAAAAAAcyUAAAAAAAB0JQAAAAAAAAAAAAB0JQAAAAAAAHUlAAAAAAAAAAAAAHUlAAAAAAAAdiUAAAAAAAAAAAAAdiUAAAAAAAB3JQAAAAAAAAAAAAB3JQAAAAAAAHglAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA1jkAAAAAAADWOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAByJQAAAAAAAHIlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5865,
							1,
							"insert",
							{
								"characters": " ="
							},
							"AgAAAHglAAAAAAAAeSUAAAAAAAAAAAAAeSUAAAAAAAB6JQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA3DkAAAAAAADcOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB4JQAAAAAAAHglAAAAAAAAAAAAAAAA8L8"
						],
						[
							5866,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAHolAAAAAAAAeyUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA3jkAAAAAAADeOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB6JQAAAAAAAHolAAAAAAAAAAAAAAAA8L8"
						],
						[
							5868,
							1,
							"left_delete",
							null,
							"AQAAAK4lAAAAAAAAriUAAAAAAAABAAAAKQ",
							"AgAAAAAAAAABAAAA3zkAAAAAAADfOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACvJQAAAAAAAK8lAAAAAAAA////////738"
						],
						[
							5869,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAAK4lAAAAAAAAryUAAAAAAAAAAAAAryUAAAAAAAC3JQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA3jkAAAAAAADeOQAAAAAAAAAAAAAAAPC/AQAAAAEAAACuJQAAAAAAAK4lAAAAAAAAAAAAAAAA8L8"
						],
						[
							5876,
							1,
							"paste",
							null,
							"AQAAAK8lAAAAAAAA5iUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA5zkAAAAAAADnOQAAAAAAAAAAAAAAAPC/AQAAAAEAAAC3JQAAAAAAALclAAAAAAAAAAAAAAAA8L8"
						],
						[
							5880,
							1,
							"insert",
							{
								"characters": "mid"
							},
							"BQAAALclAAAAAAAAuCUAAAAAAAAAAAAAuCUAAAAAAAC4JQAAAAAAAAUAAAByaWdodOIlAAAAAAAA4iUAAAAAAAAIAAAAICAgICAgICC4JQAAAAAAALklAAAAAAAAAAAAALklAAAAAAAAuiUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAHjoAAAAAAAAeOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAC8JQAAAAAAALclAAAAAAAAAAAAAAAA8L8"
						],
						[
							5890,
							1,
							"insert",
							{
								"characters": "0"
							},
							"AgAAANYlAAAAAAAA1yUAAAAAAAAAAAAA1yUAAAAAAADXJQAAAAAAAAEAAAAx",
							"AgAAAAAAAAABAAAAFDoAAAAAAAAUOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADXJQAAAAAAANYlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5897,
							1,
							"insert",
							{
								"characters": "max"
							},
							"BAAAANolAAAAAAAA2yUAAAAAAAAAAAAA2yUAAAAAAADbJQAAAAAAAAgAAABpX21heGgvMtslAAAAAAAA3CUAAAAAAAAAAAAA3CUAAAAAAADdJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAFDoAAAAAAAAUOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADiJQAAAAAAANolAAAAAAAAAAAAAAAA8L8"
						],
						[
							5898,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAN0lAAAAAAAA3yUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAADzoAAAAAAAAPOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADdJQAAAAAAAN0lAAAAAAAAAAAAAAAA8L8"
						],
						[
							5900,
							1,
							"insert",
							{
								"characters": "d"
							},
							"AQAAAN4lAAAAAAAA3yUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAEToAAAAAAAAROgAAAAAAAAAAAAAAAPC/AQAAAAEAAADeJQAAAAAAAN4lAAAAAAAAAAAAAAAA8L8"
						],
						[
							5901,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAN8lAAAAAAAA4SUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAEjoAAAAAAAASOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADfJQAAAAAAAN8lAAAAAAAAAAAAAAAA8L8"
						],
						[
							5902,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAAOAlAAAAAAAA4iUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAFDoAAAAAAAAUOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADgJQAAAAAAAOAlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5903,
							1,
							"insert",
							{
								"characters": "h"
							},
							"AQAAAOElAAAAAAAA4iUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAFjoAAAAAAAAWOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADhJQAAAAAAAOElAAAAAAAAAAAAAAAA8L8"
						],
						[
							5905,
							1,
							"insert",
							{
								"characters": "/2"
							},
							"AgAAAOQlAAAAAAAA5SUAAAAAAAAAAAAA5SUAAAAAAADmJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAFzoAAAAAAAAXOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADkJQAAAAAAAOQlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5908,
							1,
							"insert",
							{
								"characters": "\nprint"
							},
							"BwAAAComAAAAAAAAKyYAAAAAAAAAAAAAKyYAAAAAAAAzJgAAAAAAAAAAAAAzJgAAAAAAADQmAAAAAAAAAAAAADQmAAAAAAAANSYAAAAAAAAAAAAANSYAAAAAAAA2JgAAAAAAAAAAAAA2JgAAAAAAADcmAAAAAAAAAAAAADcmAAAAAAAAOCYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAGToAAAAAAAAZOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAqJgAAAAAAAComAAAAAAAAAAAAAADQgUA"
						],
						[
							5909,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAADgmAAAAAAAAOiYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAJzoAAAAAAAAnOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAA4JgAAAAAAADgmAAAAAAAAAAAAAAAA8L8"
						],
						[
							5911,
							1,
							"insert",
							{
								"characters": "mid"
							},
							"AwAAADkmAAAAAAAAOiYAAAAAAAAAAAAAOiYAAAAAAAA7JgAAAAAAAAAAAAA7JgAAAAAAADwmAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAKToAAAAAAAApOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAA5JgAAAAAAADkmAAAAAAAAAAAAAAAA8L8"
						],
						[
							5937,
							1,
							"insert",
							{
								"characters": "widths"
							},
							"BwAAAM0lAAAAAAAAziUAAAAAAAAAAAAAziUAAAAAAADOJQAAAAAAAAYAAABkWyJyIl3OJQAAAAAAAM8lAAAAAAAAAAAAAM8lAAAAAAAA0CUAAAAAAAAAAAAA0CUAAAAAAADRJQAAAAAAAAAAAADRJQAAAAAAANIlAAAAAAAAAAAAANIlAAAAAAAA0yUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAALDoAAAAAAAAsOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADTJQAAAAAAAM0lAAAAAAAAAAAAAAAA8L8"
						],
						[
							5945,
							1,
							"right_delete",
							null,
							"AQAAAOUlAAAAAAAA5SUAAAAAAAABAAAAMg",
							"AgAAAAAAAAABAAAALDoAAAAAAAAsOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADlJQAAAAAAAOUlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5947,
							1,
							"insert",
							{
								"characters": ")"
							},
							"AQAAAOQlAAAAAAAA5SUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAKzoAAAAAAAArOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADkJQAAAAAAAOQlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5950,
							1,
							"insert",
							{
								"characters": "2"
							},
							"AQAAAOYlAAAAAAAA5yUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAALDoAAAAAAAAsOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADmJQAAAAAAAOYlAAAAAAAAAAAAAAAA8L8"
						],
						[
							5951,
							1,
							"right_delete",
							null,
							"AQAAAOclAAAAAAAA5yUAAAAAAAABAAAAKQ",
							"AgAAAAAAAAABAAAALToAAAAAAAAtOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADnJQAAAAAAAOclAAAAAAAAAAAAAAAA8L8"
						],
						[
							5973,
							1,
							"insert",
							{
								"characters": "i_maxw"
							},
							"DgAAADkmAAAAAAAAOiYAAAAAAAAAAAAAOiYAAAAAAAA6JgAAAAAAAAMAAABtaWS3JQAAAAAAALglAAAAAAAAAAAAALglAAAAAAAAuCUAAAAAAAADAAAAbWlkOCYAAAAAAAA5JgAAAAAAAAAAAAC4JQAAAAAAALklAAAAAAAAAAAAADomAAAAAAAAOyYAAAAAAAAAAAAAuSUAAAAAAAC6JQAAAAAAAAAAAAA8JgAAAAAAAD0mAAAAAAAAAAAAALolAAAAAAAAuyUAAAAAAAAAAAAAPiYAAAAAAAA/JgAAAAAAAAAAAAC7JQAAAAAAALwlAAAAAAAAAAAAAEAmAAAAAAAAQSYAAAAAAAAAAAAAvCUAAAAAAAC9JQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAALDoAAAAAAAAsOgAAAAAAAAAAAAAAAPC/AQAAAAIAAAC3JQAAAAAAALolAAAAAAAAAAAAAAAA8L85JgAAAAAAADwmAAAAAAAAAAAAAAAA8L8"
						],
						[
							5992,
							1,
							"left_delete",
							null,
							"AgAAAPAsAAAAAAAA8CwAAAAAAAADAAAAMzEsyCwAAAAAAADILAAAAAAAAAIAAAAwLA",
							"AgAAAAAAAAABAAAAMjoAAAAAAAAyOgAAAAAAAAAAAAAAAPC/AQAAAAIAAADKLAAAAAAAAMgsAAAAAAAAAAAAAAAA8L/zLAAAAAAAAPAsAAAAAAAAAAAAAAAA8L8"
						],
						[
							5993,
							1,
							"right_delete",
							null,
							"AgAAAO4sAAAAAAAA7iwAAAAAAAABAAAAI8gsAAAAAAAAyCwAAAAAAAABAAAAIw",
							"AgAAAAAAAAABAAAALToAAAAAAAAtOgAAAAAAAAAAAAAAAPC/AQAAAAIAAADILAAAAAAAAMgsAAAAAAAAAAAAAAAA8L/uLAAAAAAAAO4sAAAAAAAAAAAAAAAA8L8"
						],
						[
							5997,
							1,
							"left_delete",
							null,
							"AgAAAO0sAAAAAAAA7SwAAAAAAAABAAAAIMgsAAAAAAAAyCwAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAKzoAAAAAAAArOgAAAAAAAAAAAAAAAPC/AQAAAAIAAADJLAAAAAAAAMksAAAAAAAAAAAAAAAA8L/uLAAAAAAAAO4sAAAAAAAAAAAAAAAA8L8"
						],
						[
							6010,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAPsdAAAAAAAA/R0AAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAKToAAAAAAAApOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAATHgAAAAAAABMeAAAAAAAAAAAAAAAA8L8"
						],
						[
							6031,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAJcrAAAAAAAAmSsAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAbDoAAAAAAABsOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADRKwAAAAAAANErAAAAAAAAAAAAAAAA8L8"
						],
						[
							6043,
							1,
							"insert",
							{
								"characters": "["
							},
							"AgAAAPYsAAAAAAAA9ywAAAAAAAAAAAAA0iwAAAAAAADTLAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA6jwAAAAAAADqPAAAAAAAAAAAAAAAAPC/AQAAAAIAAADSLAAAAAAAANIsAAAAAAAAAAAAAAAA8L/2LAAAAAAAAPYsAAAAAAAAAAAAAABAcEA"
						],
						[
							6044,
							1,
							"left_delete",
							null,
							"AgAAAPcsAAAAAAAA9ywAAAAAAAABAAAAW9IsAAAAAAAA0iwAAAAAAAABAAAAWw",
							"AgAAAAAAAAABAAAA7DwAAAAAAADsPAAAAAAAAAAAAAAAAPC/AQAAAAIAAADTLAAAAAAAANMsAAAAAAAAAAAAAAAA8L/4LAAAAAAAAPgsAAAAAAAAAAAAAAAA8L8"
						],
						[
							6045,
							1,
							"insert",
							{
								"characters": ".T"
							},
							"BAAAAPYsAAAAAAAA9ywAAAAAAAAAAAAA0iwAAAAAAADTLAAAAAAAAAAAAAD4LAAAAAAAAPksAAAAAAAAAAAAANMsAAAAAAAA1CwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA6jwAAAAAAADqPAAAAAAAAAAAAAAAAPC/AQAAAAIAAADSLAAAAAAAANIsAAAAAAAAAAAAAAAA8L/2LAAAAAAAAPYsAAAAAAAAAAAAAAAA8L8"
						],
						[
							6051,
							2,
							"left_delete",
							null,
							"BAAAAPksAAAAAAAA+SwAAAAAAAABAAAAVNMsAAAAAAAA0ywAAAAAAAABAAAAVPcsAAAAAAAA9ywAAAAAAAABAAAALtIsAAAAAAAA0iwAAAAAAAABAAAALg",
							"AgAAAAAAAAABAAAA7jwAAAAAAADuPAAAAAAAAAAAAAAAAPC/AQAAAAIAAADULAAAAAAAANQsAAAAAAAAAAAAAAAA8L/6LAAAAAAAAPosAAAAAAAAAAAAAAAA8L8"
						],
						[
							6053,
							1,
							"insert",
							{
								"characters": "[1]"
							},
							"BgAAAP4sAAAAAAAA/ywAAAAAAAAAAAAA2iwAAAAAAADbLAAAAAAAAAAAAAAALQAAAAAAAAEtAAAAAAAAAAAAANssAAAAAAAA3CwAAAAAAAAAAAAAAi0AAAAAAAADLQAAAAAAAAAAAADcLAAAAAAAAN0sAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA6jwAAAAAAADqPAAAAAAAAAAAAAAAAPC/AQAAAAIAAADaLAAAAAAAANosAAAAAAAAAAAAAAAA8L/+LAAAAAAAAP4sAAAAAAAAAAAAAAAA8L8"
						],
						[
							6066,
							2,
							"left_delete",
							null,
							"AgAAAOslAAAAAAAA6yUAAAAAAAABAAAAMuolAAAAAAAA6iUAAAAAAAABAAAALw",
							"AgAAAAAAAAABAAAA8DwAAAAAAADwPAAAAAAAAAAAAAAAAPC/AQAAAAEAAADsJQAAAAAAAOwlAAAAAAAAAAAAAAAA8L8"
						],
						[
							6073,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAMo7AAAAAAAAyjsAAAAAAAACAAAAIyA",
							"AgAAAAAAAAABAAAA7jwAAAAAAADuPAAAAAAAAAAAAAAAAPC/AQAAAAEAAADlOwAAAAAAAOU7AAAAAAAAAAAAAAAA8L8"
						],
						[
							6075,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAJw7AAAAAAAAnDsAAAAAAAACAAAAIyA",
							"AgAAAAAAAAABAAAA7DwAAAAAAADsPAAAAAAAAAAAAAAAAPC/AQAAAAEAAAC1OwAAAAAAALU7AAAAAAAAAAAAAABAb0A"
						],
						[
							6081,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AgAAANI8AAAAAAAA1DwAAAAAAAAAAAAA7TwAAAAAAADvPAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA6jwAAAAAAADqPAAAAAAAAAAAAAAAAPC/AQAAAAIAAADqPAAAAAAAAOo8AAAAAAAAAAAAAAAA8L8DPQAAAAAAAAM9AAAAAAAAAAAAAAAA8L8"
						],
						[
							6093,
							1,
							"insert",
							{
								"characters": "/2"
							},
							"AgAAAOklAAAAAAAA6iUAAAAAAAAAAAAA6iUAAAAAAADrJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA+ToAAAAAAAD5OgAAAAAAAAAAAAAAAPC/AQAAAAEAAADpJQAAAAAAAOklAAAAAAAAAAAAAAAA8L8"
						],
						[
							6099,
							2,
							"left_delete",
							null,
							"AgAAAOslAAAAAAAA6yUAAAAAAAABAAAAKeolAAAAAAAA6iUAAAAAAAABAAAAMg",
							"AgAAAAAAAAABAAAA+zoAAAAAAAD7OgAAAAAAAAAAAAAAAPC/AQAAAAEAAADsJQAAAAAAAOwlAAAAAAAAAAAAAAAA8L8"
						],
						[
							6100,
							1,
							"left_delete",
							null,
							"AQAAAOklAAAAAAAA6SUAAAAAAAABAAAALw",
							"AgAAAAAAAAABAAAA+ToAAAAAAAD5OgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqJQAAAAAAAOolAAAAAAAAAAAAAAAA8L8"
						],
						[
							6103,
							1,
							"insert",
							{
								"characters": ")"
							},
							"AQAAAOolAAAAAAAA6yUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA+DoAAAAAAAD4OgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqJQAAAAAAAOolAAAAAAAAAAAAAAAA8L8"
						],
						[
							6114,
							1,
							"left_delete",
							null,
							"AQAAAN4BAAAAAAAA3gEAAAAAAAABAAAAOQ",
							"AgAAAAAAAAABAAAA+ToAAAAAAAD5OgAAAAAAAAAAAAAAAPC/AQAAAAEAAADfAQAAAAAAAN8BAAAAAAAAAAAAAAAA8L8"
						],
						[
							6115,
							1,
							"insert",
							{
								"characters": "10"
							},
							"AgAAAN4BAAAAAAAA3wEAAAAAAAAAAAAA3wEAAAAAAADgAQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA+DoAAAAAAAD4OgAAAAAAAAAAAAAAAPC/AQAAAAEAAADeAQAAAAAAAN4BAAAAAAAAAAAAAAAA8L8"
						],
						[
							6121,
							1,
							"insert",
							{
								"characters": "/2"
							},
							"AgAAAOolAAAAAAAA6yUAAAAAAAAAAAAA6yUAAAAAAADsJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA+joAAAAAAAD6OgAAAAAAAAAAAAAAAPC/AQAAAAEAAADqJQAAAAAAAOolAAAAAAAAAAAAAAAA8L8"
						],
						[
							6124,
							2,
							"left_delete",
							null,
							"AgAAAOslAAAAAAAA6yUAAAAAAAABAAAAMuolAAAAAAAA6iUAAAAAAAABAAAALw",
							"AgAAAAAAAAABAAAA/DoAAAAAAAD8OgAAAAAAAAAAAAAAAPC/AQAAAAEAAADsJQAAAAAAAOwlAAAAAAAAAAAAAAAA8L8"
						],
						[
							6126,
							1,
							"insert",
							{
								"characters": "/2"
							},
							"AgAAAOslAAAAAAAA7CUAAAAAAAAAAAAA7CUAAAAAAADtJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA+joAAAAAAAD6OgAAAAAAAAAAAAAAAPC/AQAAAAEAAADrJQAAAAAAAOslAAAAAAAAAAAAAAAA8L8"
						],
						[
							6137,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAANUaAAAAAAAA1hoAAAAAAAAAAAAA1hoAAAAAAADmGgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA/DoAAAAAAAD8OgAAAAAAAAAAAAAAAPC/AQAAAAEAAADVGgAAAAAAANUaAAAAAAAAAAAAAAAA8L8"
						],
						[
							6138,
							2,
							"left_delete",
							null,
							"AgAAAOIaAAAAAAAA4hoAAAAAAAAEAAAAICAgIN4aAAAAAAAA3hoAAAAAAAAEAAAAICAgIA",
							"AgAAAAAAAAABAAAADTsAAAAAAAANOwAAAAAAAAAAAAAAAPC/AQAAAAEAAADmGgAAAAAAAOYaAAAAAAAAAAAAAAAA8L8"
						],
						[
							6139,
							1,
							"insert",
							{
								"characters": "d"
							},
							"AQAAAN4aAAAAAAAA3xoAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAABTsAAAAAAAAFOwAAAAAAAAAAAAAAAPC/AQAAAAEAAADeGgAAAAAAAN4aAAAAAAAAAAAAAAAA8L8"
						],
						[
							6140,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAN8aAAAAAAAA4RoAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAABjsAAAAAAAAGOwAAAAAAAAAAAAAAAPC/AQAAAAEAAADfGgAAAAAAAN8aAAAAAAAAAAAAAAAA8L8"
						],
						[
							6141,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAAOAaAAAAAAAA4hoAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAACDsAAAAAAAAIOwAAAAAAAAAAAAAAAPC/AQAAAAEAAADgGgAAAAAAAOAaAAAAAAAAAAAAAAAA8L8"
						],
						[
							6142,
							1,
							"insert",
							{
								"characters": "g"
							},
							"AQAAAOEaAAAAAAAA4hoAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAACjsAAAAAAAAKOwAAAAAAAAAAAAAAAPC/AQAAAAEAAADhGgAAAAAAAOEaAAAAAAAAAAAAAAAA8L8"
						],
						[
							6143,
							1,
							"left_delete",
							null,
							"AQAAAOEaAAAAAAAA4RoAAAAAAAABAAAAZw",
							"AgAAAAAAAAABAAAACzsAAAAAAAALOwAAAAAAAAAAAAAAAPC/AQAAAAEAAADiGgAAAAAAAOIaAAAAAAAAAAAAAAAA8L8"
						],
						[
							6144,
							1,
							"insert",
							{
								"characters": "h"
							},
							"AQAAAOEaAAAAAAAA4hoAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAACjsAAAAAAAAKOwAAAAAAAAAAAAAAAPC/AQAAAAEAAADhGgAAAAAAAOEaAAAAAAAAAAAAAAAA8L8"
						],
						[
							6147,
							1,
							"insert",
							{
								"characters": "="
							},
							"AQAAAOQaAAAAAAAA5RoAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAACzsAAAAAAAALOwAAAAAAAAAAAAAAAPC/AQAAAAEAAADkGgAAAAAAAOQaAAAAAAAA////////738"
						],
						[
							6148,
							1,
							"insert",
							{
								"characters": " np.array"
							},
							"CQAAAOUaAAAAAAAA5hoAAAAAAAAAAAAA5hoAAAAAAADnGgAAAAAAAAAAAADnGgAAAAAAAOgaAAAAAAAAAAAAAOgaAAAAAAAA6RoAAAAAAAAAAAAA6RoAAAAAAADqGgAAAAAAAAAAAADqGgAAAAAAAOsaAAAAAAAAAAAAAOsaAAAAAAAA7BoAAAAAAAAAAAAA7BoAAAAAAADtGgAAAAAAAAAAAADtGgAAAAAAAO4aAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAADDsAAAAAAAAMOwAAAAAAAAAAAAAAAPC/AQAAAAEAAADlGgAAAAAAAOUaAAAAAAAAAAAAAAAA8L8"
						],
						[
							6149,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAO4aAAAAAAAA8BoAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAFTsAAAAAAAAVOwAAAAAAAAAAAAAAAPC/AQAAAAEAAADuGgAAAAAAAO4aAAAAAAAAAAAAAAAA8L8"
						],
						[
							6151,
							1,
							"insert",
							{
								"characters": "d"
							},
							"AQAAAO8aAAAAAAAA8BoAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAFzsAAAAAAAAXOwAAAAAAAAAAAAAAAPC/AQAAAAEAAADvGgAAAAAAAO8aAAAAAAAAAAAAAAAA8L8"
						],
						[
							6152,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAPAaAAAAAAAA8hoAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAGDsAAAAAAAAYOwAAAAAAAAAAAAAAAPC/AQAAAAEAAADwGgAAAAAAAPAaAAAAAAAAAAAAAAAA8L8"
						],
						[
							6153,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAAPEaAAAAAAAA8xoAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAGjsAAAAAAAAaOwAAAAAAAAAAAAAAAPC/AQAAAAEAAADxGgAAAAAAAPEaAAAAAAAAAAAAAAAA8L8"
						],
						[
							6154,
							1,
							"insert",
							{
								"characters": "h"
							},
							"AQAAAPIaAAAAAAAA8xoAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAHDsAAAAAAAAcOwAAAAAAAAAAAAAAAPC/AQAAAAEAAADyGgAAAAAAAPIaAAAAAAAAAAAAAAAA8L8"
						],
						[
							6156,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAAPYaAAAAAAAA9xoAAAAAAAAAAAAA9xoAAAAAAAD/GgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAHTsAAAAAAAAdOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD2GgAAAAAAAPYaAAAAAAAAAAAAAAAA8L8"
						],
						[
							6158,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAAgbAAAAAAAAChsAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAJjsAAAAAAAAmOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAIGwAAAAAAAAgbAAAAAAAAAAAAAAAAVEA"
						],
						[
							6160,
							1,
							"insert",
							{
								"characters": "imaxh"
							},
							"BQAAAP8aAAAAAAAAABsAAAAAAAAAAAAAABsAAAAAAAABGwAAAAAAAAAAAAABGwAAAAAAAAIbAAAAAAAAAAAAAAIbAAAAAAAAAxsAAAAAAAAAAAAAAxsAAAAAAAAEGwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAKDsAAAAAAAAoOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD/GgAAAAAAAP8aAAAAAAAAAAAAAAAAWUA"
						],
						[
							6161,
							1,
							"insert_completion",
							{
								"completion": "i_maxh",
								"format": "text",
								"keep_prefix": false,
								"must_insert": false,
								"trigger": "i_maxh"
							},
							"AgAAAP8aAAAAAAAA/xoAAAAAAAAFAAAAaW1heGj/GgAAAAAAAAUbAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAALTsAAAAAAAAtOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAEGwAAAAAAAAQbAAAAAAAAAAAAAAAA8L8"
						],
						[
							6162,
							1,
							"insert",
							{
								"characters": " ="
							},
							"AgAAAAUbAAAAAAAABhsAAAAAAAAAAAAABhsAAAAAAAAHGwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAALjsAAAAAAAAuOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAFGwAAAAAAAAUbAAAAAAAAAAAAAAAA8L8"
						],
						[
							6163,
							1,
							"insert",
							{
								"characters": " np.sear"
							},
							"CAAAAAcbAAAAAAAACBsAAAAAAAAAAAAACBsAAAAAAAAJGwAAAAAAAAAAAAAJGwAAAAAAAAobAAAAAAAAAAAAAAobAAAAAAAACxsAAAAAAAAAAAAACxsAAAAAAAAMGwAAAAAAAAAAAAAMGwAAAAAAAA0bAAAAAAAAAAAAAA0bAAAAAAAADhsAAAAAAAAAAAAADhsAAAAAAAAPGwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAMDsAAAAAAAAwOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAHGwAAAAAAAAcbAAAAAAAAAAAAAAAA8L8"
						],
						[
							6164,
							3,
							"delete_word",
							{
								"forward": false
							},
							"AwAAAAsbAAAAAAAACxsAAAAAAAAEAAAAc2VhcgobAAAAAAAAChsAAAAAAAABAAAALggbAAAAAAAACBsAAAAAAAACAAAAbnA",
							"AgAAAAAAAAABAAAAODsAAAAAAAA4OwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAPGwAAAAAAAA8bAAAAAAAAAAAAAAAA8L8"
						],
						[
							6165,
							1,
							"insert",
							{
								"characters": "d"
							},
							"AQAAAAgbAAAAAAAACRsAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAMTsAAAAAAAAxOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAIGwAAAAAAAAgbAAAAAAAAAAAAAAAA8L8"
						],
						[
							6166,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAAkbAAAAAAAACxsAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAMjsAAAAAAAAyOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAJGwAAAAAAAAkbAAAAAAAAAAAAAAAA8L8"
						],
						[
							6167,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAAAobAAAAAAAADBsAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAANDsAAAAAAAA0OwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAKGwAAAAAAAAobAAAAAAAAAAAAAAAA8L8"
						],
						[
							6168,
							1,
							"insert",
							{
								"characters": "h"
							},
							"AQAAAAsbAAAAAAAADBsAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAANjsAAAAAAAA2OwAAAAAAAAAAAAAAAPC/AQAAAAEAAAALGwAAAAAAAAsbAAAAAAAAAAAAAAAA8L8"
						],
						[
							6170,
							1,
							"insert",
							{
								"characters": ".searc"
							},
							"BgAAAA4bAAAAAAAADxsAAAAAAAAAAAAADxsAAAAAAAAQGwAAAAAAAAAAAAAQGwAAAAAAABEbAAAAAAAAAAAAABEbAAAAAAAAEhsAAAAAAAAAAAAAEhsAAAAAAAATGwAAAAAAAAAAAAATGwAAAAAAABQbAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAANzsAAAAAAAA3OwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAOGwAAAAAAAA4bAAAAAAAAAAAAAAAA8L8"
						],
						[
							6171,
							1,
							"insert_completion",
							{
								"completion": "searchsorted($0)",
								"format": "snippet",
								"keep_prefix": false,
								"must_insert": false,
								"trigger": "searchsorted()"
							},
							"AgAAAA8bAAAAAAAADxsAAAAAAAAFAAAAc2VhcmMPGwAAAAAAAB0bAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAPTsAAAAAAAA9OwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAUGwAAAAAAABQbAAAAAAAAAAAAAAAA8L8"
						],
						[
							6191,
							1,
							"insert",
							{
								"characters": ".ar"
							},
							"BAAAAA8bAAAAAAAAEBsAAAAAAAAAAAAAEBsAAAAAAAAQGwAAAAAAAAwAAABzZWFyY2hzb3J0ZWQQGwAAAAAAABEbAAAAAAAAAAAAABEbAAAAAAAAEhsAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAARjsAAAAAAABGOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAbGwAAAAAAAA8bAAAAAAAAAAAAAAAA8L8"
						],
						[
							6192,
							3,
							"left_delete",
							null,
							"AwAAABEbAAAAAAAAERsAAAAAAAABAAAAchAbAAAAAAAAEBsAAAAAAAABAAAAYQ8bAAAAAAAADxsAAAAAAAABAAAALg",
							"AgAAAAAAAAABAAAAPTsAAAAAAAA9OwAAAAAAAAAAAAAAAPC/AQAAAAEAAAASGwAAAAAAABIbAAAAAAAAAAAAAAAA8L8"
						],
						[
							6193,
							1,
							"insert",
							{
								"characters": "argm"
							},
							"BAAAAA8bAAAAAAAAEBsAAAAAAAAAAAAAEBsAAAAAAAARGwAAAAAAAAAAAAARGwAAAAAAABIbAAAAAAAAAAAAABIbAAAAAAAAExsAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAOjsAAAAAAAA6OwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAPGwAAAAAAAA8bAAAAAAAAAAAAAAAA8L8"
						],
						[
							6194,
							1,
							"insert",
							{
								"characters": "ax"
							},
							"AgAAABMbAAAAAAAAFBsAAAAAAAAAAAAAFBsAAAAAAAAVGwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAPjsAAAAAAAA+OwAAAAAAAAAAAAAAAPC/AQAAAAEAAAATGwAAAAAAABMbAAAAAAAAAAAAAAAA8L8"
						],
						[
							6228,
							1,
							"left_delete",
							null,
							"AQAAAB0kAAAAAAAAHSQAAAAAAAD5AAAAICAgICAjIGlmIG1heChkWyJyIl0uc2hhcGUpID4gbWF4KGRbImwiXS5zaGFwZSk6CiAgICAgICAgICAgICMgdGVtcCA9IGRbImwiXVsxXQogICAgICAgICAgICAjIGRbImwiXSA9IG5wLnplcm9zX2xpa2UoZFsiciJdKQogICAgICAgICAgICAjIGRbImwiXSA9IG5wLnZzdGFjayhkWyJyIl1bMF0sIGRbImwiXSkKCiAgICAgICAgIyByWzFdID0gclsxXVsoclsxXSA+IDAuMSldCiAgICAgICAgIyBsWzFdID0gbFsxXVsobFsxXSA+IDAuMSld",
							"AgAAAAAAAAABAAAAjjsAAAAAAACOOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAWJQAAAAAAAB0kAAAAAAAAAAAAAAAA8L8"
						],
						[
							6229,
							1,
							"insert",
							{
								"characters": "\t\t"
							},
							"AgAAAB0kAAAAAAAAHiQAAAAAAAAAAAAAHiQAAAAAAAAiJAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAlToAAAAAAACVOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAdJAAAAAAAAB0kAAAAAAAAAAAAAAAA8L8"
						],
						[
							6230,
							1,
							"insert",
							{
								"characters": "\ncombo"
							},
							"BwAAACIkAAAAAAAAIyQAAAAAAAAAAAAAIyQAAAAAAAArJAAAAAAAAAAAAAArJAAAAAAAACwkAAAAAAAAAAAAACwkAAAAAAAALSQAAAAAAAAAAAAALSQAAAAAAAAuJAAAAAAAAAAAAAAuJAAAAAAAAC8kAAAAAAAAAAAAAC8kAAAAAAAAMCQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAmjoAAAAAAACaOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAiJAAAAAAAACIkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6231,
							1,
							"insert",
							{
								"characters": " ="
							},
							"AgAAADAkAAAAAAAAMSQAAAAAAAAAAAAAMSQAAAAAAAAyJAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAqDoAAAAAAACoOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAwJAAAAAAAADAkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6232,
							1,
							"insert",
							{
								"characters": " np."
							},
							"BAAAADIkAAAAAAAAMyQAAAAAAAAAAAAAMyQAAAAAAAA0JAAAAAAAAAAAAAA0JAAAAAAAADUkAAAAAAAAAAAAADUkAAAAAAAANiQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAqjoAAAAAAACqOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAyJAAAAAAAADIkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6233,
							1,
							"insert",
							{
								"characters": "vstack"
							},
							"BgAAADYkAAAAAAAANyQAAAAAAAAAAAAANyQAAAAAAAA4JAAAAAAAAAAAAAA4JAAAAAAAADkkAAAAAAAAAAAAADkkAAAAAAAAOiQAAAAAAAAAAAAAOiQAAAAAAAA7JAAAAAAAAAAAAAA7JAAAAAAAADwkAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAArjoAAAAAAACuOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAA2JAAAAAAAADYkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6234,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAADwkAAAAAAAAPiQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAtDoAAAAAAAC0OgAAAAAAAAAAAAAAAPC/AQAAAAEAAAA8JAAAAAAAADwkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6236,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAD0kAAAAAAAAPyQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAtjoAAAAAAAC2OgAAAAAAAAAAAAAAAPC/AQAAAAEAAAA9JAAAAAAAAD0kAAAAAAAAAAAAAAAA8L8"
						],
						[
							6237,
							1,
							"insert",
							{
								"characters": "d"
							},
							"AQAAAD4kAAAAAAAAPyQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAuDoAAAAAAAC4OgAAAAAAAAAAAAAAAPC/AQAAAAEAAAA+JAAAAAAAAD4kAAAAAAAAAAAAAAAA8L8"
						],
						[
							6238,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAD8kAAAAAAAAQSQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAuToAAAAAAAC5OgAAAAAAAAAAAAAAAPC/AQAAAAEAAAA/JAAAAAAAAD8kAAAAAAAAAAAAAAAA8L8"
						],
						[
							6239,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAAEAkAAAAAAAAQiQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAuzoAAAAAAAC7OgAAAAAAAAAAAAAAAPC/AQAAAAEAAABAJAAAAAAAAEAkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6240,
							1,
							"insert",
							{
								"characters": "l"
							},
							"AQAAAEEkAAAAAAAAQiQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAvToAAAAAAAC9OgAAAAAAAAAAAAAAAPC/AQAAAAEAAABBJAAAAAAAAEEkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6258,
							1,
							"paste",
							null,
							"AgAAACskAAAAAAAAXyQAAAAAAAAAAAAAXyQAAAAAAABfJAAAAAAAABsAAABjb21ibyA9IG5wLnZzdGFjayhbZFsibCJdXSk",
							"AgAAAAAAAAABAAAAvjoAAAAAAAC+OgAAAAAAAAAAAAAAAPC/AQAAAAEAAABGJAAAAAAAACskAAAAAAAAAAAAAAAAVEA"
						],
						[
							6260,
							1,
							"left_delete",
							null,
							"AQAAAE8kAAAAAAAATyQAAAAAAAABAAAALQ",
							"AgAAAAAAAAABAAAA1zoAAAAAAADXOgAAAAAAAAAAAAAAAPC/AQAAAAEAAABQJAAAAAAAAFAkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6261,
							1,
							"insert",
							{
								"characters": ","
							},
							"AQAAAE8kAAAAAAAAUCQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA1joAAAAAAADWOgAAAAAAAAAAAAAAAPC/AQAAAAEAAABPJAAAAAAAAE8kAAAAAAAAAAAAAAAA8L8"
						],
						[
							6262,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAFAkAAAAAAAAUSQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA1zoAAAAAAADXOgAAAAAAAAAAAAAAAPC/AQAAAAEAAABQJAAAAAAAAFAkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6270,
							1,
							"permute_selection",
							{
								"operation": "reverse"
							},
							"AgAAAFQkAAAAAAAAVSQAAAAAAAABAAAAbEckAAAAAAAASCQAAAAAAAABAAAAcg",
							"AgAAAAAAAAABAAAA2DoAAAAAAADYOgAAAAAAAAAAAAAAAPC/AQAAAAIAAABIJAAAAAAAAEckAAAAAAAAAAAAAAAA8L9VJAAAAAAAAFQkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6278,
							1,
							"left_delete",
							null,
							"AQAAACskAAAAAAAAKyQAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAA2DoAAAAAAADYOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAsJAAAAAAAACwkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6283,
							1,
							"run_macro_file",
							{
								"file": "res://Packages/Default/Delete Line.sublime-macro"
							},
							"AgAAAOQkAAAAAAAA5CQAAAAAAAAWAAAAICAgICAgICBwcmludChkWyJsIl0pCs4kAAAAAAAAziQAAAAAAAAWAAAAICAgICAgICBwcmludChkWyJyIl0pCg",
							"AgAAAAAAAAABAAAA1zoAAAAAAADXOgAAAAAAAAAAAAAAAPC/AQAAAAIAAADiJAAAAAAAAOIkAAAAAAAAAAAAAAAAaUD4JAAAAAAAAPgkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6286,
							1,
							"reindent",
							null,
							"AQAAAFAlAAAAAAAAWCUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAqzoAAAAAAACrOgAAAAAAAAAAAAAAAPC/AQAAAAEAAABQJQAAAAAAAFAlAAAAAAAAAAAAAAAAJEA"
						],
						[
							6287,
							1,
							"insert",
							{
								"characters": "print"
							},
							"BQAAAFglAAAAAAAAWSUAAAAAAAAAAAAAWSUAAAAAAABaJQAAAAAAAAAAAABaJQAAAAAAAFslAAAAAAAAAAAAAFslAAAAAAAAXCUAAAAAAAAAAAAAXCUAAAAAAABdJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAszoAAAAAAACzOgAAAAAAAAAAAAAAAPC/AQAAAAEAAABYJQAAAAAAAFglAAAAAAAAAAAAAAAA8L8"
						],
						[
							6288,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAF0lAAAAAAAAXyUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAuDoAAAAAAAC4OgAAAAAAAAAAAAAAAPC/AQAAAAEAAABdJQAAAAAAAF0lAAAAAAAAAAAAAAAA8L8"
						],
						[
							6290,
							1,
							"insert",
							{
								"characters": "combo"
							},
							"BQAAAF4lAAAAAAAAXyUAAAAAAAAAAAAAXyUAAAAAAABgJQAAAAAAAAAAAABgJQAAAAAAAGElAAAAAAAAAAAAAGElAAAAAAAAYiUAAAAAAAAAAAAAYiUAAAAAAABjJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAujoAAAAAAAC6OgAAAAAAAAAAAAAAAPC/AQAAAAEAAABeJQAAAAAAAF4lAAAAAAAAAAAAAAAA8L8"
						],
						[
							6294,
							1,
							"run_macro_file",
							{
								"file": "res://Packages/Default/Delete Line.sublime-macro"
							},
							"BAAAAKYlAAAAAAAApiUAAAAAAAAWAAAAICAgICAgICBwcmludChpX21heHcpCpElAAAAAAAAkSUAAAAAAAAVAAAAICAgICAgICBwcmludChyaWdodCkKfSUAAAAAAAB9JQAAAAAAABQAAAAgICAgICAgIHByaW50KGxlZnQpCmUlAAAAAAAAZSUAAAAAAAAYAAAAICAgICAgICBwcmludChpX21heGgvMikK",
							"AgAAAAAAAAABAAAAvzoAAAAAAAC/OgAAAAAAAAAAAAAAAPC/AQAAAAUAAAB5JQAAAAAAAHklAAAAAAAAAAAAAAAAaUCQJQAAAAAAAJAlAAAAAAAAAAAAAAAA8L+kJQAAAAAAAKQlAAAAAAAAAAAAAADAZ0ClJQAAAAAAAKUlAAAAAAAAAAAAAAAAaUC6JQAAAAAAALolAAAAAAAAAAAAAAAAaUA"
						],
						[
							6310,
							1,
							"insert",
							{
								"characters": "combo"
							},
							"BQAAACskAAAAAAAALCQAAAAAAAAAAAAALCQAAAAAAAAtJAAAAAAAAAAAAAAtJAAAAAAAAC4kAAAAAAAAAAAAAC4kAAAAAAAALyQAAAAAAAAAAAAALyQAAAAAAAAwJAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAaDoAAAAAAABoOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAArJAAAAAAAACskAAAAAAAAAAAAAAAAVEA"
						],
						[
							6311,
							1,
							"insert",
							{
								"characters": " ="
							},
							"AgAAADAkAAAAAAAAMSQAAAAAAAAAAAAAMSQAAAAAAAAyJAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAbToAAAAAAABtOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAwJAAAAAAAADAkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6312,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAADIkAAAAAAAAMyQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAbzoAAAAAAABvOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAyJAAAAAAAADIkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6333,
							1,
							"reindent",
							null,
							"AQAAAF8jAAAAAAAAdyMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAcDoAAAAAAABwOgAAAAAAAAAAAAAAAPC/AQAAAAEAAABfIwAAAAAAAF8jAAAAAAAAAAAAAAAA8L8"
						],
						[
							6334,
							3,
							"left_delete",
							null,
							"AwAAAHMjAAAAAAAAcyMAAAAAAAAEAAAAICAgIG8jAAAAAAAAbyMAAAAAAAAEAAAAICAgIGsjAAAAAAAAayMAAAAAAAAEAAAAICAgIA",
							"AgAAAAAAAAABAAAAiDoAAAAAAACIOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB3IwAAAAAAAHcjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6337,
							1,
							"insert",
							{
								"characters": "\nh="
							},
							"BQAAAPUeAAAAAAAA9h4AAAAAAAAAAAAA9h4AAAAAAAD+HgAAAAAAAAAAAABoIwAAAAAAAGgjAAAAAAAADAAAACAgICAgICAgICAgIP4eAAAAAAAA/x4AAAAAAAAAAAAA/x4AAAAAAAAAHwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAfDoAAAAAAAB8OgAAAAAAAAAAAAAAAPC/AQAAAAEAAAD1HgAAAAAAAPUeAAAAAAAAAAAAAAAA8L8"
						],
						[
							6338,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAAAfAAAAAAAAAR8AAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAezoAAAAAAAB7OgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAHwAAAAAAAAAfAAAAAAAAAAAAAAAA8L8"
						],
						[
							6339,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAAEfAAAAAAAAAx8AAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAfDoAAAAAAAB8OgAAAAAAAAAAAAAAAPC/AQAAAAEAAAABHwAAAAAAAAEfAAAAAAAAAAAAAAAA8L8"
						],
						[
							6342,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAP8eAAAAAAAAAB8AAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAfjoAAAAAAAB+OgAAAAAAAAAAAAAAAPC/AQAAAAEAAAD/HgAAAAAAAP8eAAAAAAAAAAAAAAAA8L8"
						],
						[
							6347,
							1,
							"reindent",
							null,
							"AQAAAG4jAAAAAAAAhiMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAfzoAAAAAAAB/OgAAAAAAAAAAAAAAAPC/AQAAAAEAAABuIwAAAAAAAG4jAAAAAAAAAAAAAAAAXkA"
						],
						[
							6348,
							4,
							"left_delete",
							null,
							"BAAAAIIjAAAAAAAAgiMAAAAAAAAEAAAAICAgIH4jAAAAAAAAfiMAAAAAAAAEAAAAICAgIHojAAAAAAAAeiMAAAAAAAAEAAAAICAgIHYjAAAAAAAAdiMAAAAAAAAEAAAAICAgIA",
							"AgAAAAAAAAABAAAAlzoAAAAAAACXOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACGIwAAAAAAAIYjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6349,
							1,
							"insert",
							{
								"characters": "\t"
							},
							"AQAAAHYjAAAAAAAAeiMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAhzoAAAAAAACHOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB2IwAAAAAAAHYjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6350,
							1,
							"insert",
							{
								"characters": "h."
							},
							"AgAAAHojAAAAAAAAeyMAAAAAAAAAAAAAeyMAAAAAAAB8IwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAizoAAAAAAACLOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB6IwAAAAAAAHojAAAAAAAAAAAAAAAA8L8"
						],
						[
							6351,
							1,
							"insert",
							{
								"characters": "append"
							},
							"BgAAAHwjAAAAAAAAfSMAAAAAAAAAAAAAfSMAAAAAAAB+IwAAAAAAAAAAAAB+IwAAAAAAAH8jAAAAAAAAAAAAAH8jAAAAAAAAgCMAAAAAAAAAAAAAgCMAAAAAAACBIwAAAAAAAAAAAACBIwAAAAAAAIIjAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAjToAAAAAAACNOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB8IwAAAAAAAHwjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6352,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAIIjAAAAAAAAhCMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAkzoAAAAAAACTOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACCIwAAAAAAAIIjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6355,
							1,
							"insert",
							{
								"characters": "yval"
							},
							"BAAAAIMjAAAAAAAAhCMAAAAAAAAAAAAAhCMAAAAAAACFIwAAAAAAAAAAAACFIwAAAAAAAIYjAAAAAAAAAAAAAIYjAAAAAAAAhyMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAlToAAAAAAACVOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACDIwAAAAAAAIMjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6356,
							1,
							"insert_completion",
							{
								"completion": "y_val",
								"format": "snippet",
								"keep_prefix": false,
								"must_insert": false,
								"trigger": "y_val"
							},
							"AgAAAIMjAAAAAAAAgyMAAAAAAAAEAAAAeXZhbIMjAAAAAAAAiCMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAmToAAAAAAACZOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACHIwAAAAAAAIcjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6357,
							1,
							"insert",
							{
								"characters": "-"
							},
							"AQAAAIgjAAAAAAAAiSMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAmjoAAAAAAACaOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACIIwAAAAAAAIgjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6358,
							1,
							"insert",
							{
								"characters": "min"
							},
							"AwAAAIkjAAAAAAAAiiMAAAAAAAAAAAAAiiMAAAAAAACLIwAAAAAAAAAAAACLIwAAAAAAAIwjAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAmzoAAAAAAACbOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACJIwAAAAAAAIkjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6402,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAIwjAAAAAAAAjiMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAnjoAAAAAAACeOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACMIwAAAAAAAIwjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6403,
							1,
							"insert",
							{
								"characters": "vxy"
							},
							"AwAAAI0jAAAAAAAAjiMAAAAAAAAAAAAAjiMAAAAAAACPIwAAAAAAAAAAAACPIwAAAAAAAJAjAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAoDoAAAAAAACgOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACNIwAAAAAAAI0jAAAAAAAAAAAAAAAA8L8"
						],
						[
							6404,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAJAjAAAAAAAAkiMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAozoAAAAAAACjOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACQIwAAAAAAAJAjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6405,
							1,
							"insert",
							{
								"characters": "1"
							},
							"AQAAAJEjAAAAAAAAkiMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAApToAAAAAAAClOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACRIwAAAAAAAJEjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6407,
							1,
							"insert",
							{
								"characters": ","
							},
							"AQAAAJQjAAAAAAAAlSMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAApjoAAAAAAACmOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACUIwAAAAAAAJQjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6408,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAJUjAAAAAAAAliMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAApzoAAAAAAACnOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACVIwAAAAAAAJUjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6418,
							1,
							"paste",
							null,
							"AQAAAJYjAAAAAAAApyMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAqDoAAAAAAACoOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACWIwAAAAAAAJYjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6430,
							1,
							"cut",
							null,
							"AQAAAJYjAAAAAAAAliMAAAAAAAAGAAAAeV92YWwt",
							"AgAAAAAAAAABAAAAuToAAAAAAAC5OgAAAAAAAAAAAAAAAPC/AQAAAAEAAACWIwAAAAAAAJwjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6432,
							2,
							"right_delete",
							null,
							"AgAAAJcjAAAAAAAAlyMAAAAAAAABAAAAaZcjAAAAAAAAlyMAAAAAAAABAAAAbg",
							"AgAAAAAAAAABAAAAszoAAAAAAACzOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACXIwAAAAAAAJcjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6433,
							1,
							"insert",
							{
								"characters": "ax"
							},
							"AgAAAJcjAAAAAAAAmCMAAAAAAAAAAAAAmCMAAAAAAACZIwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAsToAAAAAAACxOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACXIwAAAAAAAJcjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6437,
							1,
							"insert",
							{
								"characters": "-"
							},
							"AQAAAKEjAAAAAAAAoiMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAszoAAAAAAACzOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAChIwAAAAAAAKEjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6438,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAKIjAAAAAAAAoyMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAtDoAAAAAAAC0OgAAAAAAAAAAAAAAAPC/AQAAAAEAAACiIwAAAAAAAKIjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6439,
							1,
							"paste",
							null,
							"AQAAAKMjAAAAAAAAqSMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAtToAAAAAAAC1OgAAAAAAAAAAAAAAAPC/AQAAAAEAAACjIwAAAAAAAKMjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6440,
							1,
							"left_delete",
							null,
							"AQAAAKgjAAAAAAAAqCMAAAAAAAABAAAALQ",
							"AgAAAAAAAAABAAAAuzoAAAAAAAC7OgAAAAAAAAAAAAAAAPC/AQAAAAEAAACpIwAAAAAAAKkjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6442,
							1,
							"left_delete",
							null,
							"AQAAAKIjAAAAAAAAoiMAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAujoAAAAAAAC6OgAAAAAAAAAAAAAAAPC/AQAAAAEAAACjIwAAAAAAAKMjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6448,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAAKgjAAAAAAAAqSMAAAAAAAAAAAAAqSMAAAAAAAC1IwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAuToAAAAAAAC5OgAAAAAAAAAAAAAAAPC/AQAAAAEAAACoIwAAAAAAAKgjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6449,
							1,
							"left_delete",
							null,
							"AQAAALEjAAAAAAAAsSMAAAAAAAAEAAAAICAgIA",
							"AgAAAAAAAAABAAAAxjoAAAAAAADGOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAC1IwAAAAAAALUjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6450,
							1,
							"insert",
							{
								"characters": "g"
							},
							"AQAAALEjAAAAAAAAsiMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAwjoAAAAAAADCOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACxIwAAAAAAALEjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6451,
							1,
							"left_delete",
							null,
							"AQAAALEjAAAAAAAAsSMAAAAAAAABAAAAZw",
							"AgAAAAAAAAABAAAAwzoAAAAAAADDOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACyIwAAAAAAALIjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6452,
							1,
							"insert",
							{
								"characters": "h"
							},
							"AQAAALEjAAAAAAAAsiMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAwjoAAAAAAADCOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACxIwAAAAAAALEjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6453,
							1,
							"insert",
							{
								"characters": " ="
							},
							"AgAAALIjAAAAAAAAsyMAAAAAAAAAAAAAsyMAAAAAAAC0IwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAwzoAAAAAAADDOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACyIwAAAAAAALIjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6454,
							1,
							"insert",
							{
								"characters": " np.array"
							},
							"CQAAALQjAAAAAAAAtSMAAAAAAAAAAAAAtSMAAAAAAAC2IwAAAAAAAAAAAAC2IwAAAAAAALcjAAAAAAAAAAAAALcjAAAAAAAAuCMAAAAAAAAAAAAAuCMAAAAAAAC5IwAAAAAAAAAAAAC5IwAAAAAAALojAAAAAAAAAAAAALojAAAAAAAAuyMAAAAAAAAAAAAAuyMAAAAAAAC8IwAAAAAAAAAAAAC8IwAAAAAAAL0jAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAxToAAAAAAADFOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAC0IwAAAAAAALQjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6455,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAL0jAAAAAAAAvyMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAzjoAAAAAAADOOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAC9IwAAAAAAAL0jAAAAAAAAAAAAAAAA8L8"
						],
						[
							6457,
							1,
							"insert",
							{
								"characters": "h"
							},
							"AQAAAL4jAAAAAAAAvyMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA0DoAAAAAAADQOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAC+IwAAAAAAAL4jAAAAAAAAAAAAAAAA8L8"
						],
						[
							6463,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAAMElAAAAAAAAwiUAAAAAAAAAAAAAwiUAAAAAAADKJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA0ToAAAAAAADROgAAAAAAAAAAAAAAAPC/AQAAAAEAAADBJQAAAAAAAMElAAAAAAAAAAAAAAAAVEA"
						],
						[
							6465,
							1,
							"insert",
							{
								"characters": "print"
							},
							"BQAAAMElAAAAAAAAwiUAAAAAAAAAAAAAwiUAAAAAAADDJQAAAAAAAAAAAADDJQAAAAAAAMQlAAAAAAAAAAAAAMQlAAAAAAAAxSUAAAAAAAAAAAAAxSUAAAAAAADGJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA2joAAAAAAADaOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADBJQAAAAAAAMElAAAAAAAAAAAAAAAAVEA"
						],
						[
							6466,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAMYlAAAAAAAAyCUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA3zoAAAAAAADfOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADGJQAAAAAAAMYlAAAAAAAAAAAAAAAA8L8"
						],
						[
							6468,
							1,
							"insert",
							{
								"characters": "h"
							},
							"AQAAAMclAAAAAAAAyCUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA4ToAAAAAAADhOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADHJQAAAAAAAMclAAAAAAAAAAAAAAAA8L8"
						],
						[
							6473,
							1,
							"insert",
							{
								"characters": "vstack"
							},
							"BwAAALgjAAAAAAAAuSMAAAAAAAAAAAAAuSMAAAAAAAC5IwAAAAAAAAUAAABhcnJhebkjAAAAAAAAuiMAAAAAAAAAAAAAuiMAAAAAAAC7IwAAAAAAAAAAAAC7IwAAAAAAALwjAAAAAAAAAAAAALwjAAAAAAAAvSMAAAAAAAAAAAAAvSMAAAAAAAC+IwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA4joAAAAAAADiOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAC4IwAAAAAAAL0jAAAAAAAAAAAAAAAA8L8"
						],
						[
							6475,
							1,
							"insert",
							{
								"characters": "[y"
							},
							"AgAAAIMjAAAAAAAAhCMAAAAAAAAAAAAAhCMAAAAAAACFIwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA4zoAAAAAAADjOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACDIwAAAAAAAIMjAAAAAAAAAAAAAABAakA"
						],
						[
							6476,
							1,
							"insert",
							{
								"characters": "val,"
							},
							"BAAAAIUjAAAAAAAAhiMAAAAAAAAAAAAAhiMAAAAAAACHIwAAAAAAAAAAAACHIwAAAAAAAIgjAAAAAAAAAAAAAIgjAAAAAAAAiSMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA5ToAAAAAAADlOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACFIwAAAAAAAIUjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6477,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAIkjAAAAAAAAiiMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA6ToAAAAAAADpOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACJIwAAAAAAAIkjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6479,
							1,
							"insert",
							{
								"characters": "_"
							},
							"AQAAAIUjAAAAAAAAhiMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA6joAAAAAAADqOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACFIwAAAAAAAIUjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6492,
							1,
							"left_delete",
							null,
							"AQAAAIIjAAAAAAAAgiMAAAAAAAABAAAAWw",
							"AgAAAAAAAAABAAAA6zoAAAAAAADrOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACDIwAAAAAAAIMjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6505,
							1,
							"insert_snippet",
							{
								"contents": "(${0:$SELECTION})"
							},
							"AgAAAIIjAAAAAAAAgiMAAAAAAAAtAAAAW3lfdmFsLCB5X3ZhbC1taW4odnh5WzFdKSwgbWF4KHZ4eVsxXSkteV92YWxdgiMAAAAAAACxIwAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA6joAAAAAAADqOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACCIwAAAAAAAK8jAAAAAAAA////////738"
						],
						[
							6506,
							1,
							"",
							null,
							"AgAAAGwjAAAAAAAAmSMAAAAAAAAAAAAAsCMAAAAAAACwIwAAAAAAAC0AAABbeV92YWwsIHlfdmFsLW1pbih2eHlbMV0pLCBtYXgodnh5WzFdKS15X3ZhbF0",
							"AgAAAAAAAAABAAAA7DoAAAAAAADsOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACDIwAAAAAAALAjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6513,
							1,
							"left_delete",
							null,
							"AQAAAJkjAAAAAAAAmSMAAAAAAAABAAAAaw",
							"AgAAAAAAAAABAAAA7DoAAAAAAADsOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACaIwAAAAAAAJojAAAAAAAAAAAAAAAA8L8"
						],
						[
							6516,
							1,
							"insert",
							{
								"characters": "k"
							},
							"AQAAAGwjAAAAAAAAbSMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA6zoAAAAAAADrOgAAAAAAAAAAAAAAAPC/AQAAAAEAAABsIwAAAAAAAGwjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6526,
							1,
							"cut",
							null,
							"AQAAAG0jAAAAAAAAbSMAAAAAAAAtAAAAW3lfdmFsLCB5X3ZhbC1taW4odnh5WzFdKSwgbWF4KHZ4eVsxXSkteV92YWxd",
							"AgAAAAAAAAABAAAA7DoAAAAAAADsOgAAAAAAAAAAAAAAAPC/AQAAAAEAAABtIwAAAAAAAJojAAAAAAAA////////738"
						],
						[
							6530,
							1,
							"paste",
							null,
							"AQAAAIMjAAAAAAAAsCMAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAvzoAAAAAAAC/OgAAAAAAAAAAAAAAAPC/AQAAAAEAAACDIwAAAAAAAIMjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6544,
							2,
							"right_delete",
							null,
							"AgAAAIQjAAAAAAAAhCMAAAAAAAAFAAAAeV92YWyEIwAAAAAAAIQjAAAAAAAAAQAAACw",
							"AgAAAAAAAAABAAAA7DoAAAAAAADsOgAAAAAAAAAAAAAAAPC/AQAAAAEAAACEIwAAAAAAAIkjAAAAAAAAAAAAAAAA8L8"
						],
						[
							6567,
							1,
							"insert",
							{
								"characters": ","
							},
							"AQAAAMkkAAAAAAAAyiQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA5joAAAAAAADmOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADJJAAAAAAAAMkkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6568,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAMokAAAAAAAAyyQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA5zoAAAAAAADnOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADKJAAAAAAAAMokAAAAAAAAAAAAAAAA8L8"
						],
						[
							6569,
							1,
							"insert",
							{
								"characters": "*h"
							},
							"AgAAAMskAAAAAAAAzCQAAAAAAAAAAAAAzCQAAAAAAADNJAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA6DoAAAAAAADoOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADLJAAAAAAAAMskAAAAAAAAAAAAAAAA8L8"
						],
						[
							6574,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAANAkAAAAAAAA0SQAAAAAAAAAAAAA0SQAAAAAAADZJAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA6joAAAAAAADqOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADQJAAAAAAAANAkAAAAAAAA////////738"
						],
						[
							6575,
							1,
							"run_macro_file",
							{
								"file": "res://Packages/Default/Delete to Hard BOL.sublime-macro"
							},
							"AQAAANEkAAAAAAAA0SQAAAAAAAAIAAAAICAgICAgICA",
							"AgAAAAAAAAABAAAA8zoAAAAAAADzOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADZJAAAAAAAANkkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6576,
							1,
							"left_delete",
							null,
							"AQAAANAkAAAAAAAA0CQAAAAAAAABAAAACg",
							"AgAAAAAAAAABAAAA6zoAAAAAAADrOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADRJAAAAAAAANEkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6579,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAMklAAAAAAAAyyUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA6joAAAAAAADqOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADRJQAAAAAAANElAAAAAAAAAAAAAAAA8L8"
						],
						[
							6589,
							1,
							"insert",
							{
								"characters": ".T"
							},
							"AgAAAM0kAAAAAAAAziQAAAAAAAAAAAAAziQAAAAAAADPJAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA7DoAAAAAAADsOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADNJAAAAAAAAM0kAAAAAAAAAAAAAAAA8L8"
						],
						[
							6598,
							1,
							"left_delete",
							null,
							"AQAAAMgkAAAAAAAAyCQAAAAAAAABAAAAXQ",
							"AgAAAAAAAAABAAAA4joAAAAAAADiOgAAAAAAAAAAAAAAgFZAAQAAAAEAAADJJAAAAAAAAMkkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6600,
							1,
							"insert",
							{
								"characters": "]"
							},
							"AQAAAM4kAAAAAAAAzyQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA4ToAAAAAAADhOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADOJAAAAAAAAM4kAAAAAAAAAAAAAAAA8L8"
						],
						[
							6610,
							2,
							"left_delete",
							null,
							"AgAAAN8BAAAAAAAA3wEAAAAAAAABAAAAMN4BAAAAAAAA3gEAAAAAAAABAAAAMQ",
							"AgAAAAAAAAABAAAA4joAAAAAAADiOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADgAQAAAAAAAOABAAAAAAAAAAAAAAAA8L8"
						],
						[
							6611,
							1,
							"insert",
							{
								"characters": "8"
							},
							"AQAAAN4BAAAAAAAA3wEAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA4DoAAAAAAADgOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADeAQAAAAAAAN4BAAAAAAAAAAAAAAAA8L8"
						],
						[
							6626,
							1,
							"insert",
							{
								"characters": ".shape"
							},
							"BgAAAOglAAAAAAAA6SUAAAAAAAAAAAAA6SUAAAAAAADqJQAAAAAAAAAAAADqJQAAAAAAAOslAAAAAAAAAAAAAOslAAAAAAAA7CUAAAAAAAAAAAAA7CUAAAAAAADtJQAAAAAAAAAAAADtJQAAAAAAAO4lAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA4ToAAAAAAADhOgAAAAAAAAAAAAAAAPC/AQAAAAEAAADoJQAAAAAAAOglAAAAAAAAAAAAAAAA8L8"
						],
						[
							6636,
							1,
							"insert",
							{
								"characters": ".T"
							},
							"AgAAAOglAAAAAAAA6SUAAAAAAAAAAAAA6SUAAAAAAADqJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAANDkAAAAAAAA0OQAAAAAAAAAAAAAAAPC/AQAAAAEAAADoJQAAAAAAAOglAAAAAAAAAAAAAAAA8L8"
						],
						[
							6638,
							5,
							"left_delete",
							null,
							"BQAAAO8lAAAAAAAA7yUAAAAAAAABAAAAZe4lAAAAAAAA7iUAAAAAAAABAAAAcO0lAAAAAAAA7SUAAAAAAAABAAAAYewlAAAAAAAA7CUAAAAAAAABAAAAaOslAAAAAAAA6yUAAAAAAAABAAAAcw",
							"AgAAAAAAAAABAAAANjkAAAAAAAA2OQAAAAAAAAAAAAAAAPC/AQAAAAEAAADwJQAAAAAAAPAlAAAAAAAAAAAAAAAA8L8"
						],
						[
							6639,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAOslAAAAAAAA7SUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAMTkAAAAAAAAxOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADrJQAAAAAAAOslAAAAAAAAAAAAAAAA8L8"
						],
						[
							6640,
							1,
							"insert",
							{
								"characters": "1:"
							},
							"AgAAAOwlAAAAAAAA7SUAAAAAAAAAAAAA7SUAAAAAAADuJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAMzkAAAAAAAAzOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADsJQAAAAAAAOwlAAAAAAAAAAAAAAAA8L8"
						],
						[
							6646,
							2,
							"left_delete",
							null,
							"AgAAAOslAAAAAAAA6yUAAAAAAAABAAAAW+olAAAAAAAA6iUAAAAAAAABAAAALg",
							"AgAAAAAAAAABAAAANTkAAAAAAAA1OQAAAAAAAAAAAAAAAPC/AQAAAAEAAADsJQAAAAAAAOwlAAAAAAAAAAAAAAAA8L8"
						],
						[
							6647,
							1,
							"insert",
							{
								"characters": "["
							},
							"AQAAAOolAAAAAAAA6yUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAMzkAAAAAAAAzOQAAAAAAAAAAAAAAAPC/AQAAAAEAAADqJQAAAAAAAOolAAAAAAAAAAAAAAAA8L8"
						],
						[
							6653,
							1,
							"insert",
							{
								"characters": "\np"
							},
							"AwAAAO8lAAAAAAAA8CUAAAAAAAAAAAAA8CUAAAAAAAD4JQAAAAAAAAAAAAD4JQAAAAAAAPklAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAgF5AAQAAAAEAAADvJQAAAAAAAO8lAAAAAAAAAAAAAAAA8L8"
						],
						[
							6654,
							1,
							"insert",
							{
								"characters": "rint"
							},
							"BAAAAPklAAAAAAAA+iUAAAAAAAAAAAAA+iUAAAAAAAD7JQAAAAAAAAAAAAD7JQAAAAAAAPwlAAAAAAAAAAAAAPwlAAAAAAAA/SUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD5JQAAAAAAAPklAAAAAAAAAAAAAAAA8L8"
						],
						[
							6655,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAP0lAAAAAAAA/yUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD9JQAAAAAAAP0lAAAAAAAAAAAAAAAA8L8"
						],
						[
							6657,
							1,
							"insert",
							{
								"characters": "np.var"
							},
							"BgAAAP4lAAAAAAAA/yUAAAAAAAAAAAAA/yUAAAAAAAAAJgAAAAAAAAAAAAAAJgAAAAAAAAEmAAAAAAAAAAAAAAEmAAAAAAAAAiYAAAAAAAAAAAAAAiYAAAAAAAADJgAAAAAAAAAAAAADJgAAAAAAAAQmAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD+JQAAAAAAAP4lAAAAAAAAAAAAAAAA8L8"
						],
						[
							6658,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAAQmAAAAAAAABiYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAEJgAAAAAAAAQmAAAAAAAAAAAAAAAA8L8"
						],
						[
							6660,
							1,
							"insert",
							{
								"characters": "combo"
							},
							"BQAAAAUmAAAAAAAABiYAAAAAAAAAAAAABiYAAAAAAAAHJgAAAAAAAAAAAAAHJgAAAAAAAAgmAAAAAAAAAAAAAAgmAAAAAAAACSYAAAAAAAAAAAAACSYAAAAAAAAKJgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAFJgAAAAAAAAUmAAAAAAAAAAAAAAAA8L8"
						],
						[
							6661,
							1,
							"insert",
							{
								"characters": ".T"
							},
							"AgAAAAomAAAAAAAACyYAAAAAAAAAAAAACyYAAAAAAAAMJgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAKJgAAAAAAAAomAAAAAAAAAAAAAAAA8L8"
						],
						[
							6662,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAAwmAAAAAAAADiYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAMJgAAAAAAAAwmAAAAAAAAAAAAAAAA8L8"
						],
						[
							6663,
							1,
							"insert",
							{
								"characters": "1:"
							},
							"AgAAAA0mAAAAAAAADiYAAAAAAAAAAAAADiYAAAAAAAAPJgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAANJgAAAAAAAA0mAAAAAAAAAAAAAAAA8L8"
						],
						[
							6666,
							1,
							"insert",
							{
								"characters": ","
							},
							"AQAAABAmAAAAAAAAESYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAQJgAAAAAAABAmAAAAAAAAAAAAAAAA8L8"
						],
						[
							6667,
							1,
							"insert",
							{
								"characters": " axis=0"
							},
							"BwAAABEmAAAAAAAAEiYAAAAAAAAAAAAAEiYAAAAAAAATJgAAAAAAAAAAAAATJgAAAAAAABQmAAAAAAAAAAAAABQmAAAAAAAAFSYAAAAAAAAAAAAAFSYAAAAAAAAWJgAAAAAAAAAAAAAWJgAAAAAAABcmAAAAAAAAAAAAABcmAAAAAAAAGCYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAARJgAAAAAAABEmAAAAAAAAAAAAAAAA8L8"
						],
						[
							6692,
							1,
							"insert",
							{
								"characters": "np.var"
							},
							"BgAAAK4kAAAAAAAAryQAAAAAAAAAAAAAryQAAAAAAACwJAAAAAAAAAAAAACwJAAAAAAAALEkAAAAAAAAAAAAALEkAAAAAAAAsiQAAAAAAAAAAAAAsiQAAAAAAACzJAAAAAAAAAAAAACzJAAAAAAAALQkAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAACuJAAAAAAAAK4kAAAAAAAAAAAAAAAA8L8"
						],
						[
							6697,
							1,
							"insert_snippet",
							{
								"contents": "(${0:$SELECTION})"
							},
							"AgAAALQkAAAAAAAAtCQAAAAAAAAfAAAAIGRbImwiXS5UWzFdLCBkWyJyIl0uVFsxXSwgKmguVLQkAAAAAAAA1SQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAC0JAAAAAAAANMkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6698,
							1,
							"insert_snippet",
							{
								"contents": "[${0:$SELECTION}]"
							},
							"AgAAALUkAAAAAAAAtSQAAAAAAAAfAAAAIGRbImwiXS5UWzFdLCBkWyJyIl0uVFsxXSwgKmguVLUkAAAAAAAA1iQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAC1JAAAAAAAANQkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6700,
							1,
							"insert",
							{
								"characters": ","
							},
							"AQAAANYkAAAAAAAA1yQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADWJAAAAAAAANYkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6701,
							1,
							"insert",
							{
								"characters": " axis=0"
							},
							"BwAAANckAAAAAAAA2CQAAAAAAAAAAAAA2CQAAAAAAADZJAAAAAAAAAAAAADZJAAAAAAAANokAAAAAAAAAAAAANokAAAAAAAA2yQAAAAAAAAAAAAA2yQAAAAAAADcJAAAAAAAAAAAAADcJAAAAAAAAN0kAAAAAAAAAAAAAN0kAAAAAAAA3iQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADXJAAAAAAAANckAAAAAAAAAAAAAAAA8L8"
						],
						[
							6709,
							1,
							"left_delete",
							null,
							"AQAAAO8lAAAAAAAA7yUAAAAAAAASAAAAcHJpbnQoY29tYm8uVFsxOl0p",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAABJgAAAAAAAO8lAAAAAAAAAAAAAAAA8L8"
						],
						[
							6712,
							1,
							"left_delete",
							null,
							"AQAAAPglAAAAAAAA+CUAAAAAAAAiAAAAcHJpbnQobnAudmFyKGNvbWJvLlRbMTpdLCBheGlzPTApKQ",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD4JQAAAAAAABomAAAAAAAA////////738"
						],
						[
							6715,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAAOMkAAAAAAAA5CQAAAAAAAAAAAAA5CQAAAAAAADsJAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADjJAAAAAAAAOMkAAAAAAAA////////738"
						],
						[
							6716,
							1,
							"insert",
							{
								"characters": "np.search"
							},
							"CQAAAOwkAAAAAAAA7SQAAAAAAAAAAAAA7SQAAAAAAADuJAAAAAAAAAAAAADuJAAAAAAAAO8kAAAAAAAAAAAAAO8kAAAAAAAA8CQAAAAAAAAAAAAA8CQAAAAAAADxJAAAAAAAAAAAAADxJAAAAAAAAPIkAAAAAAAAAAAAAPIkAAAAAAAA8yQAAAAAAAAAAAAA8yQAAAAAAAD0JAAAAAAAAAAAAAD0JAAAAAAAAPUkAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADsJAAAAAAAAOwkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6717,
							1,
							"insert_completion",
							{
								"completion": "searchsorted",
								"format": "snippet",
								"keep_prefix": false,
								"must_insert": false,
								"trigger": "searchsorted"
							},
							"AgAAAO8kAAAAAAAA7yQAAAAAAAAGAAAAc2VhcmNo7yQAAAAAAAD7JAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD1JAAAAAAAAPUkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6718,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAPskAAAAAAAA/SQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD7JAAAAAAAAPskAAAAAAAAAAAAAAAA8L8"
						],
						[
							6725,
							1,
							"insert",
							{
								"characters": "combo"
							},
							"BgAAAOwkAAAAAAAA7SQAAAAAAAAAAAAA7SQAAAAAAADtJAAAAAAAAAIAAABucO0kAAAAAAAA7iQAAAAAAAAAAAAA7iQAAAAAAADvJAAAAAAAAAAAAADvJAAAAAAAAPAkAAAAAAAAAAAAAPAkAAAAAAAA8SQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADuJAAAAAAAAOwkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6728,
							1,
							"insert",
							{
								"characters": "min"
							},
							"AwAAAP8kAAAAAAAAACUAAAAAAAAAAAAAACUAAAAAAAABJQAAAAAAAAAAAAABJQAAAAAAAAIlAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD/JAAAAAAAAP8kAAAAAAAAAAAAAAAA8L8"
						],
						[
							6732,
							2,
							"delete_word",
							{
								"forward": false
							},
							"AgAAAAIlAAAAAAAAAiUAAAAAAAABAAAAKf8kAAAAAAAA/yQAAAAAAAADAAAAbWlu",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAADJQAAAAAAAAMlAAAAAAAAAAAAAAAA8L8"
						],
						[
							6734,
							1,
							"insert",
							{
								"characters": "argmin"
							},
							"BwAAAPIkAAAAAAAA8yQAAAAAAAAAAAAA8yQAAAAAAADzJAAAAAAAAA0AAABzZWFyY2hzb3J0ZWQo8yQAAAAAAAD0JAAAAAAAAAAAAAD0JAAAAAAAAPUkAAAAAAAAAAAAAPUkAAAAAAAA9iQAAAAAAAAAAAAA9iQAAAAAAAD3JAAAAAAAAAAAAAD3JAAAAAAAAPgkAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD/JAAAAAAAAPIkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6735,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAPgkAAAAAAAA+iQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD4JAAAAAAAAPgkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6741,
							1,
							"insert",
							{
								"characters": "print("
							},
							"BgAAAOwkAAAAAAAA7SQAAAAAAAAAAAAA7SQAAAAAAADuJAAAAAAAAAAAAADuJAAAAAAAAO8kAAAAAAAAAAAAAO8kAAAAAAAA8CQAAAAAAAAAAAAA8CQAAAAAAADxJAAAAAAAAAAAAADxJAAAAAAAAPIkAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADsJAAAAAAAAOwkAAAAAAAAAAAAAAAAVEA"
						],
						[
							6743,
							1,
							"insert",
							{
								"characters": ")"
							},
							"AQAAAAAlAAAAAAAAASUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAJQAAAAAAAAAlAAAAAAAA////////738"
						],
						[
							6748,
							2,
							"left_delete",
							null,
							"AgAAAOIkAAAAAAAA4iQAAAAAAAABAAAAVOEkAAAAAAAA4SQAAAAAAAABAAAALg",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADjJAAAAAAAAOMkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6769,
							1,
							"insert",
							{
								"characters": "[11"
							},
							"AwAAAPUkAAAAAAAA9iQAAAAAAAAAAAAA9iQAAAAAAAD3JAAAAAAAAAAAAAD3JAAAAAAAAPgkAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD1JAAAAAAAAPUkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6770,
							1,
							"left_delete",
							null,
							"AQAAAPckAAAAAAAA9yQAAAAAAAABAAAAMQ",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD4JAAAAAAAAPgkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6771,
							1,
							"insert",
							{
								"characters": "]"
							},
							"AQAAAPckAAAAAAAA+CQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD3JAAAAAAAAPckAAAAAAAAAAAAAAAA8L8"
						],
						[
							6783,
							1,
							"insert",
							{
								"characters": "\nprint"
							},
							"BwAAAPIlAAAAAAAA8yUAAAAAAAAAAAAA8yUAAAAAAAD7JQAAAAAAAAAAAAD7JQAAAAAAAPwlAAAAAAAAAAAAAPwlAAAAAAAA/SUAAAAAAAAAAAAA/SUAAAAAAAD+JQAAAAAAAAAAAAD+JQAAAAAAAP8lAAAAAAAAAAAAAP8lAAAAAAAAACYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADyJQAAAAAAAPIlAAAAAAAAAAAAAAAA8L8"
						],
						[
							6784,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAAAmAAAAAAAAAiYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAJgAAAAAAAAAmAAAAAAAAAAAAAAAA8L8"
						],
						[
							6786,
							1,
							"insert",
							{
								"characters": "imaxw"
							},
							"BQAAAAEmAAAAAAAAAiYAAAAAAAAAAAAAAiYAAAAAAAADJgAAAAAAAAAAAAADJgAAAAAAAAQmAAAAAAAAAAAAAAQmAAAAAAAABSYAAAAAAAAAAAAABSYAAAAAAAAGJgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAABJgAAAAAAAAEmAAAAAAAAAAAAAAAA8L8"
						],
						[
							6787,
							1,
							"insert_completion",
							{
								"completion": "i_maxw",
								"format": "snippet",
								"keep_prefix": false,
								"must_insert": false,
								"trigger": "i_maxw"
							},
							"AgAAAAEmAAAAAAAAASYAAAAAAAAFAAAAaW1heHcBJgAAAAAAAAcmAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAGJgAAAAAAAAYmAAAAAAAAAAAAAAAA8L8"
						],
						[
							6800,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAL4lAAAAAAAAwCUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADyJQAAAAAAAPIlAAAAAAAAAAAAAAAA8L8"
						],
						[
							6802,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAP0lAAAAAAAA/yUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAKJgAAAAAAAAomAAAAAAAAAAAAAABgg0A"
						],
						[
							6803,
							1,
							"insert",
							{
								"characters": "\nimax"
							},
							"BgAAAAwmAAAAAAAADSYAAAAAAAAAAAAADSYAAAAAAAAVJgAAAAAAAAAAAAAVJgAAAAAAABYmAAAAAAAAAAAAABYmAAAAAAAAFyYAAAAAAAAAAAAAFyYAAAAAAAAYJgAAAAAAAAAAAAAYJgAAAAAAABkmAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAMJgAAAAAAAAwmAAAAAAAAAAAAAAAA8L8"
						],
						[
							6805,
							1,
							"insert_completion",
							{
								"completion": "i_maxw",
								"format": "text",
								"keep_prefix": false,
								"must_insert": false,
								"trigger": "i_maxw"
							},
							"AgAAABUmAAAAAAAAFSYAAAAAAAAEAAAAaW1heBUmAAAAAAAAGyYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAZJgAAAAAAABkmAAAAAAAAAAAAAAAA8L8"
						],
						[
							6806,
							1,
							"insert",
							{
								"characters": " ="
							},
							"AgAAABsmAAAAAAAAHCYAAAAAAAAAAAAAHCYAAAAAAAAdJgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAbJgAAAAAAABsmAAAAAAAAAAAAAAAA8L8"
						],
						[
							6807,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAB0mAAAAAAAAHiYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAdJgAAAAAAAB0mAAAAAAAAAAAAAAAA8L8"
						],
						[
							6810,
							1,
							"bh_key",
							{
								"plugin":
								{
									"args":
									{
										"remove_block": false,
										"remove_content": false,
										"remove_indent": false
									},
									"command": "bh_modules.bracketremove",
									"type":
									[
										"__all__"
									]
								}
							},
							"AgAAAAElAAAAAAAAASUAAAAAAAABAAAAKe8kAAAAAAAA7yQAAAAAAAABAAAAKA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADwJAAAAAAAAPAkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6812,
							1,
							"insert",
							{
								"characters": "c"
							},
							"AgAAAOokAAAAAAAA6yQAAAAAAAAAAAAA6yQAAAAAAADrJAAAAAAAAAYAAABwcmludGM",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADwJAAAAAAAAOokAAAAAAAAAAAAAAAAVEA"
						],
						[
							6815,
							1,
							"cut",
							null,
							"AQAAAOokAAAAAAAA6iQAAAAAAAARAAAAY29tYm9bMV0uYXJnbWluKCk",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADqJAAAAAAAAPskAAAAAAAA////////738"
						],
						[
							6818,
							1,
							"paste",
							null,
							"AQAAAAYmAAAAAAAAFyYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAGJgAAAAAAAAYmAAAAAAAA////////738"
						],
						[
							6830,
							1,
							"insert",
							{
								"characters": "std"
							},
							"BAAAALEkAAAAAAAAsiQAAAAAAAAAAAAAsiQAAAAAAACyJAAAAAAAAAMAAAB2YXKyJAAAAAAAALMkAAAAAAAAAAAAALMkAAAAAAAAtCQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAACxJAAAAAAAALQkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6839,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAOUlAAAAAAAA5SUAAAAAAAACAAAAIyA",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD0JQAAAAAAAPQlAAAAAAAAAAAAAAAA8L8"
						],
						[
							6840,
							1,
							"swap_line_down",
							null,
							"AgAAABYmAAAAAAAALCYAAAAAAAAAAAAA3SUAAAAAAADdJQAAAAAAABYAAAAgICAgICAgIHByaW50KGlfbWF4dykK",
							"AgAAAAAAAAABAAAASRMAAAAAAABJEwAAAAAAAAAAAAAAAPC/AQAAAAEAAADyJQAAAAAAAPIlAAAAAAAAAAAAAAAA8L8"
						],
						[
							6852,
							1,
							"left_delete",
							null,
							"AQAAAN4BAAAAAAAA3gEAAAAAAAABAAAAOA",
							"AgAAAAAAAAABAAAAKDsAAAAAAAAoOwAAAAAAAAAAAAAAAPC/AQAAAAEAAADfAQAAAAAAAN8BAAAAAAAAAAAAAAAA8L8"
						],
						[
							6853,
							1,
							"insert",
							{
								"characters": "10"
							},
							"AgAAAN4BAAAAAAAA3wEAAAAAAAAAAAAA3wEAAAAAAADgAQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAJzsAAAAAAAAnOwAAAAAAAAAAAAAAAPC/AQAAAAEAAADeAQAAAAAAAN4BAAAAAAAAAAAAAAAA8L8"
						],
						[
							6887,
							4,
							"left_delete",
							null,
							"BAAAAF8UAAAAAAAAXxQAAAAAAAACAAAANTBeFAAAAAAAAF4UAAAAAAAAAQAAACBdFAAAAAAAAF0UAAAAAAAAAQAAACtcFAAAAAAAAFwUAAAAAAAAAQAAACA",
							"AgAAAAAAAAABAAAACjsAAAAAAAAKOwAAAAAAAAAAAAAAAPC/AQAAAAEAAABhFAAAAAAAAF8UAAAAAAAAAAAAAAAA8L8"
						],
						[
							6905,
							1,
							"insert",
							{
								"characters": "var"
							},
							"BAAAAK0kAAAAAAAAriQAAAAAAAAAAAAAriQAAAAAAACuJAAAAAAAAAMAAABzdGSuJAAAAAAAAK8kAAAAAAAAAAAAAK8kAAAAAAAAsCQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAABTsAAAAAAAAFOwAAAAAAAAAAAAAAAPC/AQAAAAEAAACtJAAAAAAAALAkAAAAAAAAAAAAAAAA8L8"
						],
						[
							6931,
							1,
							"left_delete",
							null,
							"AQAAABM6AAAAAAAAEzoAAAAAAAAEAAAAZmlsdA",
							"AgAAAAAAAAABAAAABTsAAAAAAAAFOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAXOgAAAAAAABM6AAAAAAAAAAAAAAAA8L8"
						],
						[
							6942,
							1,
							"insert",
							{
								"characters": "std"
							},
							"BAAAAK0kAAAAAAAAriQAAAAAAAAAAAAAriQAAAAAAACuJAAAAAAAAAMAAAB2YXKuJAAAAAAAAK8kAAAAAAAAAAAAAK8kAAAAAAAAsCQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAATsAAAAAAAABOwAAAAAAAAAAAAAAAPC/AQAAAAEAAACtJAAAAAAAALAkAAAAAAAAAAAAAAAA8L8"
						],
						[
							7067,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAAPslAAAAAAAA/CUAAAAAAAAAAAAA/CUAAAAAAAAEJgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAATsAAAAAAAABOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD7JQAAAAAAAPslAAAAAAAAAAAAAAAwi0A"
						],
						[
							7068,
							1,
							"insert",
							{
								"characters": "i_ma"
							},
							"BAAAAAQmAAAAAAAABSYAAAAAAAAAAAAABSYAAAAAAAAGJgAAAAAAAAAAAAAGJgAAAAAAAAcmAAAAAAAAAAAAAAcmAAAAAAAACCYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAACjsAAAAAAAAKOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAEJgAAAAAAAAQmAAAAAAAAAAAAAAAA8L8"
						],
						[
							7069,
							1,
							"insert",
							{
								"characters": "xh"
							},
							"AgAAAAgmAAAAAAAACSYAAAAAAAAAAAAACSYAAAAAAAAKJgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAADjsAAAAAAAAOOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAIJgAAAAAAAAgmAAAAAAAAAAAAAAAA8L8"
						],
						[
							7070,
							1,
							"insert",
							{
								"characters": " ="
							},
							"AgAAAAomAAAAAAAACyYAAAAAAAAAAAAACyYAAAAAAAAMJgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAEDsAAAAAAAAQOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAKJgAAAAAAAAomAAAAAAAAAAAAAAAA8L8"
						],
						[
							7071,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAAwmAAAAAAAADSYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAEjsAAAAAAAASOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAMJgAAAAAAAAwmAAAAAAAAAAAAAAAA8L8"
						],
						[
							7076,
							1,
							"paste",
							null,
							"AQAAAA0mAAAAAAAAHiYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAEzsAAAAAAAATOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAANJgAAAAAAAA0mAAAAAAAAAAAAAAAA8L8"
						],
						[
							7083,
							1,
							"left_delete",
							null,
							"AQAAAA0mAAAAAAAADSYAAAAAAAARAAAAY29tYm9bMV0uYXJnbWluKCk",
							"AgAAAAAAAAABAAAAJDsAAAAAAAAkOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAANJgAAAAAAAB4mAAAAAAAAAAAAAAAA8L8"
						],
						[
							7084,
							1,
							"run_macro_file",
							{
								"file": "res://Packages/Default/Delete to Hard BOL.sublime-macro"
							},
							"AQAAAPwlAAAAAAAA/CUAAAAAAAARAAAAICAgICAgICBpX21heGggPSA",
							"AgAAAAAAAAABAAAAEzsAAAAAAAATOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAANJgAAAAAAAA0mAAAAAAAAAAAAAAAA8L8"
						],
						[
							7085,
							1,
							"left_delete",
							null,
							"AQAAAPslAAAAAAAA+yUAAAAAAAABAAAACg",
							"AgAAAAAAAAABAAAAAjsAAAAAAAACOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAD8JQAAAAAAAPwlAAAAAAAAAAAAAAAA8L8"
						],
						[
							7096,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAKokAAAAAAAAqyQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAATsAAAAAAAABOwAAAAAAAAAAAAAAAPC/AQAAAAEAAACqJAAAAAAAAKokAAAAAAAAAAAAAAAA8L8"
						],
						[
							7105,
							1,
							"duplicate_lines",
							null,
							"AQAAAIMkAAAAAAAA3yQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAjsAAAAAAAACOwAAAAAAAAAAAAAAAPC/AQAAAAEAAADeJAAAAAAAAN4kAAAAAAAAAAAAAAAA8L8"
						],
						[
							7111,
							1,
							"insert",
							{
								"characters": ")"
							},
							"AQAAACglAAAAAAAAKSUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAXjsAAAAAAABeOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAoJQAAAAAAACglAAAAAAAAAAAAAAAA8L8"
						],
						[
							7113,
							1,
							"insert",
							{
								"characters": "],"
							},
							"AgAAACglAAAAAAAAKSUAAAAAAAAAAAAAKSUAAAAAAAAqJQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAXzsAAAAAAABfOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAoJQAAAAAAACglAAAAAAAAAAAAAAAA8L8"
						],
						[
							7114,
							1,
							"insert",
							{
								"characters": " axis=0"
							},
							"BwAAAColAAAAAAAAKyUAAAAAAAAAAAAAKyUAAAAAAAAsJQAAAAAAAAAAAAAsJQAAAAAAAC0lAAAAAAAAAAAAAC0lAAAAAAAALiUAAAAAAAAAAAAALiUAAAAAAAAvJQAAAAAAAAAAAAAvJQAAAAAAADAlAAAAAAAAAAAAADAlAAAAAAAAMSUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAYTsAAAAAAABhOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAqJQAAAAAAAColAAAAAAAAAAAAAAAA8L8"
						],
						[
							7122,
							1,
							"insert",
							{
								"characters": "["
							},
							"AQAAADQlAAAAAAAANSUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAaDsAAAAAAABoOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA0JQAAAAAAADQlAAAAAAAAAAAAAAAA8L8"
						],
						[
							7126,
							1,
							"insert_snippet",
							{
								"contents": "(${0:$SELECTION})"
							},
							"AgAAADQlAAAAAAAANCUAAAAAAAAGAAAAWypoLlRdNCUAAAAAAAA8JQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAaTsAAAAAAABpOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA0JQAAAAAAADolAAAAAAAAAAAAAAAA8L8"
						],
						[
							7131,
							1,
							"left_delete",
							null,
							"AQAAADwlAAAAAAAAPCUAAAAAAAAJAAAALCBheGlzPTAp",
							"AgAAAAAAAAABAAAAazsAAAAAAABrOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA8JQAAAAAAAEUlAAAAAAAAAAAAAAAA8L8"
						],
						[
							7133,
							1,
							"insert",
							{
								"characters": ","
							},
							"AQAAADslAAAAAAAAPCUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAYjsAAAAAAABiOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA7JQAAAAAAADslAAAAAAAAAAAAAAAA8L8"
						],
						[
							7134,
							1,
							"insert",
							{
								"characters": " axis=0"
							},
							"BwAAADwlAAAAAAAAPSUAAAAAAAAAAAAAPSUAAAAAAAA+JQAAAAAAAAAAAAA+JQAAAAAAAD8lAAAAAAAAAAAAAD8lAAAAAAAAQCUAAAAAAAAAAAAAQCUAAAAAAABBJQAAAAAAAAAAAABBJQAAAAAAAEIlAAAAAAAAAAAAAEIlAAAAAAAAQyUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAYzsAAAAAAABjOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA8JQAAAAAAADwlAAAAAAAAAAAAAAAA8L8"
						],
						[
							7138,
							1,
							"insert",
							{
								"characters": "np.std"
							},
							"BgAAADQlAAAAAAAANSUAAAAAAAAAAAAANSUAAAAAAAA2JQAAAAAAAAAAAAA2JQAAAAAAADclAAAAAAAAAAAAADclAAAAAAAAOCUAAAAAAAAAAAAAOCUAAAAAAAA5JQAAAAAAAAAAAAA5JQAAAAAAADolAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAajsAAAAAAABqOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA0JQAAAAAAADQlAAAAAAAAAAAAAAAA8L8"
						],
						[
							7148,
							1,
							"insert",
							{
								"characters": "\nprint"
							},
							"BwAAAEcmAAAAAAAASCYAAAAAAAAAAAAASCYAAAAAAABQJgAAAAAAAAAAAABQJgAAAAAAAFEmAAAAAAAAAAAAAFEmAAAAAAAAUiYAAAAAAAAAAAAAUiYAAAAAAABTJgAAAAAAAAAAAABTJgAAAAAAAFQmAAAAAAAAAAAAAFQmAAAAAAAAVSYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAcDsAAAAAAABwOwAAAAAAAAAAAAAAAPC/AQAAAAEAAABHJgAAAAAAAEcmAAAAAAAAAAAAAAAA8L8"
						],
						[
							7149,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAFUmAAAAAAAAVyYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAfjsAAAAAAAB+OwAAAAAAAAAAAAAAAPC/AQAAAAEAAABVJgAAAAAAAFUmAAAAAAAAAAAAAAAA8L8"
						],
						[
							7151,
							1,
							"insert",
							{
								"characters": "combo"
							},
							"BQAAAFYmAAAAAAAAVyYAAAAAAAAAAAAAVyYAAAAAAABYJgAAAAAAAAAAAABYJgAAAAAAAFkmAAAAAAAAAAAAAFkmAAAAAAAAWiYAAAAAAAAAAAAAWiYAAAAAAABbJgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAgDsAAAAAAACAOwAAAAAAAAAAAAAAAPC/AQAAAAEAAABWJgAAAAAAAFYmAAAAAAAAAAAAAAAA8L8"
						],
						[
							7174,
							1,
							"insert",
							{
								"characters": "max"
							},
							"BAAAAHomAAAAAAAAeyYAAAAAAAAAAAAAeyYAAAAAAAB7JgAAAAAAAAMAAABtaW57JgAAAAAAAHwmAAAAAAAAAAAAAHwmAAAAAAAAfSYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAhTsAAAAAAACFOwAAAAAAAAAAAAAAAPC/AQAAAAEAAAB9JgAAAAAAAHomAAAAAAAAAAAAAAAA8L8"
						],
						[
							7189,
							1,
							"insert",
							{
								"characters": "filt"
							},
							"BAAAAJc6AAAAAAAAmDoAAAAAAAAAAAAAmDoAAAAAAACZOgAAAAAAAAAAAACZOgAAAAAAAJo6AAAAAAAAAAAAAJo6AAAAAAAAmzoAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAlzoAAAAAAACXOgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB9JgAAAAAAAH0mAAAAAAAAAAAAAAAA8L8"
						],
						[
							7196,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAABQVAAAAAAAAFRUAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAFBUAAAAAAAAUFQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB9JgAAAAAAAH0mAAAAAAAAAAAAAAAA8L8"
						],
						[
							7197,
							1,
							"insert",
							{
								"characters": "+50"
							},
							"AwAAABUVAAAAAAAAFhUAAAAAAAAAAAAAFhUAAAAAAAAXFQAAAAAAAAAAAAAXFQAAAAAAABgVAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAFRUAAAAAAAAVFQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB+JgAAAAAAAH4mAAAAAAAAAAAAAAAA8L8"
						],
						[
							7198,
							4,
							"left_delete",
							null,
							"BAAAABcVAAAAAAAAFxUAAAAAAAABAAAAMBYVAAAAAAAAFhUAAAAAAAABAAAANRUVAAAAAAAAFRUAAAAAAAABAAAAKxQVAAAAAAAAFBUAAAAAAAABAAAAIA",
							"AgAAAAAAAAABAAAAGBUAAAAAAAAYFQAAAAAAAAAAAAAAAPC/AQAAAAEAAACBJgAAAAAAAIEmAAAAAAAAAAAAAAAA8L8"
						],
						[
							7200,
							1,
							"insert",
							{
								"characters": " +"
							},
							"AgAAAFwUAAAAAAAAXRQAAAAAAAAAAAAAXRQAAAAAAABeFAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAXBQAAAAAAABcFAAAAAAAAAAAAAAAMIFAAQAAAAEAAAB9JgAAAAAAAH0mAAAAAAAAAAAAAAAA8L8"
						],
						[
							7201,
							1,
							"insert",
							{
								"characters": " 50"
							},
							"AwAAAF4UAAAAAAAAXxQAAAAAAAAAAAAAXxQAAAAAAABgFAAAAAAAAAAAAABgFAAAAAAAAGEUAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAXhQAAAAAAABeFAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB/JgAAAAAAAH8mAAAAAAAAAAAAAAAA8L8"
						],
						[
							7208,
							1,
							"insert",
							{
								"characters": "min"
							},
							"BAAAAH8mAAAAAAAAgCYAAAAAAAAAAAAAgCYAAAAAAACAJgAAAAAAAAMAAABtYXiAJgAAAAAAAIEmAAAAAAAAAAAAAIEmAAAAAAAAgiYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAABhQAAAAAAAAGFAAAAAAAAAAAAAAAAPC/AQAAAAEAAACCJgAAAAAAAH8mAAAAAAAAAAAAAAAA8L8"
						],
						[
							7217,
							1,
							"insert",
							{
								"characters": "2"
							},
							"AgAAAHkmAAAAAAAAeiYAAAAAAAAAAAAAeiYAAAAAAAB6JgAAAAAAAAEAAAAx",
							"AgAAAAAAAAABAAAABhQAAAAAAAAGFAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB6JgAAAAAAAHkmAAAAAAAAAAAAAAAA8L8"
						],
						[
							7225,
							1,
							"insert",
							{
								"characters": "1"
							},
							"AgAAAHkmAAAAAAAAeiYAAAAAAAAAAAAAeiYAAAAAAAB6JgAAAAAAAAEAAAAy",
							"AgAAAAAAAAABAAAABhQAAAAAAAAGFAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB6JgAAAAAAAHkmAAAAAAAAAAAAAAAA8L8"
						],
						[
							7228,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAOwkAAAAAAAA7iQAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAABhQAAAAAAAAGFAAAAAAAAAAAAAAAAPC/AQAAAAEAAAD9JAAAAAAAAP0kAAAAAAAAAAAAAABAb0A"
						],
						[
							7237,
							1,
							"insert",
							{
								"characters": "ax"
							},
							"AwAAAIEmAAAAAAAAgiYAAAAAAAAAAAAAgiYAAAAAAACCJgAAAAAAAAMAAABtaW6CJgAAAAAAAIMmAAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAABhQAAAAAAAAGFAAAAAAAAAAAAAAAAPC/AQAAAAEAAACEJgAAAAAAAIEmAAAAAAAAAAAAAAAA8L8"
						],
						[
							7243,
							1,
							"insert",
							{
								"characters": "m"
							},
							"AQAAAIEmAAAAAAAAgiYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAABhQAAAAAAAAGFAAAAAAAAAAAAAAAAPC/AQAAAAEAAACBJgAAAAAAAIEmAAAAAAAAAAAAAAAA8L8"
						],
						[
							7261,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"MAAAAKVDAAAAAAAApUMAAAAAAAACAAAAIyB3QwAAAAAAAHdDAAAAAAAAAgAAACMgSUMAAAAAAABJQwAAAAAAAAIAAAAjIBBDAAAAAAAAEEMAAAAAAAACAAAAIyDUQgAAAAAAANRCAAAAAAAAAgAAACMgm0IAAAAAAACbQgAAAAAAAAIAAAAjIF9CAAAAAAAAX0IAAAAAAAACAAAAIyAuQgAAAAAAAC5CAAAAAAAAAgAAACMg60EAAAAAAADrQQAAAAAAAAIAAAAjINFBAAAAAAAA0UEAAAAAAAACAAAAIyC7QQAAAAAAALtBAAAAAAAAAgAAACMgpUEAAAAAAAClQQAAAAAAAAIAAAAjIItBAAAAAAAAi0EAAAAAAAACAAAAIyBxQQAAAAAAAHFBAAAAAAAAAgAAACMgZUEAAAAAAABlQQAAAAAAAAIAAAAjIElBAAAAAAAASUEAAAAAAAACAAAAIyAuQQAAAAAAAC5BAAAAAAAAAgAAACMgE0EAAAAAAAATQQAAAAAAAAIAAAAjIPtAAAAAAAAA+0AAAAAAAAACAAAAIyDHQAAAAAAAAMdAAAAAAAAAAgAAACMgr0AAAAAAAACvQAAAAAAAAAIAAAAjIJJAAAAAAAAAkkAAAAAAAAACAAAAIyBqQAAAAAAAAGpAAAAAAAAAAgAAACMgUEAAAAAAAABQQAAAAAAAAAIAAAAjIDFAAAAAAAAAMUAAAAAAAAACAAAAIyAbQAAAAAAAABtAAAAAAAAAAgAAACMgBUAAAAAAAAAFQAAAAAAAAAIAAAAjIPI/AAAAAAAA8j8AAAAAAAACAAAAIyDdPwAAAAAAAN0/AAAAAAAAAgAAACMgxj8AAAAAAADGPwAAAAAAAAIAAAAjIKs/AAAAAAAAqz8AAAAAAAACAAAAIyCHPwAAAAAAAIc/AAAAAAAAAgAAACMgXz8AAAAAAABfPwAAAAAAAAIAAAAjIDo/AAAAAAAAOj8AAAAAAAACAAAAIyAcPwAAAAAAABw/AAAAAAAAAgAAACMgGD8AAAAAAAAYPwAAAAAAAAIAAAAjIA8/AAAAAAAADz8AAAAAAAACAAAAIyDzPgAAAAAAAPM+AAAAAAAAAgAAACMg4z4AAAAAAADjPgAAAAAAAAIAAAAjIME+AAAAAAAAwT4AAAAAAAACAAAAIyCgPgAAAAAAAKA+AAAAAAAAAgAAACMgfz4AAAAAAAB/PgAAAAAAAAIAAAAjIHU+AAAAAAAAdT4AAAAAAAACAAAAIyBpPgAAAAAAAGk+AAAAAAAAAgAAACMgZD4AAAAAAABkPgAAAAAAAAIAAAAjIBc+AAAAAAAAFz4AAAAAAAACAAAAIyD5PQAAAAAAAPk9AAAAAAAAAgAAACMg4T0AAAAAAADhPQAAAAAAAAIAAAAjIA",
							"AgAAAAAAAAABAAAA1kMAAAAAAADhPQAAAAAAAAAAAAAAAPC/AQAAAAEAAACGJgAAAAAAAIYmAAAAAAAAAAAAAAAA8L8"
						],
						[
							7275,
							1,
							"insert",
							{
								"characters": "min"
							},
							"BAAAAIEmAAAAAAAAgiYAAAAAAAAAAAAAgiYAAAAAAACCJgAAAAAAAAMAAABtYXiCJgAAAAAAAIMmAAAAAAAAAAAAAIMmAAAAAAAAhCYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAA9j0AAAAAAAD2PQAAAAAAAAAAAAAAAPC/AQAAAAEAAACEJgAAAAAAAIEmAAAAAAAAAAAAAAAA8L8"
						],
						[
							7292,
							4,
							"left_delete",
							null,
							"BAAAAGAUAAAAAAAAYBQAAAAAAAABAAAAMF8UAAAAAAAAXxQAAAAAAAABAAAANV4UAAAAAAAAXhQAAAAAAAABAAAAIF0UAAAAAAAAXRQAAAAAAAABAAAAKw",
							"AgAAAAAAAAABAAAA9j0AAAAAAAD2PQAAAAAAAAAAAAAAAPC/AQAAAAEAAABhFAAAAAAAAGEUAAAAAAAAAAAAAAAA8L8"
						],
						[
							7303,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AgAAAFMmAAAAAAAAVSYAAAAAAAAAAAAAjSYAAAAAAACPJgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAnT8AAAAAAACdPwAAAAAAAAAAAAAAAPC/AQAAAAIAAABfJgAAAAAAAF8mAAAAAAAAAAAAAAAA8L+YJgAAAAAAAJgmAAAAAAAAAAAAAAAA8L8"
						]
					]
				},
				{
					"contents": "\n\n\n\n\n\n\nError: TypeError, VV() missing 1 required positional argument: '_in'.\n            \nTraceback:\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/3360801197.py in <module>\n      7     analog=False,\n      8 )\n----> 9 eye = Eye(filt)\n     10 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/2770583297.py in __init__(self, _filt)\n     22         self.xline = None\n     23         self.yline = None\n---> 24         self.gen_plt_data(_top, _bot)\n     25         print(self.scatter.keys())\n     26 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/2770583297.py in gen_plt_data(self, top, bot)\n     39         self.plot[\"signal\"] = np.stack([[self.t, top], [self.t, bot]], axis=2)\n     40         self.init_points(top, bot)\n---> 41         self.scan(self.plot[\"signal\"])\n     42     #%%\n     43 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/2770583297.py in scan(self, h_eye)\n     75         #             break\n     76         # for x,_,_ in intersects:\n---> 77         vv = VV()\n     78         w_range = max( vv.shape)\n     79         w_interval = w_range // SAMPLES\n\nTypeError: VV() missing 1 required positional argument: '_in'\n\n\n\n\n(stdout):\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n(stdout):\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n(stdout):\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n\n\n(stdout):\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n(stdout):\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n(stdout):\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n\n\n(stdout):\n0\n1\n2\n1\n2\n1\n2\n1\n2\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n1\n2\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n1\n2\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n1\n2\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n1\n2\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n1\n2\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n(stdout):\n\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n1\n2\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n1\n2\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n\n(stdout):\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n1\n2\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n(stdout):\n\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n1\n2\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n1\n\n(stdout):\n2\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n1\n2\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n(stdout):\n\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n1\n2\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n\n(stdout):\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n1\n2\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n(stdout):\n\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n1\n2\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n(stdout):\n\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n1\n2\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n(stdout):\n\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n\n(stdout):\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n1\n2\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n(stdout):\n\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n1\n2\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n\n(stdout):\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n1\n2\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n\n(stdout):\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n\n(stdout):\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n1\n2\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n(stdout):\n\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n(stdout):\n\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n1\n2\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n(stdout):\n\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n1\n2\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n(stdout):\n\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n\n(stdout):\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n1\n2\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n\n(stdout):\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n(stdout):\n\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n1\n2\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n\n(stdout):\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n(stdout):\n\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n1\n2\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n\n(stdout):\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n1\n2\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n(stdout):\n\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n(stdout):\n\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n(stdout):\n\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n1\n2\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n\n(stdout):\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n(stdout):\n\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n\nError: KeyboardInterrupt, .\n            \nTraceback:\n---------------------------------------------------------------------------\nKeyboardInterrupt                         Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/3360801197.py in <module>\n      7     analog=False,\n      8 )\n----> 9 eye = Eye(filt)\n     10 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/3835740586.py in __init__(self, _filt)\n     22         self.xline = None\n     23         self.yline = None\n---> 24         self.gen_plt_data(_top, _bot)\n     25         print(self.scatter.keys())\n     26 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/3835740586.py in gen_plt_data(self, top, bot)\n     39         self.plot[\"signal\"] = np.stack([[self.t, top], [self.t, bot]], axis=2)\n     40         self.init_points(top, bot)\n---> 41         self.scan(self.plot[\"signal\"])\n     42     #%%\n     43 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/3835740586.py in scan(self, h_eye)\n     90                     print(2)\n     91                     for x_loc2 in range(x_loc, SAMPLES, -1):\n---> 92                         print(3)\n     93                         if 0.99 * y_val < vv[1][x_loc] < y_val * 1.01:\n     94                             print(4)\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ipykernel/iostream.py in write(self, string)\n    517             is_child = (not self._is_master_process())\n    518             # only touch the buffer in the IO thread to avoid races\n--> 519             self.pub_thread.schedule(lambda: self._buffer.write(string))\n    520             if is_child:\n    521                 # mp.Pool cannot be trusted to flush promptly (or ever),\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ipykernel/iostream.py in schedule(self, f)\n    212             self._events.append(f)\n    213             # wake event thread (message content is ignored)\n--> 214             self._event_pipe.send(b'')\n    215         else:\n    216             f()\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/zmq/sugar/socket.py in send(self, data, flags, copy, track, routing_id, group)\n    539                 )\n    540             data.group = group\n--> 541         return super(Socket, self).send(data, flags=flags, copy=copy, track=track)\n    542 \n    543     def send_multipart(self, msg_parts, flags=0, copy=True, track=False, **kwargs):\n\nzmq/backend/cython/socket.pyx in zmq.backend.cython.socket.Socket.send()\n\nzmq/backend/cython/socket.pyx in zmq.backend.cython.socket.Socket.send()\n\nzmq/backend/cython/socket.pyx in zmq.backend.cython.socket._send_copy()\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/zmq/backend/cython/checkrc.pxd in zmq.backend.cython.checkrc._check_rc()\n\nKeyboardInterrupt: \n\n\n\n\n(stdout):\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n\n\n(stdout):\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\nError: SyntaxError, invalid syntax (634939732.py, line 82).\n            \nTraceback:\n  File \"/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/634939732.py\", line 82\n    vxy = SortedArray(vxy, index = i_maxh).array//[::-1]\n                                                   ^\nSyntaxError: invalid syntax\n\n\n\n\n\n(stdout):\n> \u001b[0;32m/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/2704545193.py\u001b[0m(88)\u001b[0;36mscan\u001b[0;34m()\u001b[0m\n\u001b[0;32m     86 \u001b[0;31m            \u001b[0;32mfor\u001b[0m \u001b[0mx_loc\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mi_maxh\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mw_range\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mw_interval\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     87 \u001b[0;31m                \u001b[0;32mimport\u001b[0m \u001b[0mpdb\u001b[0m\u001b[0;34m;\u001b[0m \u001b[0mpdb\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_trace\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# breakpoint 0f808191 //\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m---> 88 \u001b[0;31m                \u001b[0;32mif\u001b[0m \u001b[0mvv\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mx_loc\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0my_val\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     89 \u001b[0;31m                    \u001b[0;32mfor\u001b[0m \u001b[0mx_loc2\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx_loc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mSAMPLES\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     90 \u001b[0;31m                        \u001b[0;32mif\u001b[0m \u001b[0;36m0.99\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0my_val\u001b[0m \u001b[0;34m<\u001b[0m \u001b[0mvv\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mx_loc\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m<\u001b[0m \u001b[0my_val\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0;36m1.01\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\n\n(stdout):\n2.0\n\n(stdout):\n2.0\n\n(stdout):\n2.0\n\n(stdout):\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n(display data): <matplotlib.collections.PathCollection at 0x7fb549264910>\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\n(display data): 1956\n\n\n(display data): 1141\n\n\n(display data): 954\n\n\n(display data): 1.7157894736842105\n\n\nError: TypeError, scatter() got multiple values for argument 'c'.\n            \nTraceback:\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/1658103794.py in <module>\n     15 # ax.scatter(*vxy, c=cc)\n     16 \n---> 17 ax.scatter(*vv, c=cc)\n     18 # ax.scatter(*vv_, c=cc_, cmap=\"Reds\")\n     19 # ax.plot(*vxyc)\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/matplotlib/__init__.py in inner(ax, data, *args, **kwargs)\n   1359     def inner(ax, *args, data=None, **kwargs):\n   1360         if data is None:\n-> 1361             return func(ax, *map(sanitize_sequence, args), **kwargs)\n   1362 \n   1363         bound = new_sig.bind(ax, *args, **kwargs)\n\nTypeError: scatter() got multiple values for argument 'c'\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\nError: TypeError, scatter() got multiple values for argument 'c'.\n            \nTraceback:\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/2975329836.py in <module>\n     15 # ax.scatter(*vxy, c=cc)\n     16 \n---> 17 ax.scatter(*vv[0], c=cc)\n     18 ax.scatter(*vv[1], c=cc)\n     19 # ax.scatter(*vv_, c=cc_, cmap=\"Reds\")\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/matplotlib/__init__.py in inner(ax, data, *args, **kwargs)\n   1359     def inner(ax, *args, data=None, **kwargs):\n   1360         if data is None:\n-> 1361             return func(ax, *map(sanitize_sequence, args), **kwargs)\n   1362 \n   1363         bound = new_sig.bind(ax, *args, **kwargs)\n\nTypeError: scatter() got multiple values for argument 'c'\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\n(stdout):\n(4, 14791)\n\n\n\n(stdout):\n[[  5.23   5.35   5.35   5.35   5.35 ...  29.18  29.18  29.18  29.18\n   29.3 ]\n [ 29.3   29.18  29.18  29.18  29.18 ...   5.35   5.35   5.35   5.35\n    5.23]\n [109.9  110.39 110.39 110.39 110.39 ...  43.98  43.98  43.98  43.98\n   42.5 ]\n [ 42.31  42.3   42.3   42.3   42.3  ... 108.93 108.93 108.93 108.93\n  110.55]]\n\n\n\n(stdout):\n[[  5.23   5.35   5.35   5.35   5.35 ...  29.18  29.18  29.18  29.18\n   29.3 ]\n [ 29.3   29.18  29.18  29.18  29.18 ...   5.35   5.35   5.35   5.35\n    5.23]\n [109.9  110.39 110.39 110.39 110.39 ...  43.98  43.98  43.98  43.98\n   42.5 ]\n [ 42.31  42.3   42.3   42.3   42.3  ... 108.93 108.93 108.93 108.93\n  110.55]]\n\n\n\nError: TypeError, scatter() got multiple values for argument 'c'.\n            \nTraceback:\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/2975329836.py in <module>\n     15 # ax.scatter(*vxy, c=cc)\n     16 \n---> 17 ax.scatter(*vv[0], c=cc)\n     18 ax.scatter(*vv[1], c=cc)\n     19 # ax.scatter(*vv_, c=cc_, cmap=\"Reds\")\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/matplotlib/__init__.py in inner(ax, data, *args, **kwargs)\n   1359     def inner(ax, *args, data=None, **kwargs):\n   1360         if data is None:\n-> 1361             return func(ax, *map(sanitize_sequence, args), **kwargs)\n   1362 \n   1363         bound = new_sig.bind(ax, *args, **kwargs)\n\nTypeError: scatter() got multiple values for argument 'c'\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\n(stdout):\n[[  5.23   5.35   5.35   5.35   5.35 ...  29.18  29.18  29.18  29.18\n   29.3 ]\n [ 29.3   29.18  29.18  29.18  29.18 ...   5.35   5.35   5.35   5.35\n    5.23]\n [109.9  110.39 110.39 110.39 110.39 ...  43.98  43.98  43.98  43.98\n   42.5 ]\n [ 42.31  42.3   42.3   42.3   42.3  ... 108.93 108.93 108.93 108.93\n  110.55]]\n\n\n\n(stdout):\n[[  5.23   5.35   5.35   5.35   5.35 ...  29.18  29.18  29.18  29.18\n   29.3 ]\n [ 29.3   29.18  29.18  29.18  29.18 ...   5.35   5.35   5.35   5.35\n    5.23]\n [109.9  110.39 110.39 110.39 110.39 ...  43.98  43.98  43.98  43.98\n   42.5 ]\n [ 42.31  42.3   42.3   42.3   42.3  ... 108.93 108.93 108.93 108.93\n  110.55]]\n\n\n\n(stdout):\n[[  5.23   5.35   5.35   5.35   5.35 ...  29.18  29.18  29.18  29.18\n   29.3 ]\n [ 29.3   29.18  29.18  29.18  29.18 ...   5.35   5.35   5.35   5.35\n    5.23]\n [109.9  110.39 110.39 110.39 110.39 ...  43.98  43.98  43.98  43.98\n   42.5 ]\n [ 42.31  42.3   42.3   42.3   42.3  ... 108.93 108.93 108.93 108.93\n  110.55]]\n\n\n\n(stdout):\n[[  5.23   5.35   5.35   5.35   5.35 ...  29.18  29.18  29.18  29.18\n   29.3 ]\n [ 29.3   29.18  29.18  29.18  29.18 ...   5.35   5.35   5.35   5.35\n    5.23]\n [109.9  110.39 110.39 110.39 110.39 ...  43.98  43.98  43.98  43.98\n   42.5 ]\n [ 42.31  42.3   42.3   42.3   42.3  ... 108.93 108.93 108.93 108.93\n  110.55]]\n\n\n\n(stdout):\n[[  5.23   5.35   5.35   5.35   5.35 ...  29.18  29.18  29.18  29.18\n   29.3 ]\n [ 29.3   29.18  29.18  29.18  29.18 ...   5.35   5.35   5.35   5.35\n    5.23]\n [109.9  110.39 110.39 110.39 110.39 ...  43.98  43.98  43.98  43.98\n   42.5 ]\n [ 42.31  42.3   42.3   42.3   42.3  ... 108.93 108.93 108.93 108.93\n  110.55]]\n\n\n\n(stdout):\n[[  5.23   5.35   5.35   5.35   5.35 ...  29.18  29.18  29.18  29.18\n   29.3 ]\n [ 12.64  12.28  12.4   12.52  12.64 ...  21.27  21.4   21.52  21.64\n   21.76]\n [109.9  110.39 110.39 110.39 110.39 ...  43.98  43.98  43.98  43.98\n   42.5 ]\n [  0.     0.37   0.14   0.02   0.   ... 121.59 121.87 122.05 122.13\n  122.11]]\n\n\n\n(stdout):\n[[  5.23   5.35   5.35   5.35   5.35 ...  29.18  29.18  29.18  29.18\n   29.3 ]\n [ 29.3   29.18  29.18  29.18  29.18 ...   5.35   5.35   5.35   5.35\n    5.23]\n [109.9  110.39 110.39 110.39 110.39 ...  43.98  43.98  43.98  43.98\n   42.5 ]\n [ 42.31  42.3   42.3   42.3   42.3  ... 108.93 108.93 108.93 108.93\n  110.55]]\n\n\n\n(stdout):\n[[  5.23   5.35   5.35   5.35   5.35 ...  29.18  29.18  29.18  29.18\n   29.3 ]\n [109.9  110.39 110.39 110.39 110.39 ...  43.98  43.98  43.98  43.98\n   42.5 ]\n [ 29.3   29.18  29.18  29.18  29.18 ...   5.35   5.35   5.35   5.35\n    5.23]\n [ 42.31  42.3   42.3   42.3   42.3  ... 108.93 108.93 108.93 108.93\n  110.55]]\n\n\n\n(stdout):\n[[  5.23   5.35   5.35   5.35   5.35 ...  29.18  29.18  29.18  29.18\n   29.3 ]\n [109.9  110.39 110.39 110.39 110.39 ...  43.98  43.98  43.98  43.98\n   42.5 ]\n [ 29.3   29.18  29.18  29.18  29.18 ...   5.35   5.35   5.35   5.35\n    5.23]\n [ 42.31  42.3   42.3   42.3   42.3  ... 108.93 108.93 108.93 108.93\n  110.55]]\n\n\n\n(stdout):\n[[  5.23   5.35   5.35   5.35   5.35 ...  29.18  29.18  29.18  29.18\n   29.3 ]\n [109.9  110.39 110.39 110.39 110.39 ...  43.98  43.98  43.98  43.98\n   42.5 ]\n [  5.23   5.35   5.35   5.35   5.35 ...  29.18  29.18  29.18  29.18\n   29.3 ]\n [110.55 108.93 108.93 108.93 108.93 ...  42.3   42.3   42.3   42.3\n   42.31]]\n\n\n\nError: TypeError, scatter() got multiple values for argument 'c'.\n            \nTraceback:\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/2975329836.py in <module>\n     15 # ax.scatter(*vxy, c=cc)\n     16 \n---> 17 ax.scatter(*vv[0], c=cc)\n     18 ax.scatter(*vv[1], c=cc)\n     19 # ax.scatter(*vv_, c=cc_, cmap=\"Reds\")\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/matplotlib/__init__.py in inner(ax, data, *args, **kwargs)\n   1359     def inner(ax, *args, data=None, **kwargs):\n   1360         if data is None:\n-> 1361             return func(ax, *map(sanitize_sequence, args), **kwargs)\n   1362 \n   1363         bound = new_sig.bind(ax, *args, **kwargs)\n\nTypeError: scatter() got multiple values for argument 'c'\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\nError: ValueError, max() arg is an empty sequence.\n            \nTraceback:\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/337350402.py in <module>\n      1 vv = VV(eye.plot[\"eye\"])\n----> 2 cc =list(range(max(vv[0][0].shape)))\n      3 # cc_ =list(range(max(vv_.shape)))\n      4 fig = plt.figure(figsize=[10, 5], dpi=500)\n      5 ax = plt.axes()\n\nValueError: max() arg is an empty sequence\n\n\nError: TypeError, scatter() got multiple values for argument 'c'.\n            \nTraceback:\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/2975329836.py in <module>\n     15 # ax.scatter(*vxy, c=cc)\n     16 \n---> 17 ax.scatter(*vv[0], c=cc)\n     18 ax.scatter(*vv[1], c=cc)\n     19 # ax.scatter(*vv_, c=cc_, cmap=\"Reds\")\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/matplotlib/__init__.py in inner(ax, data, *args, **kwargs)\n   1359     def inner(ax, *args, data=None, **kwargs):\n   1360         if data is None:\n-> 1361             return func(ax, *map(sanitize_sequence, args), **kwargs)\n   1362 \n   1363         bound = new_sig.bind(ax, *args, **kwargs)\n\nTypeError: scatter() got multiple values for argument 'c'\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\n(stdout):\nn\nError: TypeError, scatter() missing 1 required positional argument: 'y'.\n            \nTraceback:\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/3435486271.py in <module>\n     16 # ax.scatter(*vxy, c=cc)\n     17 \n---> 18 ax.scatter(vv[0], c=cc)\n     19 ax.scatter(vv[1], c=cc)\n     20 # ax.scatter(*vv_, c=cc_, cmap=\"Reds\")\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/matplotlib/__init__.py in inner(ax, data, *args, **kwargs)\n   1359     def inner(ax, *args, data=None, **kwargs):\n   1360         if data is None:\n-> 1361             return func(ax, *map(sanitize_sequence, args), **kwargs)\n   1362 \n   1363         bound = new_sig.bind(ax, *args, **kwargs)\n\nTypeError: scatter() missing 1 required positional argument: 'y'\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\n(stdout):\nn\nError: TypeError, scatter() got multiple values for argument 'c'.\n            \nTraceback:\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/3206145193.py in <module>\n     16 # ax.scatter(*vxy, c=cc)\n     17 \n---> 18 ax.scatter(*vv[0], c=cc)\n     19 ax.scatter(*vv[1], c=cc)\n     20 # ax.scatter(*vv_, c=cc_, cmap=\"Reds\")\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/matplotlib/__init__.py in inner(ax, data, *args, **kwargs)\n   1359     def inner(ax, *args, data=None, **kwargs):\n   1360         if data is None:\n-> 1361             return func(ax, *map(sanitize_sequence, args), **kwargs)\n   1362 \n   1363         bound = new_sig.bind(ax, *args, **kwargs)\n\nTypeError: scatter() got multiple values for argument 'c'\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\n(stdout):\n[    0     1     2     3     4 ... 14786 14787 14788 14789 14790]\n\nError: TypeError, scatter() got multiple values for argument 'c'.\n            \nTraceback:\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/1804935648.py in <module>\n     16 # ax.scatter(*vxy, c=cc)\n     17 \n---> 18 ax.scatter(*vv[0], c=cc)\n     19 ax.scatter(*vv[1], c=cc)\n     20 # ax.scatter(*vv_, c=cc_, cmap=\"Reds\")\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/matplotlib/__init__.py in inner(ax, data, *args, **kwargs)\n   1359     def inner(ax, *args, data=None, **kwargs):\n   1360         if data is None:\n-> 1361             return func(ax, *map(sanitize_sequence, args), **kwargs)\n   1362 \n   1363         bound = new_sig.bind(ax, *args, **kwargs)\n\nTypeError: scatter() got multiple values for argument 'c'\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\n(stdout):\n[    0     1     2     3     4 ... 14786 14787 14788 14789 14790]\n\nError: TypeError, scatter() got multiple values for argument 'c'.\n            \nTraceback:\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/3944495079.py in <module>\n     16 # ax.scatter(*vxy, c=cc)\n     17 \n---> 18 ax.scatter(*vv[0], c=cc)\n     19 ax.scatter(*vv[1], c=cc)\n     20 # ax.scatter(*vv_, c=cc_, cmap=\"Reds\")\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/matplotlib/__init__.py in inner(ax, data, *args, **kwargs)\n   1359     def inner(ax, *args, data=None, **kwargs):\n   1360         if data is None:\n-> 1361             return func(ax, *map(sanitize_sequence, args), **kwargs)\n   1362 \n   1363         bound = new_sig.bind(ax, *args, **kwargs)\n\nTypeError: scatter() got multiple values for argument 'c'\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\n(stdout):\n[    0     1     2     3     4 ... 29577 29578 29579 29580 29581]\n\nError: TypeError, scatter() got multiple values for argument 'c'.\n            \nTraceback:\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/1926359306.py in <module>\n     16 # ax.scatter(*vxy, c=cc)\n     17 \n---> 18 ax.scatter(*vv[0], c=cc)\n     19 ax.scatter(*vv[1], c=cc)\n     20 # ax.scatter(*vv_, c=cc_, cmap=\"Reds\")\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/matplotlib/__init__.py in inner(ax, data, *args, **kwargs)\n   1359     def inner(ax, *args, data=None, **kwargs):\n   1360         if data is None:\n-> 1361             return func(ax, *map(sanitize_sequence, args), **kwargs)\n   1362 \n   1363         bound = new_sig.bind(ax, *args, **kwargs)\n\nTypeError: scatter() got multiple values for argument 'c'\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\nError: TypeError, scatter() got multiple values for argument 'c'.\n            \nTraceback:\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/2674779671.py in <module>\n     16 # ax.scatter(*vxy, c=cc)\n     17 \n---> 18 ax.scatter(*vv[0], c=cc)\n     19 ax.scatter(*vv[1], c=cc)\n     20 # ax.scatter(*vv_, c=cc_, cmap=\"Reds\")\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/matplotlib/__init__.py in inner(ax, data, *args, **kwargs)\n   1359     def inner(ax, *args, data=None, **kwargs):\n   1360         if data is None:\n-> 1361             return func(ax, *map(sanitize_sequence, args), **kwargs)\n   1362 \n   1363         bound = new_sig.bind(ax, *args, **kwargs)\n\nTypeError: scatter() got multiple values for argument 'c'\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\n(display data): <matplotlib.collections.PathCollection at 0x7fb5782c12b0>\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\nError: TypeError, scatter() got multiple values for argument 'c'.\n            \nTraceback:\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/2297936066.py in <module>\n     16 # ax.scatter(*vxy, c=cc)\n     17 \n---> 18 ax.scatter(*vv, c=cc)\n     19 # ax.scatter(*vv, c=cc)\n     20 # ax.scatter(*vv_, c=cc_, cmap=\"Reds\")\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/matplotlib/__init__.py in inner(ax, data, *args, **kwargs)\n   1359     def inner(ax, *args, data=None, **kwargs):\n   1360         if data is None:\n-> 1361             return func(ax, *map(sanitize_sequence, args), **kwargs)\n   1362 \n   1363         bound = new_sig.bind(ax, *args, **kwargs)\n\nTypeError: scatter() got multiple values for argument 'c'\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\nError: TypeError, scatter() got multiple values for argument 'c'.\n            \nTraceback:\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/3427623594.py in <module>\n     16 # ax.scatter(*vxy, c=cc)\n     17 \n---> 18 ax.scatter(*vv[0], c=cc)\n     19 # ax.scatter(*vv, c=cc)\n     20 # ax.scatter(*vv_, c=cc_, cmap=\"Reds\")\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/matplotlib/__init__.py in inner(ax, data, *args, **kwargs)\n   1359     def inner(ax, *args, data=None, **kwargs):\n   1360         if data is None:\n-> 1361             return func(ax, *map(sanitize_sequence, args), **kwargs)\n   1362 \n   1363         bound = new_sig.bind(ax, *args, **kwargs)\n\nTypeError: scatter() got multiple values for argument 'c'\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\n(stdout):\n[[  5.23   5.35   5.35   5.35   5.35 ...  29.18  29.18  29.18  29.18\n   29.3 ]\n [109.9  110.39 110.39 110.39 110.39 ...  43.98  43.98  43.98  43.98\n   42.5 ]\n [  5.23   5.35   5.35   5.35   5.35 ...  29.18  29.18  29.18  29.18\n   29.3 ]\n [110.55 108.93 108.93 108.93 108.93 ...  42.3   42.3   42.3   42.3\n   42.31]]\n\n\n\n(stdout):\n[ 5.23  5.35  5.35  5.35  5.35 ... 29.18 29.18 29.18 29.18 29.3 ]\n\n\n\n(stdout):\n[109.9  110.39 110.39 110.39 110.39 ...  43.98  43.98  43.98  43.98  42.5 ]\n\n\n\n(stdout):\n[[ 5.23  5.35  5.35  5.35  5.35 ... 29.18 29.18 29.18 29.18 29.3 ]]\n\n\n\n(display data): <matplotlib.collections.PathCollection at 0x7fb569ee5460>\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\n(stdout):\n[[ 5.23  5.35  5.35  5.35  5.35 ... 29.18 29.18 29.18 29.18 29.3 ]]\n\n\n\n(display data): <matplotlib.collections.PathCollection at 0x7fb549618340>\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\n(stdout):\n[[ 5.23  5.35  5.35  5.35  5.35 ... 29.18 29.18 29.18 29.18 29.3 ]]\n\n\n\n(stdout):\n[[  5.23   5.35   5.35   5.35   5.35 ...  29.18  29.18  29.18  29.18\n   29.3 ]\n [109.9  110.39 110.39 110.39 110.39 ...  43.98  43.98  43.98  43.98\n   42.5 ]\n [  5.23   5.35   5.35   5.35   5.35 ...  29.18  29.18  29.18  29.18\n   29.3 ]\n [110.55 108.93 108.93 108.93 108.93 ...  42.3   42.3   42.3   42.3\n   42.31]]\n\n\n\n(stdout):\n[[  5.23   5.35   5.35   5.35   5.35 ...  29.18  29.18  29.18  29.18\n   29.3 ]\n [109.9  110.39 110.39 110.39 110.39 ...  43.98  43.98  43.98  43.98\n   42.5 ]\n [  5.23   5.35   5.35   5.35   5.35 ...  29.18  29.18  29.18  29.18\n   29.3 ]\n [110.55 108.93 108.93 108.93 108.93 ...  42.3   42.3   42.3   42.3\n   42.31]]\n[[  5.23   5.35   5.35   5.35   5.35 ...   5.35   5.35   5.35   5.35\n    5.23]\n [109.9  110.39 110.39 110.39 110.39 ... 108.93 108.93 108.93 108.93\n  110.55]]\n\n\n\n(stdout):\n[[[  5.23   5.35   5.35   5.35   5.35 ...  29.18  29.18  29.18  29.18\n    29.3 ]\n  [109.9  110.39 110.39 110.39 110.39 ...  43.98  43.98  43.98  43.98\n    42.5 ]]\n\n [[  5.23   5.35   5.35   5.35   5.35 ...  29.18  29.18  29.18  29.18\n    29.3 ]\n  [110.55 108.93 108.93 108.93 108.93 ...  42.3   42.3   42.3   42.3\n    42.31]]]\n[[  5.23   5.35   5.35   5.35   5.35 ...   5.35   5.35   5.35   5.35\n    5.23]\n [109.9  110.39 110.39 110.39 110.39 ... 108.93 108.93 108.93 108.93\n  110.55]]\n\n\n\n(display data): <matplotlib.collections.PathCollection at 0x7fb549b03370>\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\nError: ValueError, object too deep for desired array.\n            \nTraceback:\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/103116178.py in <module>\n      1 vv = VV(eye.plot[\"eye\"])\n----> 2 np.searchsorted(vv, 12)\n\n<__array_function__ internals> in searchsorted(*args, **kwargs)\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/numpy/core/fromnumeric.py in searchsorted(a, v, side, sorter)\n   1348 \n   1349     \"\"\"\n-> 1350     return _wrapfunc(a, 'searchsorted', v, side=side, sorter=sorter)\n   1351 \n   1352 \n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/numpy/core/fromnumeric.py in _wrapfunc(obj, method, *args, **kwds)\n     55 \n     56     try:\n---> 57         return bound(*args, **kwds)\n     58     except TypeError:\n     59         # A TypeError occurs if the object does have such a method in its\n\nValueError: object too deep for desired array\n\n\nError: ValueError, object too deep for desired array.\n            \nTraceback:\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/172197504.py in <module>\n      1 vv = VV(eye.plot[\"eye\"])\n----> 2 np.searchsorted(vv[0], 12)\n\n<__array_function__ internals> in searchsorted(*args, **kwargs)\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/numpy/core/fromnumeric.py in searchsorted(a, v, side, sorter)\n   1348 \n   1349     \"\"\"\n-> 1350     return _wrapfunc(a, 'searchsorted', v, side=side, sorter=sorter)\n   1351 \n   1352 \n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/numpy/core/fromnumeric.py in _wrapfunc(obj, method, *args, **kwds)\n     55 \n     56     try:\n---> 57         return bound(*args, **kwds)\n     58     except TypeError:\n     59         # A TypeError occurs if the object does have such a method in its\n\nValueError: object too deep for desired array\n\n\n(display data): 6133\n\n\nError: TypeError, 'numpy.ndarray' object is not callable.\n            \nTraceback:\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/3474723655.py in <module>\n      1 vv = VV(eye.plot[\"eye\"])\n----> 2 vv(np.searchsorted(vv[0][0], 12))\n\nTypeError: 'numpy.ndarray' object is not callable\n\n\n(display data): 12.035294117647059\n\n\n(display data): 12.035294117647059\n\n\n(display data): 11.913725490196079\n\n\n(display data): 12.035294117647059\n\n\n(display data): 12.035294117647059\n\n\n(display data): 12.035294117647059\n\n\n(display data): 12.035294117647059\n\n\n(display data): 12.035294117647059\n\n\n(display data): 12.64313725490196\n\n\n(display data): 12.156862745098039\n\n\n(display data): 12.156862745098039\n\n\n(display data): 12.035294117647059\n\n\n(stdout):\n12.035294117647059\n12.035294117647059\n\n\n\n(stdout):\n12.035294117647059\n12.035294117647059\n\n\n\n(stdout):\n[]\n[]\n\n\n\n(stdout):\n[]\n[]\n\n\n\n(stdout):\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n[]\n[]\n\n\n\n(stdout):\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n[5, 6, 7, 8, 9]\n[]\n\n\n\n(stdout):\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n[5, 6, 7, 8, 9]\n[9]\n\n\n\n(stdout):\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n[5, 6, 7, 8, 9]\n[]\n\n\n\n(stdout):\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n[5, 6, 7, 8, 9]\n[]\n\n\n\n(stdout):\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n[5, 6, 7, 8, 9]\n[5, 4, 3, 2, 1]\n\n\n\n(stdout):\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n[5, 6, 7, 8, 9]\n[5, 4, 3, 2, 1, 0]\n\n\n\n(stdout):\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n[5, 6, 7, 8, 9]\n[4, 3, 2, 1, 0]\n\n\n\n(display data): 8\n\n\n(stdout):\n> \u001b[0;32m/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/2704545193.py\u001b[0m(88)\u001b[0;36mscan\u001b[0;34m()\u001b[0m\n\u001b[0;32m     86 \u001b[0;31m            \u001b[0;32mfor\u001b[0m \u001b[0mx_loc\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mi_maxh\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mw_range\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mw_interval\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     87 \u001b[0;31m                \u001b[0;32mimport\u001b[0m \u001b[0mpdb\u001b[0m\u001b[0;34m;\u001b[0m \u001b[0mpdb\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_trace\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# breakpoint 0f808191 //\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m---> 88 \u001b[0;31m                \u001b[0;32mif\u001b[0m \u001b[0mvv\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mx_loc\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0my_val\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     89 \u001b[0;31m                    \u001b[0;32mfor\u001b[0m \u001b[0mx_loc2\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx_loc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mSAMPLES\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     90 \u001b[0;31m                        \u001b[0;32mif\u001b[0m \u001b[0;36m0.99\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0my_val\u001b[0m \u001b[0;34m<\u001b[0m \u001b[0mvv\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mx_loc\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m<\u001b[0m \u001b[0my_val\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0;36m1.01\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\n\nError: BdbQuit, .\n            \nTraceback:\n---------------------------------------------------------------------------\nBdbQuit                                   Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/583266044.py in <module>\n      7     analog=False,\n      8 )\n----> 9 eye = Eye(filt)\n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/2704545193.py in __init__(self, _filt)\n     22         self.xline = None\n     23         self.yline = None\n---> 24         self.gen_plt_data(_top, _bot)\n     25         print(self.scatter.keys())\n     26 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/2704545193.py in gen_plt_data(self, top, bot)\n     39         self.plot[\"signal\"] = np.stack([[self.t, top], [self.t, bot]], axis=2)\n     40         self.init_points(top, bot)\n---> 41         self.scan(self.plot[\"signal\"])\n     42     #%%\n     43 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/2704545193.py in scan(self, h_eye)\n     86             for x_loc in range(i_maxh, w_range, w_interval):\n     87                 import pdb; pdb.set_trace()  # breakpoint 0f808191 //\n---> 88                 if vv[1][x_loc] > y_val:\n     89                     for x_loc2 in range(x_loc, SAMPLES, -1):\n     90                         if 0.99 * y_val < vv[1][x_loc] < y_val * 1.01:\n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/2704545193.py in scan(self, h_eye)\n     86             for x_loc in range(i_maxh, w_range, w_interval):\n     87                 import pdb; pdb.set_trace()  # breakpoint 0f808191 //\n---> 88                 if vv[1][x_loc] > y_val:\n     89                     for x_loc2 in range(x_loc, SAMPLES, -1):\n     90                         if 0.99 * y_val < vv[1][x_loc] < y_val * 1.01:\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/bdb.py in trace_dispatch(self, frame, event, arg)\n     86             return # None\n     87         if event == 'line':\n---> 88             return self.dispatch_line(frame)\n     89         if event == 'call':\n     90             return self.dispatch_call(frame, arg)\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/bdb.py in dispatch_line(self, frame)\n    111         if self.stop_here(frame) or self.break_here(frame):\n    112             self.user_line(frame)\n--> 113             if self.quitting: raise BdbQuit\n    114         return self.trace_dispatch\n    115 \n\nBdbQuit: \n\n\n\n\n(stdout):\n[[ 2.   12.  ]\n [ 3.   12.  ]\n [ 4.   12.  ]\n [ 5.   12.  ]\n [ 6.   12.  ]\n [ 7.   13.98]\n [ 8.   14.1 ]\n [ 9.   12.  ]\n [10.   12.  ]\n [11.   14.35]\n [12.   14.47]\n [13.   12.  ]\n [14.   14.59]\n [15.   12.  ]\n [16.   14.71]\n [17.   14.83]\n [18.   12.  ]\n [19.   14.95]\n [20.   12.  ]\n [21.   15.07]\n [22.   12.  ]\n [23.   15.2 ]\n [24.   12.  ]\n [25.   15.32]\n [26.   12.  ]\n [27.   15.44]\n [28.   15.44]\n [29.   15.56]\n [30.   15.56]\n [31.   15.68]\n [32.   15.68]\n [33.   12.  ]\n [34.   15.8 ]\n [35.   15.8 ]\n [36.   15.93]\n [37.   15.93]\n [38.   16.05]\n [39.   16.05]\n [40.   16.17]\n [41.   16.17]\n [42.   16.17]\n [43.   16.29]\n [44.   16.29]\n [45.   16.29]\n [46.   16.41]\n [47.   16.41]\n [48.   16.53]\n [49.   16.53]\n [50.   16.53]\n [51.   16.65]\n [52.   16.65]\n [53.   16.78]\n [54.   16.78]\n [55.   16.78]\n [56.   16.9 ]\n [57.   16.9 ]\n [58.   16.9 ]\n [59.   17.02]\n [60.   17.02]\n [61.   17.14]\n [62.   17.14]\n [63.   17.14]\n [64.   17.26]\n [65.   17.26]\n [66.   17.26]\n [67.   17.38]\n [68.   17.38]\n [69.   17.51]\n [70.   17.51]\n [71.   17.51]\n [72.   17.63]\n [73.   17.63]\n [74.   17.63]\n [75.   17.75]\n [76.   17.75]\n [77.   17.87]\n [78.   17.87]\n [79.   17.87]\n [80.   17.99]\n [81.   17.99]\n [82.   18.11]\n [83.   18.11]\n [84.   18.11]\n [85.   18.24]\n [86.   18.24]\n [87.   18.36]\n [88.   18.36]\n [89.   18.36]\n [90.   18.48]]\n[[ 2.   12.  ]\n [ 3.   12.  ]\n [ 4.   11.55]\n [ 5.   11.43]\n [ 6.   11.31]\n [ 7.   11.18]\n [ 8.   12.  ]\n [ 9.   12.  ]\n [10.   12.  ]\n [11.   10.82]\n [12.   12.  ]\n [13.   12.  ]\n [14.   10.58]\n [15.   12.  ]\n [16.   10.45]\n [17.   12.  ]\n [18.   10.33]\n [19.   10.21]\n [20.   12.  ]\n [21.   10.09]\n [22.   12.  ]\n [23.    9.97]\n [24.   12.  ]\n [25.    9.85]\n [26.    9.85]\n [27.    9.73]\n [28.    9.73]\n [29.    9.6 ]\n [30.    9.6 ]\n [31.    9.48]\n [32.    9.48]\n [33.    9.36]\n [34.    9.36]\n [35.   12.  ]\n [36.    9.24]\n [37.    9.24]\n [38.    9.12]\n [39.    9.12]\n [40.    9.  ]\n [41.    9.  ]\n [42.    9.  ]\n [43.    8.87]\n [44.    8.87]\n [45.    8.75]\n [46.    8.75]\n [47.    8.75]\n [48.    8.63]\n [49.    8.63]\n [50.    8.51]\n [51.    8.51]\n [52.    8.51]\n [53.    8.39]\n [54.    8.39]\n [55.    8.27]\n [56.    8.27]\n [57.    8.27]\n [58.    8.15]\n [59.    8.15]\n [60.    8.02]\n [61.    8.02]\n [62.    8.02]\n [63.    7.9 ]\n [64.    7.9 ]\n [65.    7.78]\n [66.    7.78]\n [67.    7.78]\n [68.    7.66]\n [69.    7.66]\n [70.    7.66]\n [71.    7.54]\n [72.    7.54]\n [73.    7.42]\n [74.    7.42]\n [75.    7.42]\n [76.    7.29]\n [77.    7.29]\n [78.    7.17]\n [79.    7.17]\n [80.    7.17]\n [81.    7.05]\n [82.    7.05]\n [83.    6.93]\n [84.    6.93]\n [85.    6.93]\n [86.    6.81]\n [87.    6.81]\n [88.    6.69]\n [89.    6.69]\n [90.    6.56]]\n6.0\n0\n0\n43\n\nError: ValueError, max() arg is an empty sequence.\n            \nTraceback:\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/583266044.py in <module>\n      7     analog=False,\n      8 )\n----> 9 eye = Eye(filt)\n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/3743053115.py in __init__(self, _filt)\n     22         self.xline = None\n     23         self.yline = None\n---> 24         self.gen_plt_data(_top, _bot)\n     25         print(self.scatter.keys())\n     26 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/3743053115.py in gen_plt_data(self, top, bot)\n     39         self.plot[\"signal\"] = np.stack([[self.t, top], [self.t, bot]], axis=2)\n     40         self.init_points(top, bot)\n---> 41         self.scan(self.plot[\"signal\"])\n     42     #%%\n     43 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/3743053115.py in scan(self, h_eye)\n    166 \n    167 \n--> 168         i_maxw, i_maxh = [d[\"w\"].index(max(d[\"w\"])), d[\"h\"].index(max(d[\"h\"]))]\n    169 \n    170         self.scatter[\"scan\"] = {\n\nValueError: max() arg is an empty sequence\n\n\n\n\n(stdout):\n[[ 2.   12.  ]\n [ 3.   12.  ]\n [ 4.   12.  ]\n [ 5.   12.  ]\n [ 6.   12.  ]\n [ 7.   13.98]\n [ 8.   14.1 ]\n [ 9.   12.  ]\n [10.   12.  ]\n [11.   14.35]\n [12.   14.47]\n [13.   12.  ]\n [14.   14.59]\n [15.   12.  ]\n [16.   14.71]\n [17.   14.83]\n [18.   12.  ]\n [19.   14.95]\n [20.   12.  ]\n [21.   15.07]\n [22.   12.  ]\n [23.   15.2 ]\n [24.   12.  ]\n [25.   15.32]\n [26.   12.  ]\n [27.   15.44]\n [28.   15.44]\n [29.   15.56]\n [30.   15.56]\n [31.   15.68]\n [32.   15.68]\n [33.   12.  ]\n [34.   15.8 ]\n [35.   15.8 ]\n [36.   15.93]\n [37.   15.93]\n [38.   16.05]\n [39.   16.05]\n [40.   16.17]\n [41.   16.17]\n [42.   16.17]\n [43.   16.29]\n [44.   16.29]\n [45.   16.29]\n [46.   16.41]\n [47.   16.41]\n [48.   16.53]\n [49.   16.53]\n [50.   16.53]\n [51.   16.65]\n [52.   16.65]\n [53.   16.78]\n [54.   16.78]\n [55.   16.78]\n [56.   16.9 ]\n [57.   16.9 ]\n [58.   16.9 ]\n [59.   17.02]\n [60.   17.02]\n [61.   17.14]\n [62.   17.14]\n [63.   17.14]\n [64.   17.26]\n [65.   17.26]\n [66.   17.26]\n [67.   17.38]\n [68.   17.38]\n [69.   17.51]\n [70.   17.51]\n [71.   17.51]\n [72.   17.63]\n [73.   17.63]\n [74.   17.63]\n [75.   17.75]\n [76.   17.75]\n [77.   17.87]\n [78.   17.87]\n [79.   17.87]\n [80.   17.99]\n [81.   17.99]\n [82.   18.11]\n [83.   18.11]\n [84.   18.11]\n [85.   18.24]\n [86.   18.24]\n [87.   18.36]\n [88.   18.36]\n [89.   18.36]\n [90.   18.48]]\n[[ 2.   12.  ]\n [ 3.   12.  ]\n [ 4.   11.55]\n [ 5.   11.43]\n [ 6.   11.31]\n [ 7.   11.18]\n [ 8.   12.  ]\n [ 9.   12.  ]\n [10.   12.  ]\n [11.   10.82]\n [12.   12.  ]\n [13.   12.  ]\n [14.   10.58]\n [15.   12.  ]\n [16.   10.45]\n [17.   12.  ]\n [18.   10.33]\n [19.   10.21]\n [20.   12.  ]\n [21.   10.09]\n [22.   12.  ]\n [23.    9.97]\n [24.   12.  ]\n [25.    9.85]\n [26.    9.85]\n [27.    9.73]\n [28.    9.73]\n [29.    9.6 ]\n [30.    9.6 ]\n [31.    9.48]\n [32.    9.48]\n [33.    9.36]\n [34.    9.36]\n [35.   12.  ]\n [36.    9.24]\n [37.    9.24]\n [38.    9.12]\n [39.    9.12]\n [40.    9.  ]\n [41.    9.  ]\n [42.    9.  ]\n [43.    8.87]\n [44.    8.87]\n [45.    8.75]\n [46.    8.75]\n [47.    8.75]\n [48.    8.63]\n [49.    8.63]\n [50.    8.51]\n [51.    8.51]\n [52.    8.51]\n [53.    8.39]\n [54.    8.39]\n [55.    8.27]\n [56.    8.27]\n [57.    8.27]\n [58.    8.15]\n [59.    8.15]\n [60.    8.02]\n [61.    8.02]\n [62.    8.02]\n [63.    7.9 ]\n [64.    7.9 ]\n [65.    7.78]\n [66.    7.78]\n [67.    7.78]\n [68.    7.66]\n [69.    7.66]\n [70.    7.66]\n [71.    7.54]\n [72.    7.54]\n [73.    7.42]\n [74.    7.42]\n [75.    7.42]\n [76.    7.29]\n [77.    7.29]\n [78.    7.17]\n [79.    7.17]\n [80.    7.17]\n [81.    7.05]\n [82.    7.05]\n [83.    6.93]\n [84.    6.93]\n [85.    6.93]\n [86.    6.81]\n [87.    6.81]\n [88.    6.69]\n [89.    6.69]\n [90.    6.56]]\n6.0\n0\n0\n43\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\nError: ValueError, could not broadcast input array from shape (2,) into shape (1,).\n            \nTraceback:\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/1328742771.py in <module>\n     11 ax.scatter(**eye.scatter[\"average\"])\n     12 ax.scatter(**eye.scatter[\"scan\"])\n---> 13 ax.hlines(**eye.xline)\n     14 ax.vlines(**eye.yline)\n     15 ax.set_facecolor(\"black\")\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/matplotlib/__init__.py in inner(ax, data, *args, **kwargs)\n   1359     def inner(ax, *args, data=None, **kwargs):\n   1360         if data is None:\n-> 1361             return func(ax, *map(sanitize_sequence, args), **kwargs)\n   1362 \n   1363         bound = new_sig.bind(ax, *args, **kwargs)\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/matplotlib/axes/_axes.py in hlines(self, y, xmin, xmax, colors, linestyles, label, **kwargs)\n   1033 \n   1034         masked_verts = np.ma.empty((len(y), 2, 2))\n-> 1035         masked_verts[:, 0, 0] = xmin\n   1036         masked_verts[:, 0, 1] = y\n   1037         masked_verts[:, 1, 0] = xmax\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/numpy/ma/core.py in __setitem__(self, indx, value)\n   3377         if _mask is nomask:\n   3378             # Set the data, then the mask\n-> 3379             _data[indx] = dval\n   3380             if mval is not nomask:\n   3381                 _mask = self._mask = make_mask_none(self.shape, _dtype)\n\nValueError: could not broadcast input array from shape (2,) into shape (1,)\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\n\n\n(stdout):\n[[ 2.   12.  ]\n [ 3.   12.  ]\n [ 4.   12.  ]\n [ 5.   12.  ]\n [ 6.   12.  ]\n [ 7.   13.98]\n [ 8.   14.1 ]\n [ 9.   12.  ]\n [10.   12.  ]\n [11.   14.35]\n [12.   14.47]\n [13.   12.  ]\n [14.   14.59]\n [15.   12.  ]\n [16.   14.71]\n [17.   14.83]\n [18.   12.  ]\n [19.   14.95]\n [20.   12.  ]\n [21.   15.07]\n [22.   12.  ]\n [23.   15.2 ]\n [24.   12.  ]\n [25.   15.32]\n [26.   12.  ]\n [27.   15.44]\n [28.   15.44]\n [29.   15.56]\n [30.   15.56]\n [31.   15.68]\n [32.   15.68]\n [33.   12.  ]\n [34.   15.8 ]\n [35.   15.8 ]\n [36.   15.93]\n [37.   15.93]\n [38.   16.05]\n [39.   16.05]\n [40.   16.17]\n [41.   16.17]\n [42.   16.17]\n [43.   16.29]\n [44.   16.29]\n [45.   16.29]\n [46.   16.41]\n [47.   16.41]\n [48.   16.53]\n [49.   16.53]\n [50.   16.53]\n [51.   16.65]\n [52.   16.65]\n [53.   16.78]\n [54.   16.78]\n [55.   16.78]\n [56.   16.9 ]\n [57.   16.9 ]\n [58.   16.9 ]\n [59.   17.02]\n [60.   17.02]\n [61.   17.14]\n [62.   17.14]\n [63.   17.14]\n [64.   17.26]\n [65.   17.26]\n [66.   17.26]\n [67.   17.38]\n [68.   17.38]\n [69.   17.51]\n [70.   17.51]\n [71.   17.51]\n [72.   17.63]\n [73.   17.63]\n [74.   17.63]\n [75.   17.75]\n [76.   17.75]\n [77.   17.87]\n [78.   17.87]\n [79.   17.87]\n [80.   17.99]\n [81.   17.99]\n [82.   18.11]\n [83.   18.11]\n [84.   18.11]\n [85.   18.24]\n [86.   18.24]\n [87.   18.36]\n [88.   18.36]\n [89.   18.36]\n [90.   18.48]]\n[[ 2.   12.  ]\n [ 3.   12.  ]\n [ 4.   11.55]\n [ 5.   11.43]\n [ 6.   11.31]\n [ 7.   11.18]\n [ 8.   12.  ]\n [ 9.   12.  ]\n [10.   12.  ]\n [11.   10.82]\n [12.   12.  ]\n [13.   12.  ]\n [14.   10.58]\n [15.   12.  ]\n [16.   10.45]\n [17.   12.  ]\n [18.   10.33]\n [19.   10.21]\n [20.   12.  ]\n [21.   10.09]\n [22.   12.  ]\n [23.    9.97]\n [24.   12.  ]\n [25.    9.85]\n [26.    9.85]\n [27.    9.73]\n [28.    9.73]\n [29.    9.6 ]\n [30.    9.6 ]\n [31.    9.48]\n [32.    9.48]\n [33.    9.36]\n [34.    9.36]\n [35.   12.  ]\n [36.    9.24]\n [37.    9.24]\n [38.    9.12]\n [39.    9.12]\n [40.    9.  ]\n [41.    9.  ]\n [42.    9.  ]\n [43.    8.87]\n [44.    8.87]\n [45.    8.75]\n [46.    8.75]\n [47.    8.75]\n [48.    8.63]\n [49.    8.63]\n [50.    8.51]\n [51.    8.51]\n [52.    8.51]\n [53.    8.39]\n [54.    8.39]\n [55.    8.27]\n [56.    8.27]\n [57.    8.27]\n [58.    8.15]\n [59.    8.15]\n [60.    8.02]\n [61.    8.02]\n [62.    8.02]\n [63.    7.9 ]\n [64.    7.9 ]\n [65.    7.78]\n [66.    7.78]\n [67.    7.78]\n [68.    7.66]\n [69.    7.66]\n [70.    7.66]\n [71.    7.54]\n [72.    7.54]\n [73.    7.42]\n [74.    7.42]\n [75.    7.42]\n [76.    7.29]\n [77.    7.29]\n [78.    7.17]\n [79.    7.17]\n [80.    7.17]\n [81.    7.05]\n [82.    7.05]\n [83.    6.93]\n [84.    6.93]\n [85.    6.93]\n [86.    6.81]\n [87.    6.81]\n [88.    6.69]\n [89.    6.69]\n [90.    6.56]]\n6.0\n0\n0\n43\n\nError: IndexError, index 43 is out of bounds for axis 0 with size 2.\n            \nTraceback:\n---------------------------------------------------------------------------\nIndexError                                Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/583266044.py in <module>\n      7     analog=False,\n      8 )\n----> 9 eye = Eye(filt)\n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/1239579828.py in __init__(self, _filt)\n     22         self.xline = None\n     23         self.yline = None\n---> 24         self.gen_plt_data(_top, _bot)\n     25         print(self.scatter.keys())\n     26 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/1239579828.py in gen_plt_data(self, top, bot)\n     39         self.plot[\"signal\"] = np.stack([[self.t, top], [self.t, bot]], axis=2)\n     40         self.init_points(top, bot)\n---> 41         self.scan(self.plot[\"signal\"])\n     42     #%%\n     43 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/1239579828.py in scan(self, h_eye)\n    177         self.xline = {\n    178             \"y\": i_maxw,\n--> 179             \"xmin\": d[\"l\"].T[i_maxw],\n    180             \"xmax\": d[\"r\"].T[i_maxw],\n    181             \"linestyles\": \"dashed\",\n\nIndexError: index 43 is out of bounds for axis 0 with size 2\n\n\n\n\n(stdout):\n[[ 2.   12.  ]\n [ 3.   12.  ]\n [ 4.   12.  ]\n [ 5.   12.  ]\n [ 6.   12.  ]\n [ 7.   13.98]\n [ 8.   14.1 ]\n [ 9.   12.  ]\n [10.   12.  ]\n [11.   14.35]\n [12.   14.47]\n [13.   12.  ]\n [14.   14.59]\n [15.   12.  ]\n [16.   14.71]\n [17.   14.83]\n [18.   12.  ]\n [19.   14.95]\n [20.   12.  ]\n [21.   15.07]\n [22.   12.  ]\n [23.   15.2 ]\n [24.   12.  ]\n [25.   15.32]\n [26.   12.  ]\n [27.   15.44]\n [28.   15.44]\n [29.   15.56]\n [30.   15.56]\n [31.   15.68]\n [32.   15.68]\n [33.   12.  ]\n [34.   15.8 ]\n [35.   15.8 ]\n [36.   15.93]\n [37.   15.93]\n [38.   16.05]\n [39.   16.05]\n [40.   16.17]\n [41.   16.17]\n [42.   16.17]\n [43.   16.29]\n [44.   16.29]\n [45.   16.29]\n [46.   16.41]\n [47.   16.41]\n [48.   16.53]\n [49.   16.53]\n [50.   16.53]\n [51.   16.65]\n [52.   16.65]\n [53.   16.78]\n [54.   16.78]\n [55.   16.78]\n [56.   16.9 ]\n [57.   16.9 ]\n [58.   16.9 ]\n [59.   17.02]\n [60.   17.02]\n [61.   17.14]\n [62.   17.14]\n [63.   17.14]\n [64.   17.26]\n [65.   17.26]\n [66.   17.26]\n [67.   17.38]\n [68.   17.38]\n [69.   17.51]\n [70.   17.51]\n [71.   17.51]\n [72.   17.63]\n [73.   17.63]\n [74.   17.63]\n [75.   17.75]\n [76.   17.75]\n [77.   17.87]\n [78.   17.87]\n [79.   17.87]\n [80.   17.99]\n [81.   17.99]\n [82.   18.11]\n [83.   18.11]\n [84.   18.11]\n [85.   18.24]\n [86.   18.24]\n [87.   18.36]\n [88.   18.36]\n [89.   18.36]\n [90.   18.48]]\n[[ 2.   12.  ]\n [ 3.   12.  ]\n [ 4.   11.55]\n [ 5.   11.43]\n [ 6.   11.31]\n [ 7.   11.18]\n [ 8.   12.  ]\n [ 9.   12.  ]\n [10.   12.  ]\n [11.   10.82]\n [12.   12.  ]\n [13.   12.  ]\n [14.   10.58]\n [15.   12.  ]\n [16.   10.45]\n [17.   12.  ]\n [18.   10.33]\n [19.   10.21]\n [20.   12.  ]\n [21.   10.09]\n [22.   12.  ]\n [23.    9.97]\n [24.   12.  ]\n [25.    9.85]\n [26.    9.85]\n [27.    9.73]\n [28.    9.73]\n [29.    9.6 ]\n [30.    9.6 ]\n [31.    9.48]\n [32.    9.48]\n [33.    9.36]\n [34.    9.36]\n [35.   12.  ]\n [36.    9.24]\n [37.    9.24]\n [38.    9.12]\n [39.    9.12]\n [40.    9.  ]\n [41.    9.  ]\n [42.    9.  ]\n [43.    8.87]\n [44.    8.87]\n [45.    8.75]\n [46.    8.75]\n [47.    8.75]\n [48.    8.63]\n [49.    8.63]\n [50.    8.51]\n [51.    8.51]\n [52.    8.51]\n [53.    8.39]\n [54.    8.39]\n [55.    8.27]\n [56.    8.27]\n [57.    8.27]\n [58.    8.15]\n [59.    8.15]\n [60.    8.02]\n [61.    8.02]\n [62.    8.02]\n [63.    7.9 ]\n [64.    7.9 ]\n [65.    7.78]\n [66.    7.78]\n [67.    7.78]\n [68.    7.66]\n [69.    7.66]\n [70.    7.66]\n [71.    7.54]\n [72.    7.54]\n [73.    7.42]\n [74.    7.42]\n [75.    7.42]\n [76.    7.29]\n [77.    7.29]\n [78.    7.17]\n [79.    7.17]\n [80.    7.17]\n [81.    7.05]\n [82.    7.05]\n [83.    6.93]\n [84.    6.93]\n [85.    6.93]\n [86.    6.81]\n [87.    6.81]\n [88.    6.69]\n [89.    6.69]\n [90.    6.56]]\n6.0\n0\n0\n43\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n(display data): <matplotlib.collections.PathCollection at 0x7fb5695916d0>\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\n\n\n(stdout):\n[[ 2.   12.  ]\n [ 3.   12.  ]\n [ 4.   12.  ]\n [ 5.   12.  ]\n [ 6.   12.  ]\n [ 7.   13.98]\n [ 8.   14.1 ]\n [ 9.   12.  ]\n [10.   12.  ]\n [11.   14.35]\n [12.   14.47]\n [13.   12.  ]\n [14.   14.59]\n [15.   12.  ]\n [16.   14.71]\n [17.   14.83]\n [18.   12.  ]\n [19.   14.95]\n [20.   12.  ]\n [21.   15.07]\n [22.   12.  ]\n [23.   15.2 ]\n [24.   12.  ]\n [25.   15.32]\n [26.   12.  ]\n [27.   15.44]\n [28.   15.44]\n [29.   15.56]\n [30.   15.56]\n [31.   15.68]\n [32.   15.68]\n [33.   12.  ]\n [34.   15.8 ]\n [35.   15.8 ]\n [36.   15.93]\n [37.   15.93]\n [38.   16.05]\n [39.   16.05]\n [40.   16.17]\n [41.   16.17]\n [42.   16.17]\n [43.   16.29]\n [44.   16.29]\n [45.   16.29]\n [46.   16.41]\n [47.   16.41]\n [48.   16.53]\n [49.   16.53]\n [50.   16.53]\n [51.   16.65]\n [52.   16.65]\n [53.   16.78]\n [54.   16.78]\n [55.   16.78]\n [56.   16.9 ]\n [57.   16.9 ]\n [58.   16.9 ]\n [59.   17.02]\n [60.   17.02]\n [61.   17.14]\n [62.   17.14]\n [63.   17.14]\n [64.   17.26]\n [65.   17.26]\n [66.   17.26]\n [67.   17.38]\n [68.   17.38]\n [69.   17.51]\n [70.   17.51]\n [71.   17.51]\n [72.   17.63]\n [73.   17.63]\n [74.   17.63]\n [75.   17.75]\n [76.   17.75]\n [77.   17.87]\n [78.   17.87]\n [79.   17.87]\n [80.   17.99]\n [81.   17.99]\n [82.   18.11]\n [83.   18.11]\n [84.   18.11]\n [85.   18.24]\n [86.   18.24]\n [87.   18.36]\n [88.   18.36]\n [89.   18.36]\n [90.   18.48]]\n[[ 2.   12.  ]\n [ 3.   12.  ]\n [ 4.   11.55]\n [ 5.   11.43]\n [ 6.   11.31]\n [ 7.   11.18]\n [ 8.   12.  ]\n [ 9.   12.  ]\n [10.   12.  ]\n [11.   10.82]\n [12.   12.  ]\n [13.   12.  ]\n [14.   10.58]\n [15.   12.  ]\n [16.   10.45]\n [17.   12.  ]\n [18.   10.33]\n [19.   10.21]\n [20.   12.  ]\n [21.   10.09]\n [22.   12.  ]\n [23.    9.97]\n [24.   12.  ]\n [25.    9.85]\n [26.    9.85]\n [27.    9.73]\n [28.    9.73]\n [29.    9.6 ]\n [30.    9.6 ]\n [31.    9.48]\n [32.    9.48]\n [33.    9.36]\n [34.    9.36]\n [35.   12.  ]\n [36.    9.24]\n [37.    9.24]\n [38.    9.12]\n [39.    9.12]\n [40.    9.  ]\n [41.    9.  ]\n [42.    9.  ]\n [43.    8.87]\n [44.    8.87]\n [45.    8.75]\n [46.    8.75]\n [47.    8.75]\n [48.    8.63]\n [49.    8.63]\n [50.    8.51]\n [51.    8.51]\n [52.    8.51]\n [53.    8.39]\n [54.    8.39]\n [55.    8.27]\n [56.    8.27]\n [57.    8.27]\n [58.    8.15]\n [59.    8.15]\n [60.    8.02]\n [61.    8.02]\n [62.    8.02]\n [63.    7.9 ]\n [64.    7.9 ]\n [65.    7.78]\n [66.    7.78]\n [67.    7.78]\n [68.    7.66]\n [69.    7.66]\n [70.    7.66]\n [71.    7.54]\n [72.    7.54]\n [73.    7.42]\n [74.    7.42]\n [75.    7.42]\n [76.    7.29]\n [77.    7.29]\n [78.    7.17]\n [79.    7.17]\n [80.    7.17]\n [81.    7.05]\n [82.    7.05]\n [83.    6.93]\n [84.    6.93]\n [85.    6.93]\n [86.    6.81]\n [87.    6.81]\n [88.    6.69]\n [89.    6.69]\n [90.    6.56]]\n6.0\n0\n0\n88\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n(display data): <matplotlib.collections.PathCollection at 0x7fb56992feb0>\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\n\n\n(stdout):\n[[ 2.   12.  ]\n [ 3.   12.  ]\n [ 4.   12.  ]\n [ 5.   12.  ]\n [ 6.   12.  ]\n [ 7.   13.98]\n [ 8.   14.1 ]\n [ 9.   12.  ]\n [10.   12.  ]\n [11.   14.35]\n [12.   14.47]\n [13.   12.  ]\n [14.   14.59]\n [15.   12.  ]\n [16.   14.71]\n [17.   14.83]\n [18.   12.  ]\n [19.   14.95]\n [20.   12.  ]\n [21.   15.07]\n [22.   12.  ]\n [23.   15.2 ]\n [24.   12.  ]\n [25.   15.32]\n [26.   12.  ]\n [27.   15.44]\n [28.   15.44]\n [29.   15.56]\n [30.   15.56]\n [31.   15.68]\n [32.   15.68]\n [33.   12.  ]\n [34.   15.8 ]\n [35.   15.8 ]\n [36.   15.93]\n [37.   15.93]\n [38.   16.05]\n [39.   16.05]\n [40.   16.17]\n [41.   16.17]\n [42.   16.17]\n [43.   16.29]\n [44.   16.29]\n [45.   16.29]\n [46.   16.41]\n [47.   16.41]\n [48.   16.53]\n [49.   16.53]\n [50.   16.53]\n [51.   16.65]\n [52.   16.65]\n [53.   16.78]\n [54.   16.78]\n [55.   16.78]\n [56.   16.9 ]\n [57.   16.9 ]\n [58.   16.9 ]\n [59.   17.02]\n [60.   17.02]\n [61.   17.14]\n [62.   17.14]\n [63.   17.14]\n [64.   17.26]\n [65.   17.26]\n [66.   17.26]\n [67.   17.38]\n [68.   17.38]\n [69.   17.51]\n [70.   17.51]\n [71.   17.51]\n [72.   17.63]\n [73.   17.63]\n [74.   17.63]\n [75.   17.75]\n [76.   17.75]\n [77.   17.87]\n [78.   17.87]\n [79.   17.87]\n [80.   17.99]\n [81.   17.99]\n [82.   18.11]\n [83.   18.11]\n [84.   18.11]\n [85.   18.24]\n [86.   18.24]\n [87.   18.36]\n [88.   18.36]\n [89.   18.36]\n [90.   18.48]]\n[[ 2.   12.  ]\n [ 3.   12.  ]\n [ 4.   11.55]\n [ 5.   11.43]\n [ 6.   11.31]\n [ 7.   11.18]\n [ 8.   12.  ]\n [ 9.   12.  ]\n [10.   12.  ]\n [11.   10.82]\n [12.   12.  ]\n [13.   12.  ]\n [14.   10.58]\n [15.   12.  ]\n [16.   10.45]\n [17.   12.  ]\n [18.   10.33]\n [19.   10.21]\n [20.   12.  ]\n [21.   10.09]\n [22.   12.  ]\n [23.    9.97]\n [24.   12.  ]\n [25.    9.85]\n [26.    9.85]\n [27.    9.73]\n [28.    9.73]\n [29.    9.6 ]\n [30.    9.6 ]\n [31.    9.48]\n [32.    9.48]\n [33.    9.36]\n [34.    9.36]\n [35.   12.  ]\n [36.    9.24]\n [37.    9.24]\n [38.    9.12]\n [39.    9.12]\n [40.    9.  ]\n [41.    9.  ]\n [42.    9.  ]\n [43.    8.87]\n [44.    8.87]\n [45.    8.75]\n [46.    8.75]\n [47.    8.75]\n [48.    8.63]\n [49.    8.63]\n [50.    8.51]\n [51.    8.51]\n [52.    8.51]\n [53.    8.39]\n [54.    8.39]\n [55.    8.27]\n [56.    8.27]\n [57.    8.27]\n [58.    8.15]\n [59.    8.15]\n [60.    8.02]\n [61.    8.02]\n [62.    8.02]\n [63.    7.9 ]\n [64.    7.9 ]\n [65.    7.78]\n [66.    7.78]\n [67.    7.78]\n [68.    7.66]\n [69.    7.66]\n [70.    7.66]\n [71.    7.54]\n [72.    7.54]\n [73.    7.42]\n [74.    7.42]\n [75.    7.42]\n [76.    7.29]\n [77.    7.29]\n [78.    7.17]\n [79.    7.17]\n [80.    7.17]\n [81.    7.05]\n [82.    7.05]\n [83.    6.93]\n [84.    6.93]\n [85.    6.93]\n [86.    6.81]\n [87.    6.81]\n [88.    6.69]\n [89.    6.69]\n [90.    6.56]]\n6.0\n0\n0\n88\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\n\n\n(stdout):\n[[ 2.   13.36]\n [ 3.   13.52]\n [ 4.   13.67]\n [ 5.   13.79]\n [ 6.   13.91]\n [ 7.   14.  ]\n [ 8.   14.09]\n [ 9.   14.18]\n [10.   14.27]\n [11.   14.36]\n [12.   14.45]\n [13.   14.52]\n [14.   14.61]\n [15.   14.67]\n [16.   14.73]\n [17.   14.79]\n [18.   14.88]\n [19.   14.94]\n [20.   15.  ]\n [21.   15.06]\n [22.   15.12]\n [23.   15.18]\n [24.   15.24]\n [25.   15.3 ]\n [26.   15.36]\n [27.   15.39]\n [28.   15.45]\n [29.   15.52]\n [30.   15.58]\n [31.   15.64]\n [32.   15.67]\n [33.   15.73]\n [34.   15.79]\n [35.   15.85]\n [36.   15.88]\n [37.   15.94]\n [38.   16.  ]\n [39.   16.03]\n [40.   16.09]\n [41.   16.12]\n [42.   16.18]\n [43.   16.24]\n [44.   16.27]\n [45.   16.33]\n [46.   16.36]\n [47.   16.42]\n [48.   16.45]\n [49.   16.52]\n [50.   16.58]\n [51.   16.61]\n [52.   16.67]\n [53.   16.7 ]\n [54.   16.76]\n [55.   16.79]\n [56.   16.85]\n [57.   16.88]\n [58.   16.94]\n [59.   16.97]\n [60.   17.03]\n [61.   17.06]\n [62.   17.12]\n [63.   17.15]\n [64.   17.21]\n [65.   17.24]\n [66.   17.3 ]\n [67.   17.33]\n [68.   17.39]\n [69.   17.42]\n [70.   17.48]\n [71.   17.55]\n [72.   17.58]\n [73.   17.64]\n [74.   17.67]\n [75.   17.73]\n [76.   17.76]\n [77.   17.82]\n [78.   17.85]\n [79.   17.91]\n [80.   17.94]\n [81.   18.  ]\n [82.   18.06]\n [83.   18.09]\n [84.   18.15]\n [85.   18.18]\n [86.   18.24]\n [87.   18.3 ]\n [88.   18.33]\n [89.   18.39]\n [90.   18.45]]\n[[ 2.   12.  ]\n [ 3.   11.7 ]\n [ 4.   11.55]\n [ 5.   11.42]\n [ 6.   11.3 ]\n [ 7.   11.21]\n [ 8.   11.12]\n [ 9.   11.03]\n [10.   10.94]\n [11.   10.85]\n [12.   10.76]\n [13.   10.7 ]\n [14.   10.61]\n [15.   10.55]\n [16.   10.48]\n [17.   10.39]\n [18.   10.33]\n [19.   10.27]\n [20.   10.21]\n [21.   10.15]\n [22.   10.09]\n [23.   10.03]\n [24.    9.97]\n [25.    9.91]\n [26.    9.85]\n [27.    9.79]\n [28.    9.73]\n [29.    9.67]\n [30.    9.61]\n [31.    9.58]\n [32.    9.52]\n [33.    9.45]\n [34.    9.39]\n [35.    9.36]\n [36.    9.3 ]\n [37.    9.24]\n [38.    9.18]\n [39.    9.15]\n [40.    9.09]\n [41.    9.03]\n [42.    9.  ]\n [43.    8.94]\n [44.    8.91]\n [45.    8.85]\n [46.    8.79]\n [47.    8.76]\n [48.    8.7 ]\n [49.    8.64]\n [50.    8.61]\n [51.    8.55]\n [52.    8.52]\n [53.    8.45]\n [54.    8.42]\n [55.    8.36]\n [56.    8.3 ]\n [57.    8.27]\n [58.    8.21]\n [59.    8.18]\n [60.    8.12]\n [61.    8.09]\n [62.    8.03]\n [63.    8.  ]\n [64.    7.94]\n [65.    7.88]\n [66.    7.85]\n [67.    7.79]\n [68.    7.76]\n [69.    7.7 ]\n [70.    7.67]\n [71.    7.61]\n [72.    7.55]\n [73.    7.52]\n [74.    7.45]\n [75.    7.42]\n [76.    7.36]\n [77.    7.33]\n [78.    7.27]\n [79.    7.21]\n [80.    7.18]\n [81.    7.12]\n [82.    7.06]\n [83.    7.03]\n [84.    6.97]\n [85.    6.94]\n [86.    6.88]\n [87.    6.82]\n [88.    6.79]\n [89.    6.73]\n [90.    6.67]]\n6.0\n0\n0\n87\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\n\n\n(stdout):\n[[ 2.   13.36]\n [ 3.   13.52]\n [ 4.   13.67]\n [ 5.   13.79]\n [ 6.   13.91]\n [ 7.   14.  ]\n [ 8.   14.09]\n [ 9.   14.18]\n [10.   14.27]\n [11.   14.36]\n [12.   14.45]\n [13.   14.52]\n [14.   14.61]\n [15.   14.67]\n [16.   14.73]\n [17.   14.79]\n [18.   14.88]\n [19.   14.94]\n [20.   15.  ]\n [21.   15.06]\n [22.   15.12]\n [23.   15.18]\n [24.   15.24]\n [25.   15.3 ]\n [26.   15.36]\n [27.   15.39]\n [28.   15.45]\n [29.   15.52]\n [30.   15.58]\n [31.   15.64]\n [32.   15.67]\n [33.   15.73]\n [34.   15.79]\n [35.   15.85]\n [36.   15.88]\n [37.   15.94]\n [38.   16.  ]\n [39.   16.03]\n [40.   16.09]\n [41.   16.12]\n [42.   16.18]\n [43.   16.24]\n [44.   16.27]\n [45.   16.33]\n [46.   16.36]\n [47.   16.42]\n [48.   16.45]\n [49.   16.52]\n [50.   16.58]\n [51.   16.61]\n [52.   16.67]\n [53.   16.7 ]\n [54.   16.76]\n [55.   16.79]\n [56.   16.85]\n [57.   16.88]\n [58.   16.94]\n [59.   16.97]\n [60.   17.03]\n [61.   17.06]\n [62.   17.12]\n [63.   17.15]\n [64.   17.21]\n [65.   17.24]\n [66.   17.3 ]\n [67.   17.33]\n [68.   17.39]\n [69.   17.42]\n [70.   17.48]\n [71.   17.55]\n [72.   17.58]\n [73.   17.64]\n [74.   17.67]\n [75.   17.73]\n [76.   17.76]\n [77.   17.82]\n [78.   17.85]\n [79.   17.91]\n [80.   17.94]\n [81.   18.  ]\n [82.   18.06]\n [83.   18.09]\n [84.   18.15]\n [85.   18.18]\n [86.   18.24]\n [87.   18.3 ]\n [88.   18.33]\n [89.   18.39]\n [90.   18.45]]\n[[ 2.   12.  ]\n [ 3.   11.7 ]\n [ 4.   11.55]\n [ 5.   11.42]\n [ 6.   11.3 ]\n [ 7.   11.21]\n [ 8.   11.12]\n [ 9.   11.03]\n [10.   10.94]\n [11.   10.85]\n [12.   10.76]\n [13.   10.7 ]\n [14.   10.61]\n [15.   10.55]\n [16.   10.48]\n [17.   10.39]\n [18.   10.33]\n [19.   10.27]\n [20.   10.21]\n [21.   10.15]\n [22.   10.09]\n [23.   10.03]\n [24.    9.97]\n [25.    9.91]\n [26.    9.85]\n [27.    9.79]\n [28.    9.73]\n [29.    9.67]\n [30.    9.61]\n [31.    9.58]\n [32.    9.52]\n [33.    9.45]\n [34.    9.39]\n [35.    9.36]\n [36.    9.3 ]\n [37.    9.24]\n [38.    9.18]\n [39.    9.15]\n [40.    9.09]\n [41.    9.03]\n [42.    9.  ]\n [43.    8.94]\n [44.    8.91]\n [45.    8.85]\n [46.    8.79]\n [47.    8.76]\n [48.    8.7 ]\n [49.    8.64]\n [50.    8.61]\n [51.    8.55]\n [52.    8.52]\n [53.    8.45]\n [54.    8.42]\n [55.    8.36]\n [56.    8.3 ]\n [57.    8.27]\n [58.    8.21]\n [59.    8.18]\n [60.    8.12]\n [61.    8.09]\n [62.    8.03]\n [63.    8.  ]\n [64.    7.94]\n [65.    7.88]\n [66.    7.85]\n [67.    7.79]\n [68.    7.76]\n [69.    7.7 ]\n [70.    7.67]\n [71.    7.61]\n [72.    7.55]\n [73.    7.52]\n [74.    7.45]\n [75.    7.42]\n [76.    7.36]\n [77.    7.33]\n [78.    7.27]\n [79.    7.21]\n [80.    7.18]\n [81.    7.12]\n [82.    7.06]\n [83.    7.03]\n [84.    6.97]\n [85.    6.94]\n [86.    6.88]\n [87.    6.82]\n [88.    6.79]\n [89.    6.73]\n [90.    6.67]]\n\nError: TypeError, unsupported operand type(s) for /: 'list' and 'int'.\n            \nTraceback:\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/583266044.py in <module>\n      7     analog=False,\n      8 )\n----> 9 eye = Eye(filt)\n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/1192851082.py in __init__(self, _filt)\n     22         self.xline = None\n     23         self.yline = None\n---> 24         self.gen_plt_data(_top, _bot)\n     25         print(self.scatter.keys())\n     26 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/1192851082.py in gen_plt_data(self, top, bot)\n     39         self.plot[\"signal\"] = np.stack([[self.t, top], [self.t, bot]], axis=2)\n     40         self.init_points(top, bot)\n---> 41         self.scan(self.plot[\"signal\"])\n     42     #%%\n     43 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/1192851082.py in scan(self, h_eye)\n    120         print(d[\"l\"])\n    121         widths = np.vstack([d[\"r\"].T[0], d[\"r\"].T[1]-d[\"l\"].T[1]]).T\n--> 122         i_maxw = np.searchsorted(widths.T[0], max(d[\"h\"]/2))\n    123 \n    124         print(i_maxh/2)\n\nTypeError: unsupported operand type(s) for /: 'list' and 'int'\n\n\n\n\n(stdout):\n[[ 2.   13.36]\n [ 3.   13.52]\n [ 4.   13.67]\n [ 5.   13.79]\n [ 6.   13.91]\n [ 7.   14.  ]\n [ 8.   14.09]\n [ 9.   14.18]\n [10.   14.27]\n [11.   14.36]\n [12.   14.45]\n [13.   14.52]\n [14.   14.61]\n [15.   14.67]\n [16.   14.73]\n [17.   14.79]\n [18.   14.88]\n [19.   14.94]\n [20.   15.  ]\n [21.   15.06]\n [22.   15.12]\n [23.   15.18]\n [24.   15.24]\n [25.   15.3 ]\n [26.   15.36]\n [27.   15.39]\n [28.   15.45]\n [29.   15.52]\n [30.   15.58]\n [31.   15.64]\n [32.   15.67]\n [33.   15.73]\n [34.   15.79]\n [35.   15.85]\n [36.   15.88]\n [37.   15.94]\n [38.   16.  ]\n [39.   16.03]\n [40.   16.09]\n [41.   16.12]\n [42.   16.18]\n [43.   16.24]\n [44.   16.27]\n [45.   16.33]\n [46.   16.36]\n [47.   16.42]\n [48.   16.45]\n [49.   16.52]\n [50.   16.58]\n [51.   16.61]\n [52.   16.67]\n [53.   16.7 ]\n [54.   16.76]\n [55.   16.79]\n [56.   16.85]\n [57.   16.88]\n [58.   16.94]\n [59.   16.97]\n [60.   17.03]\n [61.   17.06]\n [62.   17.12]\n [63.   17.15]\n [64.   17.21]\n [65.   17.24]\n [66.   17.3 ]\n [67.   17.33]\n [68.   17.39]\n [69.   17.42]\n [70.   17.48]\n [71.   17.55]\n [72.   17.58]\n [73.   17.64]\n [74.   17.67]\n [75.   17.73]\n [76.   17.76]\n [77.   17.82]\n [78.   17.85]\n [79.   17.91]\n [80.   17.94]\n [81.   18.  ]\n [82.   18.06]\n [83.   18.09]\n [84.   18.15]\n [85.   18.18]\n [86.   18.24]\n [87.   18.3 ]\n [88.   18.33]\n [89.   18.39]\n [90.   18.45]]\n[[ 2.   12.  ]\n [ 3.   11.7 ]\n [ 4.   11.55]\n [ 5.   11.42]\n [ 6.   11.3 ]\n [ 7.   11.21]\n [ 8.   11.12]\n [ 9.   11.03]\n [10.   10.94]\n [11.   10.85]\n [12.   10.76]\n [13.   10.7 ]\n [14.   10.61]\n [15.   10.55]\n [16.   10.48]\n [17.   10.39]\n [18.   10.33]\n [19.   10.27]\n [20.   10.21]\n [21.   10.15]\n [22.   10.09]\n [23.   10.03]\n [24.    9.97]\n [25.    9.91]\n [26.    9.85]\n [27.    9.79]\n [28.    9.73]\n [29.    9.67]\n [30.    9.61]\n [31.    9.58]\n [32.    9.52]\n [33.    9.45]\n [34.    9.39]\n [35.    9.36]\n [36.    9.3 ]\n [37.    9.24]\n [38.    9.18]\n [39.    9.15]\n [40.    9.09]\n [41.    9.03]\n [42.    9.  ]\n [43.    8.94]\n [44.    8.91]\n [45.    8.85]\n [46.    8.79]\n [47.    8.76]\n [48.    8.7 ]\n [49.    8.64]\n [50.    8.61]\n [51.    8.55]\n [52.    8.52]\n [53.    8.45]\n [54.    8.42]\n [55.    8.36]\n [56.    8.3 ]\n [57.    8.27]\n [58.    8.21]\n [59.    8.18]\n [60.    8.12]\n [61.    8.09]\n [62.    8.03]\n [63.    8.  ]\n [64.    7.94]\n [65.    7.88]\n [66.    7.85]\n [67.    7.79]\n [68.    7.76]\n [69.    7.7 ]\n [70.    7.67]\n [71.    7.61]\n [72.    7.55]\n [73.    7.52]\n [74.    7.45]\n [75.    7.42]\n [76.    7.36]\n [77.    7.33]\n [78.    7.27]\n [79.    7.21]\n [80.    7.18]\n [81.    7.12]\n [82.    7.06]\n [83.    7.03]\n [84.    6.97]\n [85.    6.94]\n [86.    6.88]\n [87.    6.82]\n [88.    6.79]\n [89.    6.73]\n [90.    6.67]]\n6.0\n0\n0\n43\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\n\n\n(stdout):\n[[ 2.   13.36]\n [ 3.   13.52]\n [ 4.   13.67]\n [ 5.   13.79]\n [ 6.   13.91]\n [ 7.   14.  ]\n [ 8.   14.09]\n [ 9.   14.18]\n [10.   14.27]\n [11.   14.36]\n [12.   14.45]\n [13.   14.52]\n [14.   14.61]\n [15.   14.67]\n [16.   14.73]\n [17.   14.79]\n [18.   14.88]\n [19.   14.94]\n [20.   15.  ]\n [21.   15.06]\n [22.   15.12]\n [23.   15.18]\n [24.   15.24]\n [25.   15.3 ]\n [26.   15.36]\n [27.   15.39]\n [28.   15.45]\n [29.   15.52]\n [30.   15.58]\n [31.   15.64]\n [32.   15.67]\n [33.   15.73]\n [34.   15.79]\n [35.   15.85]\n [36.   15.88]\n [37.   15.94]\n [38.   16.  ]\n [39.   16.03]\n [40.   16.09]\n [41.   16.12]\n [42.   16.18]\n [43.   16.24]\n [44.   16.27]\n [45.   16.33]\n [46.   16.36]\n [47.   16.42]\n [48.   16.45]\n [49.   16.52]\n [50.   16.58]\n [51.   16.61]\n [52.   16.67]\n [53.   16.7 ]\n [54.   16.76]\n [55.   16.79]\n [56.   16.85]\n [57.   16.88]\n [58.   16.94]\n [59.   16.97]\n [60.   17.03]\n [61.   17.06]\n [62.   17.12]\n [63.   17.15]\n [64.   17.21]\n [65.   17.24]\n [66.   17.3 ]\n [67.   17.33]\n [68.   17.39]\n [69.   17.42]\n [70.   17.48]\n [71.   17.55]\n [72.   17.58]\n [73.   17.64]\n [74.   17.67]\n [75.   17.73]\n [76.   17.76]\n [77.   17.82]\n [78.   17.85]\n [79.   17.91]\n [80.   17.94]\n [81.   18.  ]\n [82.   18.06]\n [83.   18.09]\n [84.   18.15]\n [85.   18.18]\n [86.   18.24]\n [87.   18.3 ]\n [88.   18.33]\n [89.   18.39]\n [90.   18.45]]\n[[ 2.   12.  ]\n [ 3.   11.7 ]\n [ 4.   11.55]\n [ 5.   11.42]\n [ 6.   11.3 ]\n [ 7.   11.21]\n [ 8.   11.12]\n [ 9.   11.03]\n [10.   10.94]\n [11.   10.85]\n [12.   10.76]\n [13.   10.7 ]\n [14.   10.61]\n [15.   10.55]\n [16.   10.48]\n [17.   10.39]\n [18.   10.33]\n [19.   10.27]\n [20.   10.21]\n [21.   10.15]\n [22.   10.09]\n [23.   10.03]\n [24.    9.97]\n [25.    9.91]\n [26.    9.85]\n [27.    9.79]\n [28.    9.73]\n [29.    9.67]\n [30.    9.61]\n [31.    9.58]\n [32.    9.52]\n [33.    9.45]\n [34.    9.39]\n [35.    9.36]\n [36.    9.3 ]\n [37.    9.24]\n [38.    9.18]\n [39.    9.15]\n [40.    9.09]\n [41.    9.03]\n [42.    9.  ]\n [43.    8.94]\n [44.    8.91]\n [45.    8.85]\n [46.    8.79]\n [47.    8.76]\n [48.    8.7 ]\n [49.    8.64]\n [50.    8.61]\n [51.    8.55]\n [52.    8.52]\n [53.    8.45]\n [54.    8.42]\n [55.    8.36]\n [56.    8.3 ]\n [57.    8.27]\n [58.    8.21]\n [59.    8.18]\n [60.    8.12]\n [61.    8.09]\n [62.    8.03]\n [63.    8.  ]\n [64.    7.94]\n [65.    7.88]\n [66.    7.85]\n [67.    7.79]\n [68.    7.76]\n [69.    7.7 ]\n [70.    7.67]\n [71.    7.61]\n [72.    7.55]\n [73.    7.52]\n [74.    7.45]\n [75.    7.42]\n [76.    7.36]\n [77.    7.33]\n [78.    7.27]\n [79.    7.21]\n [80.    7.18]\n [81.    7.12]\n [82.    7.06]\n [83.    7.03]\n [84.    6.97]\n [85.    6.94]\n [86.    6.88]\n [87.    6.82]\n [88.    6.79]\n [89.    6.73]\n [90.    6.67]]\n6.0\n0\n0\n43\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\n\n\n(stdout):\n[[ 2.   12.   13.36]\n [ 3.   11.7  13.52]\n [ 4.   11.55 13.67]\n [ 5.   11.42 13.79]\n [ 6.   11.3  13.91]\n [ 7.   11.21 14.  ]\n [ 8.   11.12 14.09]\n [ 9.   11.03 14.18]\n [10.   10.94 14.27]\n [11.   10.85 14.36]\n [12.   10.76 14.45]\n [13.   10.7  14.52]\n [14.   10.61 14.61]\n [15.   10.55 14.67]\n [16.   10.48 14.73]\n [17.   10.39 14.79]\n [18.   10.33 14.88]\n [19.   10.27 14.94]\n [20.   10.21 15.  ]\n [21.   10.15 15.06]\n [22.   10.09 15.12]\n [23.   10.03 15.18]\n [24.    9.97 15.24]\n [25.    9.91 15.3 ]\n [26.    9.85 15.36]\n [27.    9.79 15.39]\n [28.    9.73 15.45]\n [29.    9.67 15.52]\n [30.    9.61 15.58]\n [31.    9.58 15.64]\n [32.    9.52 15.67]\n [33.    9.45 15.73]\n [34.    9.39 15.79]\n [35.    9.36 15.85]\n [36.    9.3  15.88]\n [37.    9.24 15.94]\n [38.    9.18 16.  ]\n [39.    9.15 16.03]\n [40.    9.09 16.09]\n [41.    9.03 16.12]\n [42.    9.   16.18]\n [43.    8.94 16.24]\n [44.    8.91 16.27]\n [45.    8.85 16.33]\n [46.    8.79 16.36]\n [47.    8.76 16.42]\n [48.    8.7  16.45]\n [49.    8.64 16.52]\n [50.    8.61 16.58]\n [51.    8.55 16.61]\n [52.    8.52 16.67]\n [53.    8.45 16.7 ]\n [54.    8.42 16.76]\n [55.    8.36 16.79]\n [56.    8.3  16.85]\n [57.    8.27 16.88]\n [58.    8.21 16.94]\n [59.    8.18 16.97]\n [60.    8.12 17.03]\n [61.    8.09 17.06]\n [62.    8.03 17.12]\n [63.    8.   17.15]\n [64.    7.94 17.21]\n [65.    7.88 17.24]\n [66.    7.85 17.3 ]\n [67.    7.79 17.33]\n [68.    7.76 17.39]\n [69.    7.7  17.42]\n [70.    7.67 17.48]\n [71.    7.61 17.55]\n [72.    7.55 17.58]\n [73.    7.52 17.64]\n [74.    7.45 17.67]\n [75.    7.42 17.73]\n [76.    7.36 17.76]\n [77.    7.33 17.82]\n [78.    7.27 17.85]\n [79.    7.21 17.91]\n [80.    7.18 17.94]\n [81.    7.12 18.  ]\n [82.    7.06 18.06]\n [83.    7.03 18.09]\n [84.    6.97 18.15]\n [85.    6.94 18.18]\n [86.    6.88 18.24]\n [87.    6.82 18.3 ]\n [88.    6.79 18.33]\n [89.    6.73 18.39]\n [90.    6.67 18.45]]\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\nError: SyntaxError, invalid syntax (25049122.py, line 107).\n            \nTraceback:\n  File \"/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/25049122.py\", line 107\n    brea[y_val, y_val-min(vxy[1]), max(vxy[1])-y_val]k\n                                                     ^\nSyntaxError: invalid syntax\n\n\n\nError: SyntaxError, invalid syntax (809641122.py, line 107).\n            \nTraceback:\n  File \"/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/809641122.py\", line 107\n    break[y_val, y_val-min(vxy[1]), max(vxy[1])-y_val]\n         ^\nSyntaxError: invalid syntax\n\n\n\n\n\n(stdout):\n[[ 2.  0. 88.]\n [ 3.  1. 87.]\n [ 4.  2. 86.]\n [ 5.  3. 85.]\n [ 6.  4. 84.]\n [ 7.  5. 83.]\n [ 8.  6. 82.]\n [ 9.  7. 81.]\n [10.  8. 80.]\n [11.  9. 79.]\n [12. 10. 78.]\n [13. 11. 77.]\n [14. 12. 76.]\n [15. 13. 75.]\n [16. 14. 74.]\n [17. 15. 73.]\n [18. 16. 72.]\n [19. 17. 71.]\n [20. 18. 70.]\n [21. 19. 69.]\n [22. 20. 68.]\n [23. 21. 67.]\n [24. 22. 66.]\n [25. 23. 65.]\n [26. 24. 64.]\n [27. 25. 63.]\n [28. 26. 62.]\n [29. 27. 61.]\n [30. 28. 60.]\n [31. 29. 59.]\n [32. 30. 58.]\n [33. 31. 57.]\n [34. 32. 56.]\n [35. 33. 55.]\n [36. 34. 54.]\n [37. 35. 53.]\n [38. 36. 52.]\n [39. 37. 51.]\n [40. 38. 50.]\n [41. 39. 49.]\n [42. 40. 48.]\n [43. 41. 47.]\n [44. 42. 46.]\n [45. 43. 45.]\n [46. 44. 44.]\n [47. 45. 43.]\n [48. 46. 42.]\n [49. 47. 41.]\n [50. 48. 40.]\n [51. 49. 39.]\n [52. 50. 38.]\n [53. 51. 37.]\n [54. 52. 36.]\n [55. 53. 35.]\n [56. 54. 34.]\n [57. 55. 33.]\n [58. 56. 32.]\n [59. 57. 31.]\n [60. 58. 30.]\n [61. 59. 29.]\n [62. 60. 28.]\n [63. 61. 27.]\n [64. 62. 26.]\n [65. 63. 25.]\n [66. 64. 24.]\n [67. 65. 23.]\n [68. 66. 22.]\n [69. 67. 21.]\n [70. 68. 20.]\n [71. 69. 19.]\n [72. 70. 18.]\n [73. 71. 17.]\n [74. 72. 16.]\n [75. 73. 15.]\n [76. 74. 14.]\n [77. 75. 13.]\n [78. 76. 12.]\n [79. 77. 11.]\n [80. 78. 10.]\n [81. 79.  9.]\n [82. 80.  8.]\n [83. 81.  7.]\n [84. 82.  6.]\n [85. 83.  5.]\n [86. 84.  4.]\n [87. 85.  3.]\n [88. 86.  2.]\n [89. 87.  1.]\n [90. 88.  0.]]\n[[ 2.   12.   13.36]\n [ 3.   11.7  13.52]\n [ 4.   11.55 13.67]\n [ 5.   11.42 13.79]\n [ 6.   11.3  13.91]\n [ 7.   11.21 14.  ]\n [ 8.   11.12 14.09]\n [ 9.   11.03 14.18]\n [10.   10.94 14.27]\n [11.   10.85 14.36]\n [12.   10.76 14.45]\n [13.   10.7  14.52]\n [14.   10.61 14.61]\n [15.   10.55 14.67]\n [16.   10.48 14.73]\n [17.   10.39 14.79]\n [18.   10.33 14.88]\n [19.   10.27 14.94]\n [20.   10.21 15.  ]\n [21.   10.15 15.06]\n [22.   10.09 15.12]\n [23.   10.03 15.18]\n [24.    9.97 15.24]\n [25.    9.91 15.3 ]\n [26.    9.85 15.36]\n [27.    9.79 15.39]\n [28.    9.73 15.45]\n [29.    9.67 15.52]\n [30.    9.61 15.58]\n [31.    9.58 15.64]\n [32.    9.52 15.67]\n [33.    9.45 15.73]\n [34.    9.39 15.79]\n [35.    9.36 15.85]\n [36.    9.3  15.88]\n [37.    9.24 15.94]\n [38.    9.18 16.  ]\n [39.    9.15 16.03]\n [40.    9.09 16.09]\n [41.    9.03 16.12]\n [42.    9.   16.18]\n [43.    8.94 16.24]\n [44.    8.91 16.27]\n [45.    8.85 16.33]\n [46.    8.79 16.36]\n [47.    8.76 16.42]\n [48.    8.7  16.45]\n [49.    8.64 16.52]\n [50.    8.61 16.58]\n [51.    8.55 16.61]\n [52.    8.52 16.67]\n [53.    8.45 16.7 ]\n [54.    8.42 16.76]\n [55.    8.36 16.79]\n [56.    8.3  16.85]\n [57.    8.27 16.88]\n [58.    8.21 16.94]\n [59.    8.18 16.97]\n [60.    8.12 17.03]\n [61.    8.09 17.06]\n [62.    8.03 17.12]\n [63.    8.   17.15]\n [64.    7.94 17.21]\n [65.    7.88 17.24]\n [66.    7.85 17.3 ]\n [67.    7.79 17.33]\n [68.    7.76 17.39]\n [69.    7.7  17.42]\n [70.    7.67 17.48]\n [71.    7.61 17.55]\n [72.    7.55 17.58]\n [73.    7.52 17.64]\n [74.    7.45 17.67]\n [75.    7.42 17.73]\n [76.    7.36 17.76]\n [77.    7.33 17.82]\n [78.    7.27 17.85]\n [79.    7.21 17.91]\n [80.    7.18 17.94]\n [81.    7.12 18.  ]\n [82.    7.06 18.06]\n [83.    7.03 18.09]\n [84.    6.97 18.15]\n [85.    6.94 18.18]\n [86.    6.88 18.24]\n [87.    6.82 18.3 ]\n [88.    6.79 18.33]\n [89.    6.73 18.39]\n [90.    6.67 18.45]]\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n\n\nError: TypeError, _vhstack_dispatcher() takes 1 positional argument but 90 were given.\n            \nTraceback:\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/583266044.py in <module>\n      7     analog=False,\n      8 )\n----> 9 eye = Eye(filt)\n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/1159867791.py in __init__(self, _filt)\n     22         self.xline = None\n     23         self.yline = None\n---> 24         self.gen_plt_data(_top, _bot)\n     25         print(self.scatter.keys())\n     26 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/1159867791.py in gen_plt_data(self, top, bot)\n     39         self.plot[\"signal\"] = np.stack([[self.t, top], [self.t, bot]], axis=2)\n     40         self.init_points(top, bot)\n---> 41         self.scan(self.plot[\"signal\"])\n     42     #%%\n     43 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/1159867791.py in scan(self, h_eye)\n    113         d[\"l\"] = SortedArray(d[\"l\"], unique = \"min\").array\n    114 \n--> 115         combo = np.vstack([d[\"r\"].T[0], d[\"l\"].T[1], d[\"r\"].T[1]], *h).T\n    116         left  = np.searchsorted(d[\"l\"].T[1], i_maxh/2)\n    117         right = np.searchsorted(d[\"r\"].T[1], i_maxh/2)\n\n<__array_function__ internals> in vstack(*args, **kwargs)\n\nTypeError: _vhstack_dispatcher() takes 1 positional argument but 90 were given\n\n\n\n\n(stdout):\n[[ 2.   12.   13.36  0.   88.  ]\n [ 3.   11.7  13.52  1.   87.  ]\n [ 4.   11.55 13.67  2.   86.  ]\n [ 5.   11.42 13.79  3.   85.  ]\n [ 6.   11.3  13.91  4.   84.  ]\n [ 7.   11.21 14.    5.   83.  ]\n [ 8.   11.12 14.09  6.   82.  ]\n [ 9.   11.03 14.18  7.   81.  ]\n [10.   10.94 14.27  8.   80.  ]\n [11.   10.85 14.36  9.   79.  ]\n [12.   10.76 14.45 10.   78.  ]\n [13.   10.7  14.52 11.   77.  ]\n [14.   10.61 14.61 12.   76.  ]\n [15.   10.55 14.67 13.   75.  ]\n [16.   10.48 14.73 14.   74.  ]\n [17.   10.39 14.79 15.   73.  ]\n [18.   10.33 14.88 16.   72.  ]\n [19.   10.27 14.94 17.   71.  ]\n [20.   10.21 15.   18.   70.  ]\n [21.   10.15 15.06 19.   69.  ]\n [22.   10.09 15.12 20.   68.  ]\n [23.   10.03 15.18 21.   67.  ]\n [24.    9.97 15.24 22.   66.  ]\n [25.    9.91 15.3  23.   65.  ]\n [26.    9.85 15.36 24.   64.  ]\n [27.    9.79 15.39 25.   63.  ]\n [28.    9.73 15.45 26.   62.  ]\n [29.    9.67 15.52 27.   61.  ]\n [30.    9.61 15.58 28.   60.  ]\n [31.    9.58 15.64 29.   59.  ]\n [32.    9.52 15.67 30.   58.  ]\n [33.    9.45 15.73 31.   57.  ]\n [34.    9.39 15.79 32.   56.  ]\n [35.    9.36 15.85 33.   55.  ]\n [36.    9.3  15.88 34.   54.  ]\n [37.    9.24 15.94 35.   53.  ]\n [38.    9.18 16.   36.   52.  ]\n [39.    9.15 16.03 37.   51.  ]\n [40.    9.09 16.09 38.   50.  ]\n [41.    9.03 16.12 39.   49.  ]\n [42.    9.   16.18 40.   48.  ]\n [43.    8.94 16.24 41.   47.  ]\n [44.    8.91 16.27 42.   46.  ]\n [45.    8.85 16.33 43.   45.  ]\n [46.    8.79 16.36 44.   44.  ]\n [47.    8.76 16.42 45.   43.  ]\n [48.    8.7  16.45 46.   42.  ]\n [49.    8.64 16.52 47.   41.  ]\n [50.    8.61 16.58 48.   40.  ]\n [51.    8.55 16.61 49.   39.  ]\n [52.    8.52 16.67 50.   38.  ]\n [53.    8.45 16.7  51.   37.  ]\n [54.    8.42 16.76 52.   36.  ]\n [55.    8.36 16.79 53.   35.  ]\n [56.    8.3  16.85 54.   34.  ]\n [57.    8.27 16.88 55.   33.  ]\n [58.    8.21 16.94 56.   32.  ]\n [59.    8.18 16.97 57.   31.  ]\n [60.    8.12 17.03 58.   30.  ]\n [61.    8.09 17.06 59.   29.  ]\n [62.    8.03 17.12 60.   28.  ]\n [63.    8.   17.15 61.   27.  ]\n [64.    7.94 17.21 62.   26.  ]\n [65.    7.88 17.24 63.   25.  ]\n [66.    7.85 17.3  64.   24.  ]\n [67.    7.79 17.33 65.   23.  ]\n [68.    7.76 17.39 66.   22.  ]\n [69.    7.7  17.42 67.   21.  ]\n [70.    7.67 17.48 68.   20.  ]\n [71.    7.61 17.55 69.   19.  ]\n [72.    7.55 17.58 70.   18.  ]\n [73.    7.52 17.64 71.   17.  ]\n [74.    7.45 17.67 72.   16.  ]\n [75.    7.42 17.73 73.   15.  ]\n [76.    7.36 17.76 74.   14.  ]\n [77.    7.33 17.82 75.   13.  ]\n [78.    7.27 17.85 76.   12.  ]\n [79.    7.21 17.91 77.   11.  ]\n [80.    7.18 17.94 78.   10.  ]\n [81.    7.12 18.   79.    9.  ]\n [82.    7.06 18.06 80.    8.  ]\n [83.    7.03 18.09 81.    7.  ]\n [84.    6.97 18.15 82.    6.  ]\n [85.    6.94 18.18 83.    5.  ]\n [86.    6.88 18.24 84.    4.  ]\n [87.    6.82 18.3  85.    3.  ]\n [88.    6.79 18.33 86.    2.  ]\n [89.    6.73 18.39 87.    1.  ]\n [90.    6.67 18.45 88.    0.  ]]\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n\n\n(stdout):\n(89, 5)\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n\n\n(stdout):\n[[12.   11.7  11.55 11.42 11.3  11.21 11.12 11.03 10.94 10.85 10.76 10.7\n  10.61 10.55 10.48 10.39 10.33 10.27 10.21 10.15 10.09 10.03  9.97  9.91\n   9.85  9.79  9.73  9.67  9.61  9.58  9.52  9.45  9.39  9.36  9.3   9.24\n   9.18  9.15  9.09  9.03  9.    8.94  8.91  8.85  8.79  8.76  8.7   8.64\n   8.61  8.55  8.52  8.45  8.42  8.36  8.3   8.27  8.21  8.18  8.12  8.09\n   8.03  8.    7.94  7.88  7.85  7.79  7.76  7.7   7.67  7.61  7.55  7.52\n   7.45  7.42  7.36  7.33  7.27  7.21  7.18  7.12  7.06  7.03  6.97  6.94\n   6.88  6.82  6.79  6.73  6.67]\n [13.36 13.52 13.67 13.79 13.91 14.   14.09 14.18 14.27 14.36 14.45 14.52\n  14.61 14.67 14.73 14.79 14.88 14.94 15.   15.06 15.12 15.18 15.24 15.3\n  15.36 15.39 15.45 15.52 15.58 15.64 15.67 15.73 15.79 15.85 15.88 15.94\n  16.   16.03 16.09 16.12 16.18 16.24 16.27 16.33 16.36 16.42 16.45 16.52\n  16.58 16.61 16.67 16.7  16.76 16.79 16.85 16.88 16.94 16.97 17.03 17.06\n  17.12 17.15 17.21 17.24 17.3  17.33 17.39 17.42 17.48 17.55 17.58 17.64\n  17.67 17.73 17.76 17.82 17.85 17.91 17.94 18.   18.06 18.09 18.15 18.18\n  18.24 18.3  18.33 18.39 18.45]\n [ 0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.\n  12.   13.   14.   15.   16.   17.   18.   19.   20.   21.   22.   23.\n  24.   25.   26.   27.   28.   29.   30.   31.   32.   33.   34.   35.\n  36.   37.   38.   39.   40.   41.   42.   43.   44.   45.   46.   47.\n  48.   49.   50.   51.   52.   53.   54.   55.   56.   57.   58.   59.\n  60.   61.   62.   63.   64.   65.   66.   67.   68.   69.   70.   71.\n  72.   73.   74.   75.   76.   77.   78.   79.   80.   81.   82.   83.\n  84.   85.   86.   87.   88.  ]\n [88.   87.   86.   85.   84.   83.   82.   81.   80.   79.   78.   77.\n  76.   75.   74.   73.   72.   71.   70.   69.   68.   67.   66.   65.\n  64.   63.   62.   61.   60.   59.   58.   57.   56.   55.   54.   53.\n  52.   51.   50.   49.   48.   47.   46.   45.   44.   43.   42.   41.\n  40.   39.   38.   37.   36.   35.   34.   33.   32.   31.   30.   29.\n  28.   27.   26.   25.   24.   23.   22.   21.   20.   19.   18.   17.\n  16.   15.   14.   13.   12.   11.   10.    9.    8.    7.    6.    5.\n   4.    3.    2.    1.    0.  ]]\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n\n\n\n\n(stdout):\n[[12.   12.   11.55 11.43 11.31 11.18 12.   12.   12.   10.82 12.   12.\n  10.58 12.   10.45 12.   10.33 10.21 12.   10.09 12.    9.97 12.    9.85\n   9.85  9.73  9.73  9.6   9.6   9.48  9.48  9.36  9.36 12.    9.24  9.24\n   9.12  9.12  9.    9.    9.    8.87  8.87  8.75  8.75  8.75  8.63  8.63\n   8.51  8.51  8.51  8.39  8.39  8.27  8.27  8.27  8.15  8.15  8.02  8.02\n   8.02  7.9   7.9   7.78  7.78  7.78  7.66  7.66  7.66  7.54  7.54  7.42\n   7.42  7.42  7.29  7.29  7.17  7.17  7.17  7.05  7.05  6.93  6.93  6.93\n   6.81  6.81  6.69  6.69  6.56]\n [12.   12.   12.   12.   12.   13.98 14.1  12.   12.   14.35 14.47 12.\n  14.59 12.   14.71 14.83 12.   14.95 12.   15.07 12.   15.2  12.   15.32\n  12.   15.44 15.44 15.56 15.56 15.68 15.68 12.   15.8  15.8  15.93 15.93\n  16.05 16.05 16.17 16.17 16.17 16.29 16.29 16.29 16.41 16.41 16.53 16.53\n  16.53 16.65 16.65 16.78 16.78 16.78 16.9  16.9  16.9  17.02 17.02 17.14\n  17.14 17.14 17.26 17.26 17.26 17.38 17.38 17.51 17.51 17.51 17.63 17.63\n  17.63 17.75 17.75 17.87 17.87 17.87 17.99 17.99 18.11 18.11 18.11 18.24\n  18.24 18.36 18.36 18.36 18.48]\n [ 0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.\n  12.   13.   14.   15.   16.   17.   18.   19.   20.   21.   22.   23.\n  24.   25.   26.   27.   28.   29.   30.   31.   32.   33.   34.   35.\n  36.   37.   38.   39.   40.   41.   42.   43.   44.   45.   46.   47.\n  48.   49.   50.   51.   52.   53.   54.   55.   56.   57.   58.   59.\n  60.   61.   62.   63.   64.   65.   66.   67.   68.   69.   70.   71.\n  72.   73.   74.   75.   76.   77.   78.   79.   80.   81.   82.   83.\n  84.   85.   86.   87.   88.  ]\n [88.   87.   86.   85.   84.   83.   82.   81.   80.   79.   78.   77.\n  76.   75.   74.   73.   72.   71.   70.   69.   68.   67.   66.   65.\n  64.   63.   62.   61.   60.   59.   58.   57.   56.   55.   54.   53.\n  52.   51.   50.   49.   48.   47.   46.   45.   44.   43.   42.   41.\n  40.   39.   38.   37.   36.   35.   34.   33.   32.   31.   30.   29.\n  28.   27.   26.   25.   24.   23.   22.   21.   20.   19.   18.   17.\n  16.   15.   14.   13.   12.   11.   10.    9.    8.    7.    6.    5.\n   4.    3.    2.    1.    0.  ]]\n[1224.   1180.5  1141.65 1101.14 1061.64 1008.24  962.01  940.5   904.\n  860.82  815.41  800.5   760.78  736.5   699.03  655.35  661.85  614.08\n  594.    562.37  544.    514.68  498.    471.01  474.09  431.35  412.85\n  395.7   379.2   364.07  349.57  362.92  323.96  288.78  302.36  292.86\n  284.77  277.27  271.2   265.7   261.2   258.14  255.64  255.32  254.1\n  254.6   256.57  259.07  263.77  267.56  273.06  280.06  287.56  297.28\n  306.08  316.58  329.3   341.11  355.84  369.66  385.16  402.89  419.72\n  439.46  458.96  478.8   501.55  523.39  546.89  572.64  597.49  625.26\n  652.76  680.61  711.39  741.25  774.03  806.53  839.4   875.19  910.07\n  947.86  985.36 1023.25 1064.05 1103.94 1146.75 1189.25 1233.47]\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n\n\n(stdout):\n[[1224.   1180.5  1141.65 1101.14 1061.64 1008.24  962.01  940.5   904.\n   860.82  815.41  800.5   760.78  736.5   699.03  655.35  661.85  614.08\n   594.    562.37  544.    514.68  498.    471.01  474.09  431.35  412.85\n   395.7   379.2   364.07  349.57  362.92  323.96  288.78  302.36  292.86\n   284.77  277.27  271.2   265.7   261.2   258.14  255.64  255.32  254.1\n   254.6   256.57  259.07  263.77  267.56  273.06  280.06  287.56  297.28\n   306.08  316.58  329.3   341.11  355.84  369.66  385.16  402.89  419.72\n   439.46  458.96  478.8   501.55  523.39  546.89  572.64  597.49  625.26\n   652.76  680.61  711.39  741.25  774.03  806.53  839.4   875.19  910.07\n   947.86  985.36 1023.25 1064.05 1103.94 1146.75 1189.25 1233.47]]\n[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n\n\n(stdout):\n0\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n\n\n(stdout):\n0\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n\n\n\n\n(stdout):\n44\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n\n\n(stdout):\n44\n43\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n\n\n(stdout):\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\n\n\n(stdout):\n44\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n\n\n(stdout):\n44\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\n\n\n\n\nError: TypeError, only integer scalar arrays can be converted to a scalar index.\n            \nTraceback:\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/685713987.py in <module>\n      7     analog=False,\n      8 )\n----> 9 eye = Eye()\n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/4167291688.py in __init__(self, _filt)\n     22         self.xline = None\n     23         self.yline = None\n---> 24         self.gen_plt_data(_top, _bot)\n     25         print(self.scatter.keys())\n     26 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/4167291688.py in gen_plt_data(self, top, bot)\n     39         self.plot[\"signal\"] = np.stack([[self.t, top], [self.t, bot]], axis=2)\n     40         self.init_points(top, bot)\n---> 41         self.scan(self.plot[\"signal\"])\n     42     #%%\n     43 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/4167291688.py in scan(self, h_eye)\n    113         d[\"l\"] = SortedArray(d[\"l\"], unique = \"min\").array\n    114 \n--> 115         combo = np.vstack([d[\"r\"].T[0],np.std([ d[\"l\"].T[1], d[\"r\"].T[1]]), np.std( *h.T)])\n    116 \n    117         left  = np.searchsorted(d[\"l\"].T[1], i_maxh/2)\n\n<__array_function__ internals> in std(*args, **kwargs)\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/numpy/core/fromnumeric.py in std(a, axis, dtype, out, ddof, keepdims, where)\n   3579             return std(axis=axis, dtype=dtype, out=out, ddof=ddof, **kwargs)\n   3580 \n-> 3581     return _methods._std(a, axis=axis, dtype=dtype, out=out, ddof=ddof,\n   3582                          **kwargs)\n   3583 \n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/numpy/core/_methods.py in _std(a, axis, dtype, out, ddof, keepdims, where)\n    260 def _std(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False, *,\n    261          where=True):\n--> 262     ret = _var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,\n    263                keepdims=keepdims, where=where)\n    264 \n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/numpy/core/_methods.py in _var(a, axis, dtype, out, ddof, keepdims, where)\n    197     arr = asanyarray(a)\n    198 \n--> 199     rcount = _count_reduce_items(arr, axis, keepdims=keepdims, where=where)\n    200     # Make this warning show up on top.\n    201     if ddof >= rcount if where is True else umr_any(ddof >= rcount, axis=None):\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/numpy/core/_methods.py in _count_reduce_items(arr, axis, keepdims, where)\n     74         items = nt.intp(1)\n     75         for ax in axis:\n---> 76             items *= arr.shape[mu.normalize_axis_index(ax, arr.ndim)]\n     77     else:\n     78         # TODO: Optimize case when `where` is broadcast along a non-reduction\n\nTypeError: only integer scalar arrays can be converted to a scalar index\n\n\n\n\nError: ValueError, all the input array dimensions for the concatenation axis must match exactly, but along dimension 1, the array at index 0 has size 124 and the array at index 1 has size 1.\n            \nTraceback:\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/685713987.py in <module>\n      7     analog=False,\n      8 )\n----> 9 eye = Eye()\n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/2624126726.py in __init__(self, _filt)\n     22         self.xline = None\n     23         self.yline = None\n---> 24         self.gen_plt_data(_top, _bot)\n     25         print(self.scatter.keys())\n     26 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/2624126726.py in gen_plt_data(self, top, bot)\n     39         self.plot[\"signal\"] = np.stack([[self.t, top], [self.t, bot]], axis=2)\n     40         self.init_points(top, bot)\n---> 41         self.scan(self.plot[\"signal\"])\n     42     #%%\n     43 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/2624126726.py in scan(self, h_eye)\n    113         d[\"l\"] = SortedArray(d[\"l\"], unique = \"min\").array\n    114 \n--> 115         combo = np.vstack([d[\"r\"].T[0],\n    116                           np.std([ d[\"l\"].T[1], d[\"r\"].T[1]]),\n    117                           np.std(h.T)])\n\n<__array_function__ internals> in vstack(*args, **kwargs)\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/numpy/core/shape_base.py in vstack(tup)\n    280     if not isinstance(arrs, list):\n    281         arrs = [arrs]\n--> 282     return _nx.concatenate(arrs, 0)\n    283 \n    284 \n\n<__array_function__ internals> in concatenate(*args, **kwargs)\n\nValueError: all the input array dimensions for the concatenation axis must match exactly, but along dimension 1, the array at index 0 has size 124 and the array at index 1 has size 1\n\n\n\n\n(stdout):\n121\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\n\n\n(stdout):\n[[  2.     3.     4.     5.     6.     7.     8.     9.    10.    11.\n   12.    13.    14.    15.    16.    17.    18.    19.    20.    21.\n   22.    23.    24.    25.    26.    27.    28.    29.    30.    31.\n   32.    33.    34.    35.    36.    37.    38.    39.    40.    41.\n   42.    43.    44.    45.    46.    47.    48.    49.    50.    51.\n   52.    53.    54.    55.    56.    57.    58.    59.    60.    61.\n   62.    63.    64.    65.    66.    67.    68.    69.    70.    71.\n   72.    73.    74.    75.    76.    77.    78.    79.    80.    81.\n   82.    83.    84.    85.    86.    87.    88.    89.    90.    91.\n   92.    93.    94.    95.    96.    97.    98.    99.   100.   101.\n  102.   103.   104.   105.   106.   107.   108.   109.   110.   111.\n  112.   113.   114.   115.   116.   117.   118.   119.   120.   121.\n  122.   123.   124.   125.  ]\n [  1.67   2.37   2.91   3.37   3.76   4.13   4.49   4.79   5.1    5.37\n    5.64   5.88   6.13   6.37   6.61   6.86   7.07   7.28   7.49   7.7\n    7.89   8.1    8.28   8.49   8.68   8.86   9.04   9.22   9.4    9.55\n    9.74   9.89  10.07  10.25  10.4   10.56  10.74  10.89  11.04  11.22\n   11.37  11.53  11.68  11.83  12.01  12.13  12.32  12.44  12.62  12.74\n   12.92  13.04  13.19  13.35  13.5   13.65  13.8   13.95  14.07  14.26\n   14.38  14.53  14.68  14.83  14.23  14.07  13.89  13.74  13.59  13.44\n   13.29  13.1   12.95  12.8   12.65  12.47  12.32  12.16  11.98  11.83\n   11.65  11.5   11.34  11.16  10.98  10.83  10.65  10.46  10.31  10.13\n    9.95   9.77   9.59   9.4    9.22   9.01   8.83   8.61   8.43   8.22\n    8.01   7.8    7.58   7.37   7.16   6.92   6.67   6.43   6.19   5.91\n    5.64   5.34   5.04   4.73   4.4    4.03   3.64   3.18   2.67   2.\n    1.03   0.03   0.03   0.03]\n [ 61.5   60.5   59.5   58.5   57.5   56.5   55.5   54.5   53.5   52.5\n   51.5   50.5   49.5   48.5   47.5   46.5   45.5   44.5   43.5   42.5\n   41.5   40.5   39.5   38.5   37.5   36.5   35.5   34.5   33.5   32.5\n   31.5   30.5   29.5   28.5   27.5   26.5   25.5   24.5   23.5   22.5\n   21.5   20.5   19.5   18.5   17.5   16.5   15.5   14.5   13.5   12.5\n   11.5   10.5    9.5    8.5    7.5    6.5    5.5    4.5    3.5    2.5\n    1.5    0.5    0.5    1.5    2.5    3.5    4.5    5.5    6.5    7.5\n    8.5    9.5   10.5   11.5   12.5   13.5   14.5   15.5   16.5   17.5\n   18.5   19.5   20.5   21.5   22.5   23.5   24.5   25.5   26.5   27.5\n   28.5   29.5   30.5   31.5   32.5   33.5   34.5   35.5   36.5   37.5\n   38.5   39.5   40.5   41.5   42.5   43.5   44.5   45.5   46.5   47.5\n   48.5   49.5   50.5   51.5   52.5   53.5   54.5   55.5   56.5   57.5\n   58.5   59.5   60.5   61.5 ]]\n121\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n\n\nError: ValueError, all the input array dimensions for the concatenation axis must match exactly, but along dimension 1, the array at index 0 has size 124 and the array at index 1 has size 2.\n            \nTraceback:\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/685713987.py in <module>\n      7     analog=False,\n      8 )\n----> 9 eye = Eye()\n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/2381159076.py in __init__(self, _filt)\n     22         self.xline = None\n     23         self.yline = None\n---> 24         self.gen_plt_data(_top, _bot)\n     25         print(self.scatter.keys())\n     26 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/2381159076.py in gen_plt_data(self, top, bot)\n     39         self.plot[\"signal\"] = np.stack([[self.t, top], [self.t, bot]], axis=2)\n     40         self.init_points(top, bot)\n---> 41         self.scan(self.plot[\"signal\"])\n     42     #%%\n     43 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/2381159076.py in scan(self, h_eye)\n    114 \n    115         combo = np.vstack([d[\"r\"].T[0], np.std([ d[\"l\"].T[1], d[\"r\"].T[1], *h.T], axis=0)])\n--> 116         combo = np.vstack([d[\"r\"].T[0], np.std([ d[\"l\"].T[1], d[\"r\"].T[1]], axis=1), np.std([*h.T], axis=1)])\n    117 \n    118         left  = np.searchsorted(d[\"l\"].T[1], i_maxh/2)\n\n<__array_function__ internals> in vstack(*args, **kwargs)\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/numpy/core/shape_base.py in vstack(tup)\n    280     if not isinstance(arrs, list):\n    281         arrs = [arrs]\n--> 282     return _nx.concatenate(arrs, 0)\n    283 \n    284 \n\n<__array_function__ internals> in concatenate(*args, **kwargs)\n\nValueError: all the input array dimensions for the concatenation axis must match exactly, but along dimension 1, the array at index 0 has size 124 and the array at index 1 has size 2\n\n\n\n\n(stdout):\n[[  2.     3.     4.     5.     6.     7.     8.     9.    10.    11.\n   12.    13.    14.    15.    16.    17.    18.    19.    20.    21.\n   22.    23.    24.    25.    26.    27.    28.    29.    30.    31.\n   32.    33.    34.    35.    36.    37.    38.    39.    40.    41.\n   42.    43.    44.    45.    46.    47.    48.    49.    50.    51.\n   52.    53.    54.    55.    56.    57.    58.    59.    60.    61.\n   62.    63.    64.    65.    66.    67.    68.    69.    70.    71.\n   72.    73.    74.    75.    76.    77.    78.    79.    80.    81.\n   82.    83.    84.    85.    86.    87.    88.    89.    90.    91.\n   92.    93.    94.    95.    96.    97.    98.    99.   100.   101.\n  102.   103.   104.   105.   106.   107.   108.   109.   110.   111.\n  112.   113.   114.   115.   116.   117.   118.   119.   120.   121.\n  122.   123.   124.   125.  ]\n [  1.67   2.37   2.91   3.37   3.76   4.13   4.49   4.79   5.1    5.37\n    5.64   5.88   6.13   6.37   6.61   6.86   7.07   7.28   7.49   7.7\n    7.89   8.1    8.28   8.49   8.68   8.86   9.04   9.22   9.4    9.55\n    9.74   9.89  10.07  10.25  10.4   10.56  10.74  10.89  11.04  11.22\n   11.37  11.53  11.68  11.83  12.01  12.13  12.32  12.44  12.62  12.74\n   12.92  13.04  13.19  13.35  13.5   13.65  13.8   13.95  14.07  14.26\n   14.38  14.53  14.68  14.83  14.23  14.07  13.89  13.74  13.59  13.44\n   13.29  13.1   12.95  12.8   12.65  12.47  12.32  12.16  11.98  11.83\n   11.65  11.5   11.34  11.16  10.98  10.83  10.65  10.46  10.31  10.13\n    9.95   9.77   9.59   9.4    9.22   9.01   8.83   8.61   8.43   8.22\n    8.01   7.8    7.58   7.37   7.16   6.92   6.67   6.43   6.19   5.91\n    5.64   5.34   5.04   4.73   4.4    4.03   3.64   3.18   2.67   2.\n    1.03   0.03   0.03   0.03]\n [ 61.5   60.5   59.5   58.5   57.5   56.5   55.5   54.5   53.5   52.5\n   51.5   50.5   49.5   48.5   47.5   46.5   45.5   44.5   43.5   42.5\n   41.5   40.5   39.5   38.5   37.5   36.5   35.5   34.5   33.5   32.5\n   31.5   30.5   29.5   28.5   27.5   26.5   25.5   24.5   23.5   22.5\n   21.5   20.5   19.5   18.5   17.5   16.5   15.5   14.5   13.5   12.5\n   11.5   10.5    9.5    8.5    7.5    6.5    5.5    4.5    3.5    2.5\n    1.5    0.5    0.5    1.5    2.5    3.5    4.5    5.5    6.5    7.5\n    8.5    9.5   10.5   11.5   12.5   13.5   14.5   15.5   16.5   17.5\n   18.5   19.5   20.5   21.5   22.5   23.5   24.5   25.5   26.5   27.5\n   28.5   29.5   30.5   31.5   32.5   33.5   34.5   35.5   36.5   37.5\n   38.5   39.5   40.5   41.5   42.5   43.5   44.5   45.5   46.5   47.5\n   48.5   49.5   50.5   51.5   52.5   53.5   54.5   55.5   56.5   57.5\n   58.5   59.5   60.5   61.5 ]]\n63\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\n\n\n(stdout):\n[[ 2.    3.    4.    5.    6.    7.    8.    9.   10.   11.   12.   13.\n  14.   15.   16.   17.   18.   19.   20.   21.   22.   23.   24.   25.\n  26.   27.   28.   29.   30.   31.   32.   33.   34.   35.   36.   37.\n  38.   39.   40.   41.   42.   43.   44.   45.   46.   47.   48.   49.\n  50.   51.   52.   53.   54.   55.   56.   57.   58.   59.   60.   61.\n  62.   63.   64.   65.   66.   67.   68.   69.   70.   71.   72.   73.\n  74.   75.   76.   77.   78.   79.   80.   81.   82.   83.   84.   85.\n  86.   87.   88.   89.   90.  ]\n [ 0.67  0.76  0.82  0.89  0.95  1.4   0.45  1.1   0.54  1.76  1.85  1.91\n   2.    2.09  2.15  2.21  2.27  2.34  2.4   2.46  2.52  2.58  2.64  2.7\n   2.76  2.82  2.88  2.94  3.    3.06  3.12  3.12  3.18  3.25  3.31  3.37\n   3.43  3.46  3.49  3.55  3.61  3.67  3.7   3.73  3.79  3.85  3.91  3.94\n   3.97  4.03  4.09  4.13  4.19  4.22  4.28  4.31  4.37  4.43  4.46  4.52\n   4.55  4.61  4.64  4.7   4.73  4.79  4.85  4.88  4.91  4.97  5.04  5.07\n   5.1   5.16  5.22  5.28  5.28  5.34  5.4   5.46  5.52  5.52  5.58  5.64\n   5.7   5.76  5.79  5.85  5.88]\n [44.   43.   42.   41.   40.   39.   38.   37.   36.   35.   34.   33.\n  32.   31.   30.   29.   28.   27.   26.   25.   24.   23.   22.   21.\n  20.   19.   18.   17.   16.   15.   14.   13.   12.   11.   10.    9.\n   8.    7.    6.    5.    4.    3.    2.    1.    0.    1.    2.    3.\n   4.    5.    6.    7.    8.    9.   10.   11.   12.   13.   14.   15.\n  16.   17.   18.   19.   20.   21.   22.   23.   24.   25.   26.   27.\n  28.   29.   30.   31.   32.   33.   34.   35.   36.   37.   38.   39.\n  40.   41.   42.   43.   44.  ]]\n88\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\n\n\n(stdout):\n[[ 2.    3.    4.    5.    6.    7.    8.    9.   10.   11.   12.   13.\n  14.   15.   16.   17.   18.   19.   20.   21.   22.   23.   24.   25.\n  26.   27.   28.   29.   30.   31.   32.   33.   34.   35.   36.   37.\n  38.   39.   40.   41.   42.   43.   44.   45.   46.   47.   48.   49.\n  50.   51.   52.   53.   54.   55.   56.   57.   58.   59.   60.   61.\n  62.   63.   64.   65.   66.   67.   68.   69.   70.   71.   72.   73.\n  74.   75.   76.   77.   78.   79.   80.   81.   82.   83.   84.   85.\n  86.   87.   88.   89.   90.  ]\n [ 0.67  0.76  0.82  0.89  0.95  1.4   0.45  1.1   0.54  1.76  1.85  1.91\n   2.    2.09  2.15  2.21  2.27  2.34  2.4   2.46  2.52  2.58  2.64  2.7\n   2.76  2.82  2.88  2.94  3.    3.06  3.12  3.12  3.18  3.25  3.31  3.37\n   3.43  3.46  3.49  3.55  3.61  3.67  3.7   3.73  3.79  3.85  3.91  3.94\n   3.97  4.03  4.09  4.13  4.19  4.22  4.28  4.31  4.37  4.43  4.46  4.52\n   4.55  4.61  4.64  4.7   4.73  4.79  4.85  4.88  4.91  4.97  5.04  5.07\n   5.1   5.16  5.22  5.28  5.28  5.34  5.4   5.46  5.52  5.52  5.58  5.64\n   5.7   5.76  5.79  5.85  5.88]\n [44.   43.   42.   41.   40.   39.   38.   37.   36.   35.   34.   33.\n  32.   31.   30.   29.   28.   27.   26.   25.   24.   23.   22.   21.\n  20.   19.   18.   17.   16.   15.   14.   13.   12.   11.   10.    9.\n   8.    7.    6.    5.    4.    3.    2.    1.    0.    1.    2.    3.\n   4.    5.    6.    7.    8.    9.   10.   11.   12.   13.   14.   15.\n  16.   17.   18.   19.   20.   21.   22.   23.   24.   25.   26.   27.\n  28.   29.   30.   31.   32.   33.   34.   35.   36.   37.   38.   39.\n  40.   41.   42.   43.   44.  ]]\n6\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\n\n\n(stdout):\n[[ 2.    3.    4.    5.    6.    7.    8.    9.   10.   11.   12.   13.\n  14.   15.   16.   17.   18.   19.   20.   21.   22.   23.   24.   25.\n  26.   27.   28.   29.   30.   31.   32.   33.   34.   35.   36.   37.\n  38.   39.   40.   41.   42.   43.   44.   45.   46.   47.   48.   49.\n  50.   51.   52.   53.   54.   55.   56.   57.   58.   59.   60.   61.\n  62.   63.   64.   65.   66.   67.   68.   69.   70.   71.   72.   73.\n  74.   75.   76.   77.   78.   79.   80.   81.   82.   83.   84.   85.\n  86.   87.   88.   89.   90.  ]\n [34.84 34.19 33.55 32.91 32.27 31.74 31.39 30.39 30.21 29.33 28.75 28.16\n  27.57 27.01 26.44 25.88 25.32 24.78 24.24 23.71 23.19 22.68 22.18 21.7\n  21.22 20.76 20.32 19.89 19.47 19.08 18.7  18.33 17.99 17.68 17.38 17.11\n  16.87 16.66 16.45 16.29 16.16 16.06 16.   15.94 15.93 15.96 16.01 16.11\n  16.2  16.35 16.52 16.74 16.97 17.21 17.49 17.8  18.13 18.48 18.83 19.22\n  19.63 20.06 20.48 20.93 21.41 21.89 22.38 22.87 23.39 23.92 24.45 24.98\n  25.54 26.1  26.66 27.23 27.8  28.39 28.98 29.57 30.17 30.77 31.38 31.99\n  32.61 33.23 33.86 34.49 35.11]]\n44\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\n\n\n(stdout):\n[[ 2.    3.    4.    5.    6.    7.    8.    9.   10.   11.   12.   13.\n  14.   15.   16.   17.   18.   19.   20.   21.   22.   23.   24.   25.\n  26.   27.   28.   29.   30.   31.   32.   33.   34.   35.   36.   37.\n  38.   39.   40.   41.   42.   43.   44.   45.   46.   47.   48.   49.\n  50.   51.   52.   53.   54.   55.   56.   57.   58.   59.   60.   61.\n  62.   63.   64.   65.   66.   67.   68.   69.   70.   71.   72.   73.\n  74.   75.   76.   77.   78.   79.   80.   81.   82.   83.   84.   85.\n  86.   87.   88.   89.   90.  ]\n [34.84 34.19 33.55 32.91 32.27 31.74 31.39 30.39 30.21 29.33 28.75 28.16\n  27.57 27.01 26.44 25.88 25.32 24.78 24.24 23.71 23.19 22.68 22.18 21.7\n  21.22 20.76 20.32 19.89 19.47 19.08 18.7  18.33 17.99 17.68 17.38 17.11\n  16.87 16.66 16.45 16.29 16.16 16.06 16.   15.94 15.93 15.96 16.01 16.11\n  16.2  16.35 16.52 16.74 16.97 17.21 17.49 17.8  18.13 18.48 18.83 19.22\n  19.63 20.06 20.48 20.93 21.41 21.89 22.38 22.87 23.39 23.92 24.45 24.98\n  25.54 26.1  26.66 27.23 27.8  28.39 28.98 29.57 30.17 30.77 31.38 31.99\n  32.61 33.23 33.86 34.49 35.11]]\n88\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n(display data): <Figure size 5000x2500 with 1 Axes>\n\n\n(stdout):\n[[ 63.    64.    65.    66.    67.    68.    69.    70.    71.    72.\n   73.    74.    75.    76.    77.    78.    79.    80.    81.    82.\n   83.    84.    85.    86.    87.    88.    89.    90.    91.    92.\n   93.    94.    95.    96.    97.    98.    99.   100.   101.   102.\n  103.   104.   105.   106.   107.   108.   109.   110.   111.   112.\n  113.   114.   115.   116.   117.   118.   119.   120.   121.   122.\n  123.   124.   125.   126.  ]\n [ 23.42  22.75  23.14  22.51  21.89  21.28  20.68  20.1   19.54  18.98\n   18.44  17.93  17.41  16.91  16.42  15.95  15.51  15.07  14.3   13.79\n   13.29  12.82  12.37  11.93  11.53  11.08  10.73  10.41  10.1    9.87\n    9.65   9.52   9.41   9.38   9.38   9.46   9.56   9.75   9.96  10.21\n   10.53  10.87  11.25  11.68  12.11  12.58  13.06  13.57  14.09  14.63\n   15.18  15.76  16.33  16.93  17.53  18.13  18.75  19.37  19.99  20.63\n   21.41  22.08  22.75  23.42]]\n63\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n(stdout):\n[[ 1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.   12.\n  13.   14.   15.   16.   17.   18.   19.   20.   21.   22.   23.   24.\n  25.   26.   27.   28.   29.   30.   31.   32.   33.   34.   35.   36.\n  37.   38.   39.   40.   41.   42.   43.   44.   45.   46.   47.   48.\n  49.   50.   51.   52.   53.   54.   55.   56.   57.   58.   59.   60.\n  61.   62.   63.   64.   65.   66.   67.   68.   69.   70.   71.   72.\n  73.   74.   75.   76.   77.   78.   79.   80.   81.   82.   83.   84.\n  85.  ]\n [33.14 32.42 31.71 31.32 30.71 30.11 29.39 28.77 28.17 27.29 26.98 26.4\n  25.82 25.24 24.67 24.11 23.56 23.02 22.48 21.95 21.44 20.94 20.44 19.97\n  19.51 19.06 18.63 18.21 17.81 17.44 17.08 16.75 16.43 16.14 15.88 15.65\n  15.45 15.28 15.15 15.04 14.96 14.9  14.89 14.93 14.99 15.08 15.2  15.35\n  15.53 15.75 15.99 16.27 16.57 16.87 17.22 17.6  17.98 18.39 18.8  19.25\n  19.7  20.17 20.66 21.16 21.66 22.18 22.71 23.25 23.8  24.35 24.92 25.49\n  26.07 26.65 27.25 27.83 28.43 29.04 29.65 30.27 30.89 31.51 32.13 32.76\n  33.39]]\n84\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n(stdout):\n[[25.   26.   27.   28.   29.   30.   31.   32.   33.   34.   35.   36.\n  37.   38.   39.   40.   41.   42.   43.   44.   45.   46.   47.   48.\n  49.   50.   51.   52.   53.   54.   55.   56.   57.   58.   59.   60.\n  61.   62.   63.   64.   65.   66.   67.   68.   69.   70.   71.   72.\n  73.   74.   75.   76.   77.   78.   79.   80.   81.   82.   83.   84.\n  85.   86.   87.   88.   89.   90.   91.   92.   93.   94.   95.   96.\n  97.   98.  ]\n [27.1  26.28 25.61 24.94 24.27 23.61 22.95 22.29 21.63 20.98 20.33 19.68\n  19.04 18.41 17.78 17.15 16.54 15.92 15.32 14.73 14.14 13.58 13.02 12.49\n  11.96 11.46 10.97 10.52 10.1   9.7   9.34  9.03  8.78  8.56  8.4   8.3\n   8.25  8.26  8.36  8.5   8.68  8.92  9.24  9.57  9.96 10.37 10.82 11.28\n  11.79 12.32 12.86 13.43 14.02 14.63 17.76 18.27 18.8  19.33 19.88 20.44\n  21.01 21.58 22.17 22.86 23.47 24.07 23.63 24.23 24.85 25.47 26.1  25.75\n  26.42 27.1 ]]\n0\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n(stdout):\n[[ 50.    51.    52.    53.    54.    55.    56.    57.    58.    59.\n   60.    61.    62.    63.    64.    65.    66.    67.    68.    69.\n   70.    71.    72.    73.    74.    75.    76.    77.    78.    79.\n   80.    81.    82.    83.    84.    85.    86.    87.    88.    89.\n   90.    91.    92.    93.    94.    95.    96.    97.    98.    99.\n  100.   101.   102.   103.   104.   105.   106.   107.   108.   109.\n  110.   111.   112.   113.   114.   115.   116.   117.   118.   119.\n  120.   121.   122.   123.   124.  ]\n [ 27.84  27.17  26.51  25.86  25.21  24.84  24.19  23.53  22.82  22.2\n   21.91  21.3   20.7   20.1   19.51  18.93  18.35  17.77  17.22  16.69\n   16.18  15.72  15.72  15.27  14.84  14.42  14.03  13.67  13.33  13.\n   12.73  12.49  12.29  12.12  12.    11.95  11.91  11.96  12.78  12.44\n   12.49  12.61  12.73  12.92  13.13  13.37  13.64  13.95  14.26  14.58\n   14.69  15.07  15.52  15.99  16.47  16.97  17.49  18.02  18.55  19.1\n   19.65  20.21  20.64  21.17  21.76  22.39  23.01  23.64  24.27  24.89\n   25.34  25.85  26.51  27.17  27.84]]\n0\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n(stdout):\n[[ 46.    47.    48.    49.    50.    51.    52.    53.    54.    55.\n   56.    57.    58.    59.    60.    61.    62.    63.    64.    65.\n   66.    67.    68.    69.    70.    71.    72.    73.    74.    75.\n   76.    77.    78.    79.    80.    81.    82.    83.    84.    85.\n   86.    87.    88.    89.    90.    91.    92.    93.    94.    95.\n   96.    97.    98.    99.   100.   101.   102.   103.   104.   105.\n  106.   107.   108.   109.   110.   111.   112.   113.  ]\n [ 25.26  24.85  24.23  23.6   22.98  22.37  21.76  21.16  20.57  19.98\n   19.41  18.84  18.27  17.72  17.19  16.66  16.14  15.66  15.18  14.72\n   14.28  13.87  13.48  13.12  12.77  12.47  12.2   11.96  11.77  11.62\n   11.5   11.44  11.4   11.4   11.48  11.57  11.74  11.92  12.13  12.39\n   12.16  12.36  12.59  12.86  13.19  13.52  13.86  14.25  14.65  15.09\n   15.55  16.01  16.5   17.    17.53  18.06  18.61  19.16  19.73  20.31\n   20.89  21.48  22.08  22.68  23.29  23.93  24.59  25.26]]\n0\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n\n\n\n\n\n\n(stdout):\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n(stdout):\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n(stdout):\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n(stdout):\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n\n(stdout):\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n",
					"settings":
					{
						"buffer_size": 380727,
						"line_ending": "Unix",
						"name": "*Helium Output* [] 81dccb3a-0502-4823-9294-3a5cb070523c",
						"read_only": true,
						"scratch": true
					},
					"undo_stack":
					[
						[
							129,
							1,
							"append",
							{
								"characters": "\nError: TypeError, scatter() got multiple values for argument 'c'.\n            \nTraceback:\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/3206145193.py in <module>\n     16 # ax.scatter(*vxy, c=cc)\n     17 \n---> 18 ax.scatter(*vv[0], c=cc)\n     19 ax.scatter(*vv[1], c=cc)\n     20 # ax.scatter(*vv_, c=cc_, cmap=\"Reds\")\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/matplotlib/__init__.py in inner(ax, data, *args, **kwargs)\n   1359     def inner(ax, *args, data=None, **kwargs):\n   1360         if data is None:\n-> 1361             return func(ax, *map(sanitize_sequence, args), **kwargs)\n   1362 \n   1363         bound = new_sig.bind(ax, *args, **kwargs)\n\nTypeError: scatter() got multiple values for argument 'c'"
							},
							"AQAAACZnBAAAAAAAu2oEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							130,
							1,
							"append",
							{
								"characters": "\n(display data): <Figure size 5000x2500 with 1 Axes>"
							},
							"AQAAALtqBAAAAAAA72oEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							131,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAO9qBAAAAAAA8WoEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							132,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[    0     1     2     3     4 ... 14786 14787 14788 14789 14790]\n"
							},
							"AQAAAPFqBAAAAAAAPmsEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							133,
							1,
							"append",
							{
								"characters": "\nError: TypeError, scatter() got multiple values for argument 'c'.\n            \nTraceback:\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/1804935648.py in <module>\n     16 # ax.scatter(*vxy, c=cc)\n     17 \n---> 18 ax.scatter(*vv[0], c=cc)\n     19 ax.scatter(*vv[1], c=cc)\n     20 # ax.scatter(*vv_, c=cc_, cmap=\"Reds\")\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/matplotlib/__init__.py in inner(ax, data, *args, **kwargs)\n   1359     def inner(ax, *args, data=None, **kwargs):\n   1360         if data is None:\n-> 1361             return func(ax, *map(sanitize_sequence, args), **kwargs)\n   1362 \n   1363         bound = new_sig.bind(ax, *args, **kwargs)\n\nTypeError: scatter() got multiple values for argument 'c'"
							},
							"AQAAAD5rBAAAAAAA024EAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							134,
							1,
							"append",
							{
								"characters": "\n(display data): <Figure size 5000x2500 with 1 Axes>"
							},
							"AQAAANNuBAAAAAAAB28EAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							135,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAAdvBAAAAAAACW8EAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							136,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[    0     1     2     3     4 ... 14786 14787 14788 14789 14790]\n"
							},
							"AQAAAAlvBAAAAAAAVm8EAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							137,
							1,
							"append",
							{
								"characters": "\nError: TypeError, scatter() got multiple values for argument 'c'.\n            \nTraceback:\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/3944495079.py in <module>\n     16 # ax.scatter(*vxy, c=cc)\n     17 \n---> 18 ax.scatter(*vv[0], c=cc)\n     19 ax.scatter(*vv[1], c=cc)\n     20 # ax.scatter(*vv_, c=cc_, cmap=\"Reds\")\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/matplotlib/__init__.py in inner(ax, data, *args, **kwargs)\n   1359     def inner(ax, *args, data=None, **kwargs):\n   1360         if data is None:\n-> 1361             return func(ax, *map(sanitize_sequence, args), **kwargs)\n   1362 \n   1363         bound = new_sig.bind(ax, *args, **kwargs)\n\nTypeError: scatter() got multiple values for argument 'c'"
							},
							"AQAAAFZvBAAAAAAA63IEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							138,
							1,
							"append",
							{
								"characters": "\n(display data): <Figure size 5000x2500 with 1 Axes>"
							},
							"AQAAAOtyBAAAAAAAH3MEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							139,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAB9zBAAAAAAAIXMEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							140,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[    0     1     2     3     4 ... 29577 29578 29579 29580 29581]\n"
							},
							"AQAAACFzBAAAAAAAbnMEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							141,
							1,
							"append",
							{
								"characters": "\nError: TypeError, scatter() got multiple values for argument 'c'.\n            \nTraceback:\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/1926359306.py in <module>\n     16 # ax.scatter(*vxy, c=cc)\n     17 \n---> 18 ax.scatter(*vv[0], c=cc)\n     19 ax.scatter(*vv[1], c=cc)\n     20 # ax.scatter(*vv_, c=cc_, cmap=\"Reds\")\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/matplotlib/__init__.py in inner(ax, data, *args, **kwargs)\n   1359     def inner(ax, *args, data=None, **kwargs):\n   1360         if data is None:\n-> 1361             return func(ax, *map(sanitize_sequence, args), **kwargs)\n   1362 \n   1363         bound = new_sig.bind(ax, *args, **kwargs)\n\nTypeError: scatter() got multiple values for argument 'c'"
							},
							"AQAAAG5zBAAAAAAAA3cEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							142,
							1,
							"append",
							{
								"characters": "\n(display data): <Figure size 5000x2500 with 1 Axes>"
							},
							"AQAAAAN3BAAAAAAAN3cEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							143,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAADd3BAAAAAAAOXcEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							144,
							1,
							"append",
							{
								"characters": "\nError: TypeError, scatter() got multiple values for argument 'c'.\n            \nTraceback:\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/2674779671.py in <module>\n     16 # ax.scatter(*vxy, c=cc)\n     17 \n---> 18 ax.scatter(*vv[0], c=cc)\n     19 ax.scatter(*vv[1], c=cc)\n     20 # ax.scatter(*vv_, c=cc_, cmap=\"Reds\")\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/matplotlib/__init__.py in inner(ax, data, *args, **kwargs)\n   1359     def inner(ax, *args, data=None, **kwargs):\n   1360         if data is None:\n-> 1361             return func(ax, *map(sanitize_sequence, args), **kwargs)\n   1362 \n   1363         bound = new_sig.bind(ax, *args, **kwargs)\n\nTypeError: scatter() got multiple values for argument 'c'"
							},
							"AQAAADl3BAAAAAAAznoEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							145,
							1,
							"append",
							{
								"characters": "\n(display data): <Figure size 5000x2500 with 1 Axes>"
							},
							"AQAAAM56BAAAAAAAAnsEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							146,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAAJ7BAAAAAAABHsEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							147,
							1,
							"append",
							{
								"characters": "\n(display data): <matplotlib.collections.PathCollection at 0x7fb5782c12b0>"
							},
							"AQAAAAR7BAAAAAAATnsEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							148,
							1,
							"append",
							{
								"characters": "\n(display data): <Figure size 5000x2500 with 1 Axes>"
							},
							"AQAAAE57BAAAAAAAgnsEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							149,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAIJ7BAAAAAAAhHsEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							150,
							1,
							"append",
							{
								"characters": "\nError: TypeError, scatter() got multiple values for argument 'c'.\n            \nTraceback:\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/2297936066.py in <module>\n     16 # ax.scatter(*vxy, c=cc)\n     17 \n---> 18 ax.scatter(*vv, c=cc)\n     19 # ax.scatter(*vv, c=cc)\n     20 # ax.scatter(*vv_, c=cc_, cmap=\"Reds\")\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/matplotlib/__init__.py in inner(ax, data, *args, **kwargs)\n   1359     def inner(ax, *args, data=None, **kwargs):\n   1360         if data is None:\n-> 1361             return func(ax, *map(sanitize_sequence, args), **kwargs)\n   1362 \n   1363         bound = new_sig.bind(ax, *args, **kwargs)\n\nTypeError: scatter() got multiple values for argument 'c'"
							},
							"AQAAAIR7BAAAAAAAFX8EAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							151,
							1,
							"append",
							{
								"characters": "\n(display data): <Figure size 5000x2500 with 1 Axes>"
							},
							"AQAAABV/BAAAAAAASX8EAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							152,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAEl/BAAAAAAAS38EAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							153,
							1,
							"append",
							{
								"characters": "\nError: TypeError, scatter() got multiple values for argument 'c'.\n            \nTraceback:\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/3427623594.py in <module>\n     16 # ax.scatter(*vxy, c=cc)\n     17 \n---> 18 ax.scatter(*vv[0], c=cc)\n     19 # ax.scatter(*vv, c=cc)\n     20 # ax.scatter(*vv_, c=cc_, cmap=\"Reds\")\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/matplotlib/__init__.py in inner(ax, data, *args, **kwargs)\n   1359     def inner(ax, *args, data=None, **kwargs):\n   1360         if data is None:\n-> 1361             return func(ax, *map(sanitize_sequence, args), **kwargs)\n   1362 \n   1363         bound = new_sig.bind(ax, *args, **kwargs)\n\nTypeError: scatter() got multiple values for argument 'c'"
							},
							"AQAAAEt/BAAAAAAA34IEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							154,
							1,
							"append",
							{
								"characters": "\n(display data): <Figure size 5000x2500 with 1 Axes>"
							},
							"AQAAAN+CBAAAAAAAE4MEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							155,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAABODBAAAAAAAFYMEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							156,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[[  5.23   5.35   5.35   5.35   5.35 ...  29.18  29.18  29.18  29.18\n   29.3 ]\n [109.9  110.39 110.39 110.39 110.39 ...  43.98  43.98  43.98  43.98\n   42.5 ]\n [  5.23   5.35   5.35   5.35   5.35 ...  29.18  29.18  29.18  29.18\n   29.3 ]\n [110.55 108.93 108.93 108.93 108.93 ...  42.3   42.3   42.3   42.3\n   42.31]]\n"
							},
							"AQAAABWDBAAAAAAAXIQEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							157,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAFyEBAAAAAAAXoQEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							158,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[ 5.23  5.35  5.35  5.35  5.35 ... 29.18 29.18 29.18 29.18 29.3 ]\n"
							},
							"AQAAAF6EBAAAAAAAq4QEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							159,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAKuEBAAAAAAArYQEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							160,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[109.9  110.39 110.39 110.39 110.39 ...  43.98  43.98  43.98  43.98  42.5 ]\n"
							},
							"AQAAAK2EBAAAAAAABIUEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							161,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAASFBAAAAAAABoUEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							162,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[[ 5.23  5.35  5.35  5.35  5.35 ... 29.18 29.18 29.18 29.18 29.3 ]]\n"
							},
							"AQAAAAaFBAAAAAAAVYUEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							163,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAFWFBAAAAAAAV4UEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							164,
							1,
							"append",
							{
								"characters": "\n(display data): <matplotlib.collections.PathCollection at 0x7fb569ee5460>"
							},
							"AQAAAFeFBAAAAAAAoYUEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							165,
							1,
							"append",
							{
								"characters": "\n(display data): <Figure size 5000x2500 with 1 Axes>"
							},
							"AQAAAKGFBAAAAAAA1YUEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							166,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAANWFBAAAAAAA14UEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							167,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[[ 5.23  5.35  5.35  5.35  5.35 ... 29.18 29.18 29.18 29.18 29.3 ]]\n"
							},
							"AQAAANeFBAAAAAAAJoYEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							168,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAACaGBAAAAAAAKIYEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							169,
							1,
							"append",
							{
								"characters": "\n(display data): <matplotlib.collections.PathCollection at 0x7fb549618340>"
							},
							"AQAAACiGBAAAAAAAcoYEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							170,
							1,
							"append",
							{
								"characters": "\n(display data): <Figure size 5000x2500 with 1 Axes>"
							},
							"AQAAAHKGBAAAAAAApoYEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							171,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAKaGBAAAAAAAqIYEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							172,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[[ 5.23  5.35  5.35  5.35  5.35 ... 29.18 29.18 29.18 29.18 29.3 ]]\n"
							},
							"AQAAAKiGBAAAAAAA94YEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							173,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAPeGBAAAAAAA+YYEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							174,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[[  5.23   5.35   5.35   5.35   5.35 ...  29.18  29.18  29.18  29.18\n   29.3 ]\n [109.9  110.39 110.39 110.39 110.39 ...  43.98  43.98  43.98  43.98\n   42.5 ]\n [  5.23   5.35   5.35   5.35   5.35 ...  29.18  29.18  29.18  29.18\n   29.3 ]\n [110.55 108.93 108.93 108.93 108.93 ...  42.3   42.3   42.3   42.3\n   42.31]]\n"
							},
							"AQAAAPmGBAAAAAAAQIgEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							175,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAECIBAAAAAAAQogEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							176,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[[  5.23   5.35   5.35   5.35   5.35 ...  29.18  29.18  29.18  29.18\n   29.3 ]\n [109.9  110.39 110.39 110.39 110.39 ...  43.98  43.98  43.98  43.98\n   42.5 ]\n [  5.23   5.35   5.35   5.35   5.35 ...  29.18  29.18  29.18  29.18\n   29.3 ]\n [110.55 108.93 108.93 108.93 108.93 ...  42.3   42.3   42.3   42.3\n   42.31]]\n[[  5.23   5.35   5.35   5.35   5.35 ...   5.35   5.35   5.35   5.35\n    5.23]\n [109.9  110.39 110.39 110.39 110.39 ... 108.93 108.93 108.93 108.93\n  110.55]]\n"
							},
							"AQAAAEKIBAAAAAAAKIoEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							177,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAACiKBAAAAAAAKooEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							178,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[[[  5.23   5.35   5.35   5.35   5.35 ...  29.18  29.18  29.18  29.18\n    29.3 ]\n  [109.9  110.39 110.39 110.39 110.39 ...  43.98  43.98  43.98  43.98\n    42.5 ]]\n\n [[  5.23   5.35   5.35   5.35   5.35 ...  29.18  29.18  29.18  29.18\n    29.3 ]\n  [110.55 108.93 108.93 108.93 108.93 ...  42.3   42.3   42.3   42.3\n    42.31]]]\n[[  5.23   5.35   5.35   5.35   5.35 ...   5.35   5.35   5.35   5.35\n    5.23]\n [109.9  110.39 110.39 110.39 110.39 ... 108.93 108.93 108.93 108.93\n  110.55]]\n"
							},
							"AQAAACqKBAAAAAAAG4wEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							179,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAABuMBAAAAAAAHYwEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							180,
							1,
							"append",
							{
								"characters": "\n(display data): <matplotlib.collections.PathCollection at 0x7fb549b03370>"
							},
							"AQAAAB2MBAAAAAAAZ4wEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							181,
							1,
							"append",
							{
								"characters": "\n(display data): <Figure size 5000x2500 with 1 Axes>"
							},
							"AQAAAGeMBAAAAAAAm4wEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							182,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAJuMBAAAAAAAnYwEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							183,
							1,
							"append",
							{
								"characters": "\nError: ValueError, object too deep for desired array.\n            \nTraceback:\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/103116178.py in <module>\n      1 vv = VV(eye.plot[\"eye\"])\n----> 2 np.searchsorted(vv, 12)\n\n<__array_function__ internals> in searchsorted(*args, **kwargs)\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/numpy/core/fromnumeric.py in searchsorted(a, v, side, sorter)\n   1348 \n   1349     \"\"\"\n-> 1350     return _wrapfunc(a, 'searchsorted', v, side=side, sorter=sorter)\n   1351 \n   1352 \n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/numpy/core/fromnumeric.py in _wrapfunc(obj, method, *args, **kwds)\n     55 \n     56     try:\n---> 57         return bound(*args, **kwds)\n     58     except TypeError:\n     59         # A TypeError occurs if the object does have such a method in its\n\nValueError: object too deep for desired array"
							},
							"AQAAAJ2MBAAAAAAA25AEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							184,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAANuQBAAAAAAA3ZAEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							185,
							1,
							"append",
							{
								"characters": "\nError: ValueError, object too deep for desired array.\n            \nTraceback:\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/172197504.py in <module>\n      1 vv = VV(eye.plot[\"eye\"])\n----> 2 np.searchsorted(vv[0], 12)\n\n<__array_function__ internals> in searchsorted(*args, **kwargs)\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/numpy/core/fromnumeric.py in searchsorted(a, v, side, sorter)\n   1348 \n   1349     \"\"\"\n-> 1350     return _wrapfunc(a, 'searchsorted', v, side=side, sorter=sorter)\n   1351 \n   1352 \n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/numpy/core/fromnumeric.py in _wrapfunc(obj, method, *args, **kwds)\n     55 \n     56     try:\n---> 57         return bound(*args, **kwds)\n     58     except TypeError:\n     59         # A TypeError occurs if the object does have such a method in its\n\nValueError: object too deep for desired array"
							},
							"AQAAAN2QBAAAAAAAHpUEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							186,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAB6VBAAAAAAAIJUEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							187,
							1,
							"append",
							{
								"characters": "\n(display data): 6133"
							},
							"AQAAACCVBAAAAAAANZUEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							188,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAADWVBAAAAAAAN5UEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							189,
							1,
							"append",
							{
								"characters": "\nError: TypeError, 'numpy.ndarray' object is not callable.\n            \nTraceback:\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/3474723655.py in <module>\n      1 vv = VV(eye.plot[\"eye\"])\n----> 2 vv(np.searchsorted(vv[0][0], 12))\n\nTypeError: 'numpy.ndarray' object is not callable"
							},
							"AQAAADeVBAAAAAAA+pYEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							190,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAPqWBAAAAAAA/JYEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							191,
							1,
							"append",
							{
								"characters": "\n(display data): 12.035294117647059"
							},
							"AQAAAPyWBAAAAAAAH5cEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							192,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAB+XBAAAAAAAIZcEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							193,
							1,
							"append",
							{
								"characters": "\n(display data): 12.035294117647059"
							},
							"AQAAACGXBAAAAAAARJcEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							194,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAESXBAAAAAAARpcEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							195,
							1,
							"append",
							{
								"characters": "\n(display data): 11.913725490196079"
							},
							"AQAAAEaXBAAAAAAAaZcEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							196,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAGmXBAAAAAAAa5cEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							197,
							1,
							"append",
							{
								"characters": "\n(display data): 12.035294117647059"
							},
							"AQAAAGuXBAAAAAAAjpcEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							198,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAI6XBAAAAAAAkJcEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							199,
							1,
							"append",
							{
								"characters": "\n(display data): 12.035294117647059"
							},
							"AQAAAJCXBAAAAAAAs5cEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							200,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAALOXBAAAAAAAtZcEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							201,
							1,
							"append",
							{
								"characters": "\n(display data): 12.035294117647059"
							},
							"AQAAALWXBAAAAAAA2JcEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							202,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAANiXBAAAAAAA2pcEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							203,
							1,
							"append",
							{
								"characters": "\n(display data): 12.035294117647059"
							},
							"AQAAANqXBAAAAAAA/ZcEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							204,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAP2XBAAAAAAA/5cEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							205,
							1,
							"append",
							{
								"characters": "\n(display data): 12.035294117647059"
							},
							"AQAAAP+XBAAAAAAAIpgEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							206,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAACKYBAAAAAAAJJgEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							207,
							1,
							"append",
							{
								"characters": "\n(display data): 12.64313725490196"
							},
							"AQAAACSYBAAAAAAARpgEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							208,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAEaYBAAAAAAASJgEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							209,
							1,
							"append",
							{
								"characters": "\n(display data): 12.156862745098039"
							},
							"AQAAAEiYBAAAAAAAa5gEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							210,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAGuYBAAAAAAAbZgEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							211,
							1,
							"append",
							{
								"characters": "\n(display data): 12.156862745098039"
							},
							"AQAAAG2YBAAAAAAAkJgEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							212,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAJCYBAAAAAAAkpgEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							213,
							1,
							"append",
							{
								"characters": "\n(display data): 12.035294117647059"
							},
							"AQAAAJKYBAAAAAAAtZgEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							214,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAALWYBAAAAAAAt5gEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							215,
							1,
							"append",
							{
								"characters": "\n(stdout):\n12.035294117647059\n12.035294117647059\n"
							},
							"AQAAALeYBAAAAAAA6JgEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							216,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAOiYBAAAAAAA6pgEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							217,
							1,
							"append",
							{
								"characters": "\n(stdout):\n12.035294117647059\n12.035294117647059\n"
							},
							"AQAAAOqYBAAAAAAAG5kEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							220,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAABuZBAAAAAAAHZkEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							221,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[]\n[]\n"
							},
							"AQAAAB2ZBAAAAAAALpkEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							222,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAC6ZBAAAAAAAMJkEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							223,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[]\n[]\n"
							},
							"AQAAADCZBAAAAAAAQZkEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							224,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAEGZBAAAAAAAQ5kEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							225,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n[]\n[]\n"
							},
							"AQAAAEOZBAAAAAAAc5kEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							226,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAHOZBAAAAAAAdZkEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							227,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n[5, 6, 7, 8, 9]\n[]\n"
							},
							"AQAAAHWZBAAAAAAAspkEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							228,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAALKZBAAAAAAAtJkEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							229,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n[5, 6, 7, 8, 9]\n[9]\n"
							},
							"AQAAALSZBAAAAAAA8pkEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							230,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAPKZBAAAAAAA9JkEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							231,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n[5, 6, 7, 8, 9]\n[]\n"
							},
							"AQAAAPSZBAAAAAAAMZoEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							232,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAADGaBAAAAAAAM5oEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							233,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n[5, 6, 7, 8, 9]\n[]\n"
							},
							"AQAAADOaBAAAAAAAcJoEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							234,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAHCaBAAAAAAAcpoEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							235,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n[5, 6, 7, 8, 9]\n[5, 4, 3, 2, 1]\n"
							},
							"AQAAAHKaBAAAAAAAvJoEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							236,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAALyaBAAAAAAAvpoEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							237,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n[5, 6, 7, 8, 9]\n[5, 4, 3, 2, 1, 0]\n"
							},
							"AQAAAL6aBAAAAAAAC5sEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							238,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAAubBAAAAAAADZsEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							239,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n[5, 6, 7, 8, 9]\n[4, 3, 2, 1, 0]\n"
							},
							"AQAAAA2bBAAAAAAAV5sEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							242,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAFebBAAAAAAAWZsEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							243,
							1,
							"append",
							{
								"characters": "\n(display data): 8"
							},
							"AQAAAFmbBAAAAAAAa5sEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							245,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAGubBAAAAAAAbZsEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							246,
							1,
							"append",
							{
								"characters": "\n(stdout):\n> \u001b[0;32m/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/2704545193.py\u001b[0m(88)\u001b[0;36mscan\u001b[0;34m()\u001b[0m\n\u001b[0;32m     86 \u001b[0;31m            \u001b[0;32mfor\u001b[0m \u001b[0mx_loc\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mi_maxh\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mw_range\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mw_interval\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     87 \u001b[0;31m                \u001b[0;32mimport\u001b[0m \u001b[0mpdb\u001b[0m\u001b[0;34m;\u001b[0m \u001b[0mpdb\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_trace\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# breakpoint 0f808191 //\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m---> 88 \u001b[0;31m                \u001b[0;32mif\u001b[0m \u001b[0mvv\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mx_loc\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0my_val\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     89 \u001b[0;31m                    \u001b[0;32mfor\u001b[0m \u001b[0mx_loc2\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx_loc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mSAMPLES\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     90 \u001b[0;31m                        \u001b[0;32mif\u001b[0m \u001b[0;36m0.99\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0my_val\u001b[0m \u001b[0;34m<\u001b[0m \u001b[0mvv\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mx_loc\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m<\u001b[0m \u001b[0my_val\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0;36m1.01\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\n"
							},
							"AQAAAG2bBAAAAAAAlqAEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							247,
							1,
							"append",
							{
								"characters": "\nError: BdbQuit, .\n            \nTraceback:\n---------------------------------------------------------------------------\nBdbQuit                                   Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/583266044.py in <module>\n      7     analog=False,\n      8 )\n----> 9 eye = Eye(filt)\n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/2704545193.py in __init__(self, _filt)\n     22         self.xline = None\n     23         self.yline = None\n---> 24         self.gen_plt_data(_top, _bot)\n     25         print(self.scatter.keys())\n     26 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/2704545193.py in gen_plt_data(self, top, bot)\n     39         self.plot[\"signal\"] = np.stack([[self.t, top], [self.t, bot]], axis=2)\n     40         self.init_points(top, bot)\n---> 41         self.scan(self.plot[\"signal\"])\n     42     #%%\n     43 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/2704545193.py in scan(self, h_eye)\n     86             for x_loc in range(i_maxh, w_range, w_interval):\n     87                 import pdb; pdb.set_trace()  # breakpoint 0f808191 //\n---> 88                 if vv[1][x_loc] > y_val:\n     89                     for x_loc2 in range(x_loc, SAMPLES, -1):\n     90                         if 0.99 * y_val < vv[1][x_loc] < y_val * 1.01:\n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/2704545193.py in scan(self, h_eye)\n     86             for x_loc in range(i_maxh, w_range, w_interval):\n     87                 import pdb; pdb.set_trace()  # breakpoint 0f808191 //\n---> 88                 if vv[1][x_loc] > y_val:\n     89                     for x_loc2 in range(x_loc, SAMPLES, -1):\n     90                         if 0.99 * y_val < vv[1][x_loc] < y_val * 1.01:\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/bdb.py in trace_dispatch(self, frame, event, arg)\n     86             return # None\n     87         if event == 'line':\n---> 88             return self.dispatch_line(frame)\n     89         if event == 'call':\n     90             return self.dispatch_call(frame, arg)\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/bdb.py in dispatch_line(self, frame)\n    111         if self.stop_here(frame) or self.break_here(frame):\n    112             self.user_line(frame)\n--> 113             if self.quitting: raise BdbQuit\n    114         return self.trace_dispatch\n    115 \n\nBdbQuit: "
							},
							"AQAAAJagBAAAAAAARKoEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							248,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAESqBAAAAAAARqoEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							249,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAEaqBAAAAAAASKoEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							250,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[[ 2.   12.  ]\n [ 3.   12.  ]\n [ 4.   12.  ]\n [ 5.   12.  ]\n [ 6.   12.  ]\n [ 7.   13.98]\n [ 8.   14.1 ]\n [ 9.   12.  ]\n [10.   12.  ]\n [11.   14.35]\n [12.   14.47]\n [13.   12.  ]\n [14.   14.59]\n [15.   12.  ]\n [16.   14.71]\n [17.   14.83]\n [18.   12.  ]\n [19.   14.95]\n [20.   12.  ]\n [21.   15.07]\n [22.   12.  ]\n [23.   15.2 ]\n [24.   12.  ]\n [25.   15.32]\n [26.   12.  ]\n [27.   15.44]\n [28.   15.44]\n [29.   15.56]\n [30.   15.56]\n [31.   15.68]\n [32.   15.68]\n [33.   12.  ]\n [34.   15.8 ]\n [35.   15.8 ]\n [36.   15.93]\n [37.   15.93]\n [38.   16.05]\n [39.   16.05]\n [40.   16.17]\n [41.   16.17]\n [42.   16.17]\n [43.   16.29]\n [44.   16.29]\n [45.   16.29]\n [46.   16.41]\n [47.   16.41]\n [48.   16.53]\n [49.   16.53]\n [50.   16.53]\n [51.   16.65]\n [52.   16.65]\n [53.   16.78]\n [54.   16.78]\n [55.   16.78]\n [56.   16.9 ]\n [57.   16.9 ]\n [58.   16.9 ]\n [59.   17.02]\n [60.   17.02]\n [61.   17.14]\n [62.   17.14]\n [63.   17.14]\n [64.   17.26]\n [65.   17.26]\n [66.   17.26]\n [67.   17.38]\n [68.   17.38]\n [69.   17.51]\n [70.   17.51]\n [71.   17.51]\n [72.   17.63]\n [73.   17.63]\n [74.   17.63]\n [75.   17.75]\n [76.   17.75]\n [77.   17.87]\n [78.   17.87]\n [79.   17.87]\n [80.   17.99]\n [81.   17.99]\n [82.   18.11]\n [83.   18.11]\n [84.   18.11]\n [85.   18.24]\n [86.   18.24]\n [87.   18.36]\n [88.   18.36]\n [89.   18.36]\n [90.   18.48]]\n[[ 2.   12.  ]\n [ 3.   12.  ]\n [ 4.   11.55]\n [ 5.   11.43]\n [ 6.   11.31]\n [ 7.   11.18]\n [ 8.   12.  ]\n [ 9.   12.  ]\n [10.   12.  ]\n [11.   10.82]\n [12.   12.  ]\n [13.   12.  ]\n [14.   10.58]\n [15.   12.  ]\n [16.   10.45]\n [17.   12.  ]\n [18.   10.33]\n [19.   10.21]\n [20.   12.  ]\n [21.   10.09]\n [22.   12.  ]\n [23.    9.97]\n [24.   12.  ]\n [25.    9.85]\n [26.    9.85]\n [27.    9.73]\n [28.    9.73]\n [29.    9.6 ]\n [30.    9.6 ]\n [31.    9.48]\n [32.    9.48]\n [33.    9.36]\n [34.    9.36]\n [35.   12.  ]\n [36.    9.24]\n [37.    9.24]\n [38.    9.12]\n [39.    9.12]\n [40.    9.  ]\n [41.    9.  ]\n [42.    9.  ]\n [43.    8.87]\n [44.    8.87]\n [45.    8.75]\n [46.    8.75]\n [47.    8.75]\n [48.    8.63]\n [49.    8.63]\n [50.    8.51]\n [51.    8.51]\n [52.    8.51]\n [53.    8.39]\n [54.    8.39]\n [55.    8.27]\n [56.    8.27]\n [57.    8.27]\n [58.    8.15]\n [59.    8.15]\n [60.    8.02]\n [61.    8.02]\n [62.    8.02]\n [63.    7.9 ]\n [64.    7.9 ]\n [65.    7.78]\n [66.    7.78]\n [67.    7.78]\n [68.    7.66]\n [69.    7.66]\n [70.    7.66]\n [71.    7.54]\n [72.    7.54]\n [73.    7.42]\n [74.    7.42]\n [75.    7.42]\n [76.    7.29]\n [77.    7.29]\n [78.    7.17]\n [79.    7.17]\n [80.    7.17]\n [81.    7.05]\n [82.    7.05]\n [83.    6.93]\n [84.    6.93]\n [85.    6.93]\n [86.    6.81]\n [87.    6.81]\n [88.    6.69]\n [89.    6.69]\n [90.    6.56]]\n6.0\n0\n0\n43\n"
							},
							"AQAAAEiqBAAAAAAAzrQEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							251,
							1,
							"append",
							{
								"characters": "\nError: ValueError, max() arg is an empty sequence.\n            \nTraceback:\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/583266044.py in <module>\n      7     analog=False,\n      8 )\n----> 9 eye = Eye(filt)\n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/3743053115.py in __init__(self, _filt)\n     22         self.xline = None\n     23         self.yline = None\n---> 24         self.gen_plt_data(_top, _bot)\n     25         print(self.scatter.keys())\n     26 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/3743053115.py in gen_plt_data(self, top, bot)\n     39         self.plot[\"signal\"] = np.stack([[self.t, top], [self.t, bot]], axis=2)\n     40         self.init_points(top, bot)\n---> 41         self.scan(self.plot[\"signal\"])\n     42     #%%\n     43 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/3743053115.py in scan(self, h_eye)\n    166 \n    167 \n--> 168         i_maxw, i_maxh = [d[\"w\"].index(max(d[\"w\"])), d[\"h\"].index(max(d[\"h\"]))]\n    169 \n    170         self.scatter[\"scan\"] = {\n\nValueError: max() arg is an empty sequence"
							},
							"AQAAAM60BAAAAAAAvbkEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							252,
							2,
							"append",
							{
								"characters": "\n\n"
							},
							"AgAAAL25BAAAAAAAv7kEAAAAAAAAAAAAv7kEAAAAAADBuQQAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							253,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[[ 2.   12.  ]\n [ 3.   12.  ]\n [ 4.   12.  ]\n [ 5.   12.  ]\n [ 6.   12.  ]\n [ 7.   13.98]\n [ 8.   14.1 ]\n [ 9.   12.  ]\n [10.   12.  ]\n [11.   14.35]\n [12.   14.47]\n [13.   12.  ]\n [14.   14.59]\n [15.   12.  ]\n [16.   14.71]\n [17.   14.83]\n [18.   12.  ]\n [19.   14.95]\n [20.   12.  ]\n [21.   15.07]\n [22.   12.  ]\n [23.   15.2 ]\n [24.   12.  ]\n [25.   15.32]\n [26.   12.  ]\n [27.   15.44]\n [28.   15.44]\n [29.   15.56]\n [30.   15.56]\n [31.   15.68]\n [32.   15.68]\n [33.   12.  ]\n [34.   15.8 ]\n [35.   15.8 ]\n [36.   15.93]\n [37.   15.93]\n [38.   16.05]\n [39.   16.05]\n [40.   16.17]\n [41.   16.17]\n [42.   16.17]\n [43.   16.29]\n [44.   16.29]\n [45.   16.29]\n [46.   16.41]\n [47.   16.41]\n [48.   16.53]\n [49.   16.53]\n [50.   16.53]\n [51.   16.65]\n [52.   16.65]\n [53.   16.78]\n [54.   16.78]\n [55.   16.78]\n [56.   16.9 ]\n [57.   16.9 ]\n [58.   16.9 ]\n [59.   17.02]\n [60.   17.02]\n [61.   17.14]\n [62.   17.14]\n [63.   17.14]\n [64.   17.26]\n [65.   17.26]\n [66.   17.26]\n [67.   17.38]\n [68.   17.38]\n [69.   17.51]\n [70.   17.51]\n [71.   17.51]\n [72.   17.63]\n [73.   17.63]\n [74.   17.63]\n [75.   17.75]\n [76.   17.75]\n [77.   17.87]\n [78.   17.87]\n [79.   17.87]\n [80.   17.99]\n [81.   17.99]\n [82.   18.11]\n [83.   18.11]\n [84.   18.11]\n [85.   18.24]\n [86.   18.24]\n [87.   18.36]\n [88.   18.36]\n [89.   18.36]\n [90.   18.48]]\n[[ 2.   12.  ]\n [ 3.   12.  ]\n [ 4.   11.55]\n [ 5.   11.43]\n [ 6.   11.31]\n [ 7.   11.18]\n [ 8.   12.  ]\n [ 9.   12.  ]\n [10.   12.  ]\n [11.   10.82]\n [12.   12.  ]\n [13.   12.  ]\n [14.   10.58]\n [15.   12.  ]\n [16.   10.45]\n [17.   12.  ]\n [18.   10.33]\n [19.   10.21]\n [20.   12.  ]\n [21.   10.09]\n [22.   12.  ]\n [23.    9.97]\n [24.   12.  ]\n [25.    9.85]\n [26.    9.85]\n [27.    9.73]\n [28.    9.73]\n [29.    9.6 ]\n [30.    9.6 ]\n [31.    9.48]\n [32.    9.48]\n [33.    9.36]\n [34.    9.36]\n [35.   12.  ]\n [36.    9.24]\n [37.    9.24]\n [38.    9.12]\n [39.    9.12]\n [40.    9.  ]\n [41.    9.  ]\n [42.    9.  ]\n [43.    8.87]\n [44.    8.87]\n [45.    8.75]\n [46.    8.75]\n [47.    8.75]\n [48.    8.63]\n [49.    8.63]\n [50.    8.51]\n [51.    8.51]\n [52.    8.51]\n [53.    8.39]\n [54.    8.39]\n [55.    8.27]\n [56.    8.27]\n [57.    8.27]\n [58.    8.15]\n [59.    8.15]\n [60.    8.02]\n [61.    8.02]\n [62.    8.02]\n [63.    7.9 ]\n [64.    7.9 ]\n [65.    7.78]\n [66.    7.78]\n [67.    7.78]\n [68.    7.66]\n [69.    7.66]\n [70.    7.66]\n [71.    7.54]\n [72.    7.54]\n [73.    7.42]\n [74.    7.42]\n [75.    7.42]\n [76.    7.29]\n [77.    7.29]\n [78.    7.17]\n [79.    7.17]\n [80.    7.17]\n [81.    7.05]\n [82.    7.05]\n [83.    6.93]\n [84.    6.93]\n [85.    6.93]\n [86.    6.81]\n [87.    6.81]\n [88.    6.69]\n [89.    6.69]\n [90.    6.56]]\n6.0\n0\n0\n43\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAMG5BAAAAAAAecQEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							254,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAHnEBAAAAAAAe8QEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							255,
							1,
							"append",
							{
								"characters": "\nError: ValueError, could not broadcast input array from shape (2,) into shape (1,).\n            \nTraceback:\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/1328742771.py in <module>\n     11 ax.scatter(**eye.scatter[\"average\"])\n     12 ax.scatter(**eye.scatter[\"scan\"])\n---> 13 ax.hlines(**eye.xline)\n     14 ax.vlines(**eye.yline)\n     15 ax.set_facecolor(\"black\")\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/matplotlib/__init__.py in inner(ax, data, *args, **kwargs)\n   1359     def inner(ax, *args, data=None, **kwargs):\n   1360         if data is None:\n-> 1361             return func(ax, *map(sanitize_sequence, args), **kwargs)\n   1362 \n   1363         bound = new_sig.bind(ax, *args, **kwargs)\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/matplotlib/axes/_axes.py in hlines(self, y, xmin, xmax, colors, linestyles, label, **kwargs)\n   1033 \n   1034         masked_verts = np.ma.empty((len(y), 2, 2))\n-> 1035         masked_verts[:, 0, 0] = xmin\n   1036         masked_verts[:, 0, 1] = y\n   1037         masked_verts[:, 1, 0] = xmax\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/numpy/ma/core.py in __setitem__(self, indx, value)\n   3377         if _mask is nomask:\n   3378             # Set the data, then the mask\n-> 3379             _data[indx] = dval\n   3380             if mval is not nomask:\n   3381                 _mask = self._mask = make_mask_none(self.shape, _dtype)\n\nValueError: could not broadcast input array from shape (2,) into shape (1,)"
							},
							"AQAAAHvEBAAAAAAAPssEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							256,
							1,
							"append",
							{
								"characters": "\n(display data): <Figure size 5000x2500 with 1 Axes>"
							},
							"AQAAAD7LBAAAAAAAcssEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							257,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAHLLBAAAAAAAdMsEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							258,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAHTLBAAAAAAAdssEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							259,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[[ 2.   12.  ]\n [ 3.   12.  ]\n [ 4.   12.  ]\n [ 5.   12.  ]\n [ 6.   12.  ]\n [ 7.   13.98]\n [ 8.   14.1 ]\n [ 9.   12.  ]\n [10.   12.  ]\n [11.   14.35]\n [12.   14.47]\n [13.   12.  ]\n [14.   14.59]\n [15.   12.  ]\n [16.   14.71]\n [17.   14.83]\n [18.   12.  ]\n [19.   14.95]\n [20.   12.  ]\n [21.   15.07]\n [22.   12.  ]\n [23.   15.2 ]\n [24.   12.  ]\n [25.   15.32]\n [26.   12.  ]\n [27.   15.44]\n [28.   15.44]\n [29.   15.56]\n [30.   15.56]\n [31.   15.68]\n [32.   15.68]\n [33.   12.  ]\n [34.   15.8 ]\n [35.   15.8 ]\n [36.   15.93]\n [37.   15.93]\n [38.   16.05]\n [39.   16.05]\n [40.   16.17]\n [41.   16.17]\n [42.   16.17]\n [43.   16.29]\n [44.   16.29]\n [45.   16.29]\n [46.   16.41]\n [47.   16.41]\n [48.   16.53]\n [49.   16.53]\n [50.   16.53]\n [51.   16.65]\n [52.   16.65]\n [53.   16.78]\n [54.   16.78]\n [55.   16.78]\n [56.   16.9 ]\n [57.   16.9 ]\n [58.   16.9 ]\n [59.   17.02]\n [60.   17.02]\n [61.   17.14]\n [62.   17.14]\n [63.   17.14]\n [64.   17.26]\n [65.   17.26]\n [66.   17.26]\n [67.   17.38]\n [68.   17.38]\n [69.   17.51]\n [70.   17.51]\n [71.   17.51]\n [72.   17.63]\n [73.   17.63]\n [74.   17.63]\n [75.   17.75]\n [76.   17.75]\n [77.   17.87]\n [78.   17.87]\n [79.   17.87]\n [80.   17.99]\n [81.   17.99]\n [82.   18.11]\n [83.   18.11]\n [84.   18.11]\n [85.   18.24]\n [86.   18.24]\n [87.   18.36]\n [88.   18.36]\n [89.   18.36]\n [90.   18.48]]\n[[ 2.   12.  ]\n [ 3.   12.  ]\n [ 4.   11.55]\n [ 5.   11.43]\n [ 6.   11.31]\n [ 7.   11.18]\n [ 8.   12.  ]\n [ 9.   12.  ]\n [10.   12.  ]\n [11.   10.82]\n [12.   12.  ]\n [13.   12.  ]\n [14.   10.58]\n [15.   12.  ]\n [16.   10.45]\n [17.   12.  ]\n [18.   10.33]\n [19.   10.21]\n [20.   12.  ]\n [21.   10.09]\n [22.   12.  ]\n [23.    9.97]\n [24.   12.  ]\n [25.    9.85]\n [26.    9.85]\n [27.    9.73]\n [28.    9.73]\n [29.    9.6 ]\n [30.    9.6 ]\n [31.    9.48]\n [32.    9.48]\n [33.    9.36]\n [34.    9.36]\n [35.   12.  ]\n [36.    9.24]\n [37.    9.24]\n [38.    9.12]\n [39.    9.12]\n [40.    9.  ]\n [41.    9.  ]\n [42.    9.  ]\n [43.    8.87]\n [44.    8.87]\n [45.    8.75]\n [46.    8.75]\n [47.    8.75]\n [48.    8.63]\n [49.    8.63]\n [50.    8.51]\n [51.    8.51]\n [52.    8.51]\n [53.    8.39]\n [54.    8.39]\n [55.    8.27]\n [56.    8.27]\n [57.    8.27]\n [58.    8.15]\n [59.    8.15]\n [60.    8.02]\n [61.    8.02]\n [62.    8.02]\n [63.    7.9 ]\n [64.    7.9 ]\n [65.    7.78]\n [66.    7.78]\n [67.    7.78]\n [68.    7.66]\n [69.    7.66]\n [70.    7.66]\n [71.    7.54]\n [72.    7.54]\n [73.    7.42]\n [74.    7.42]\n [75.    7.42]\n [76.    7.29]\n [77.    7.29]\n [78.    7.17]\n [79.    7.17]\n [80.    7.17]\n [81.    7.05]\n [82.    7.05]\n [83.    6.93]\n [84.    6.93]\n [85.    6.93]\n [86.    6.81]\n [87.    6.81]\n [88.    6.69]\n [89.    6.69]\n [90.    6.56]]\n6.0\n0\n0\n43\n"
							},
							"AQAAAHbLBAAAAAAA/NUEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							260,
							1,
							"append",
							{
								"characters": "\nError: IndexError, index 43 is out of bounds for axis 0 with size 2.\n            \nTraceback:\n---------------------------------------------------------------------------\nIndexError                                Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/583266044.py in <module>\n      7     analog=False,\n      8 )\n----> 9 eye = Eye(filt)\n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/1239579828.py in __init__(self, _filt)\n     22         self.xline = None\n     23         self.yline = None\n---> 24         self.gen_plt_data(_top, _bot)\n     25         print(self.scatter.keys())\n     26 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/1239579828.py in gen_plt_data(self, top, bot)\n     39         self.plot[\"signal\"] = np.stack([[self.t, top], [self.t, bot]], axis=2)\n     40         self.init_points(top, bot)\n---> 41         self.scan(self.plot[\"signal\"])\n     42     #%%\n     43 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/1239579828.py in scan(self, h_eye)\n    177         self.xline = {\n    178             \"y\": i_maxw,\n--> 179             \"xmin\": d[\"l\"].T[i_maxw],\n    180             \"xmax\": d[\"r\"].T[i_maxw],\n    181             \"linestyles\": \"dashed\",\n\nIndexError: index 43 is out of bounds for axis 0 with size 2"
							},
							"AQAAAPzVBAAAAAAAO9sEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							261,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAADvbBAAAAAAAPdsEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							262,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAD3bBAAAAAAAP9sEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							263,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[[ 2.   12.  ]\n [ 3.   12.  ]\n [ 4.   12.  ]\n [ 5.   12.  ]\n [ 6.   12.  ]\n [ 7.   13.98]\n [ 8.   14.1 ]\n [ 9.   12.  ]\n [10.   12.  ]\n [11.   14.35]\n [12.   14.47]\n [13.   12.  ]\n [14.   14.59]\n [15.   12.  ]\n [16.   14.71]\n [17.   14.83]\n [18.   12.  ]\n [19.   14.95]\n [20.   12.  ]\n [21.   15.07]\n [22.   12.  ]\n [23.   15.2 ]\n [24.   12.  ]\n [25.   15.32]\n [26.   12.  ]\n [27.   15.44]\n [28.   15.44]\n [29.   15.56]\n [30.   15.56]\n [31.   15.68]\n [32.   15.68]\n [33.   12.  ]\n [34.   15.8 ]\n [35.   15.8 ]\n [36.   15.93]\n [37.   15.93]\n [38.   16.05]\n [39.   16.05]\n [40.   16.17]\n [41.   16.17]\n [42.   16.17]\n [43.   16.29]\n [44.   16.29]\n [45.   16.29]\n [46.   16.41]\n [47.   16.41]\n [48.   16.53]\n [49.   16.53]\n [50.   16.53]\n [51.   16.65]\n [52.   16.65]\n [53.   16.78]\n [54.   16.78]\n [55.   16.78]\n [56.   16.9 ]\n [57.   16.9 ]\n [58.   16.9 ]\n [59.   17.02]\n [60.   17.02]\n [61.   17.14]\n [62.   17.14]\n [63.   17.14]\n [64.   17.26]\n [65.   17.26]\n [66.   17.26]\n [67.   17.38]\n [68.   17.38]\n [69.   17.51]\n [70.   17.51]\n [71.   17.51]\n [72.   17.63]\n [73.   17.63]\n [74.   17.63]\n [75.   17.75]\n [76.   17.75]\n [77.   17.87]\n [78.   17.87]\n [79.   17.87]\n [80.   17.99]\n [81.   17.99]\n [82.   18.11]\n [83.   18.11]\n [84.   18.11]\n [85.   18.24]\n [86.   18.24]\n [87.   18.36]\n [88.   18.36]\n [89.   18.36]\n [90.   18.48]]\n[[ 2.   12.  ]\n [ 3.   12.  ]\n [ 4.   11.55]\n [ 5.   11.43]\n [ 6.   11.31]\n [ 7.   11.18]\n [ 8.   12.  ]\n [ 9.   12.  ]\n [10.   12.  ]\n [11.   10.82]\n [12.   12.  ]\n [13.   12.  ]\n [14.   10.58]\n [15.   12.  ]\n [16.   10.45]\n [17.   12.  ]\n [18.   10.33]\n [19.   10.21]\n [20.   12.  ]\n [21.   10.09]\n [22.   12.  ]\n [23.    9.97]\n [24.   12.  ]\n [25.    9.85]\n [26.    9.85]\n [27.    9.73]\n [28.    9.73]\n [29.    9.6 ]\n [30.    9.6 ]\n [31.    9.48]\n [32.    9.48]\n [33.    9.36]\n [34.    9.36]\n [35.   12.  ]\n [36.    9.24]\n [37.    9.24]\n [38.    9.12]\n [39.    9.12]\n [40.    9.  ]\n [41.    9.  ]\n [42.    9.  ]\n [43.    8.87]\n [44.    8.87]\n [45.    8.75]\n [46.    8.75]\n [47.    8.75]\n [48.    8.63]\n [49.    8.63]\n [50.    8.51]\n [51.    8.51]\n [52.    8.51]\n [53.    8.39]\n [54.    8.39]\n [55.    8.27]\n [56.    8.27]\n [57.    8.27]\n [58.    8.15]\n [59.    8.15]\n [60.    8.02]\n [61.    8.02]\n [62.    8.02]\n [63.    7.9 ]\n [64.    7.9 ]\n [65.    7.78]\n [66.    7.78]\n [67.    7.78]\n [68.    7.66]\n [69.    7.66]\n [70.    7.66]\n [71.    7.54]\n [72.    7.54]\n [73.    7.42]\n [74.    7.42]\n [75.    7.42]\n [76.    7.29]\n [77.    7.29]\n [78.    7.17]\n [79.    7.17]\n [80.    7.17]\n [81.    7.05]\n [82.    7.05]\n [83.    6.93]\n [84.    6.93]\n [85.    6.93]\n [86.    6.81]\n [87.    6.81]\n [88.    6.69]\n [89.    6.69]\n [90.    6.56]]\n6.0\n0\n0\n43\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAD/bBAAAAAAA9+UEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							264,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAPflBAAAAAAA+eUEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							265,
							1,
							"append",
							{
								"characters": "\n(display data): <matplotlib.collections.PathCollection at 0x7fb5695916d0>"
							},
							"AQAAAPnlBAAAAAAAQ+YEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							266,
							1,
							"append",
							{
								"characters": "\n(display data): <Figure size 5000x2500 with 1 Axes>"
							},
							"AQAAAEPmBAAAAAAAd+YEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							267,
							2,
							"append",
							{
								"characters": "\n\n"
							},
							"AgAAAHfmBAAAAAAAeeYEAAAAAAAAAAAAeeYEAAAAAAB75gQAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							268,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[[ 2.   12.  ]\n [ 3.   12.  ]\n [ 4.   12.  ]\n [ 5.   12.  ]\n [ 6.   12.  ]\n [ 7.   13.98]\n [ 8.   14.1 ]\n [ 9.   12.  ]\n [10.   12.  ]\n [11.   14.35]\n [12.   14.47]\n [13.   12.  ]\n [14.   14.59]\n [15.   12.  ]\n [16.   14.71]\n [17.   14.83]\n [18.   12.  ]\n [19.   14.95]\n [20.   12.  ]\n [21.   15.07]\n [22.   12.  ]\n [23.   15.2 ]\n [24.   12.  ]\n [25.   15.32]\n [26.   12.  ]\n [27.   15.44]\n [28.   15.44]\n [29.   15.56]\n [30.   15.56]\n [31.   15.68]\n [32.   15.68]\n [33.   12.  ]\n [34.   15.8 ]\n [35.   15.8 ]\n [36.   15.93]\n [37.   15.93]\n [38.   16.05]\n [39.   16.05]\n [40.   16.17]\n [41.   16.17]\n [42.   16.17]\n [43.   16.29]\n [44.   16.29]\n [45.   16.29]\n [46.   16.41]\n [47.   16.41]\n [48.   16.53]\n [49.   16.53]\n [50.   16.53]\n [51.   16.65]\n [52.   16.65]\n [53.   16.78]\n [54.   16.78]\n [55.   16.78]\n [56.   16.9 ]\n [57.   16.9 ]\n [58.   16.9 ]\n [59.   17.02]\n [60.   17.02]\n [61.   17.14]\n [62.   17.14]\n [63.   17.14]\n [64.   17.26]\n [65.   17.26]\n [66.   17.26]\n [67.   17.38]\n [68.   17.38]\n [69.   17.51]\n [70.   17.51]\n [71.   17.51]\n [72.   17.63]\n [73.   17.63]\n [74.   17.63]\n [75.   17.75]\n [76.   17.75]\n [77.   17.87]\n [78.   17.87]\n [79.   17.87]\n [80.   17.99]\n [81.   17.99]\n [82.   18.11]\n [83.   18.11]\n [84.   18.11]\n [85.   18.24]\n [86.   18.24]\n [87.   18.36]\n [88.   18.36]\n [89.   18.36]\n [90.   18.48]]\n[[ 2.   12.  ]\n [ 3.   12.  ]\n [ 4.   11.55]\n [ 5.   11.43]\n [ 6.   11.31]\n [ 7.   11.18]\n [ 8.   12.  ]\n [ 9.   12.  ]\n [10.   12.  ]\n [11.   10.82]\n [12.   12.  ]\n [13.   12.  ]\n [14.   10.58]\n [15.   12.  ]\n [16.   10.45]\n [17.   12.  ]\n [18.   10.33]\n [19.   10.21]\n [20.   12.  ]\n [21.   10.09]\n [22.   12.  ]\n [23.    9.97]\n [24.   12.  ]\n [25.    9.85]\n [26.    9.85]\n [27.    9.73]\n [28.    9.73]\n [29.    9.6 ]\n [30.    9.6 ]\n [31.    9.48]\n [32.    9.48]\n [33.    9.36]\n [34.    9.36]\n [35.   12.  ]\n [36.    9.24]\n [37.    9.24]\n [38.    9.12]\n [39.    9.12]\n [40.    9.  ]\n [41.    9.  ]\n [42.    9.  ]\n [43.    8.87]\n [44.    8.87]\n [45.    8.75]\n [46.    8.75]\n [47.    8.75]\n [48.    8.63]\n [49.    8.63]\n [50.    8.51]\n [51.    8.51]\n [52.    8.51]\n [53.    8.39]\n [54.    8.39]\n [55.    8.27]\n [56.    8.27]\n [57.    8.27]\n [58.    8.15]\n [59.    8.15]\n [60.    8.02]\n [61.    8.02]\n [62.    8.02]\n [63.    7.9 ]\n [64.    7.9 ]\n [65.    7.78]\n [66.    7.78]\n [67.    7.78]\n [68.    7.66]\n [69.    7.66]\n [70.    7.66]\n [71.    7.54]\n [72.    7.54]\n [73.    7.42]\n [74.    7.42]\n [75.    7.42]\n [76.    7.29]\n [77.    7.29]\n [78.    7.17]\n [79.    7.17]\n [80.    7.17]\n [81.    7.05]\n [82.    7.05]\n [83.    6.93]\n [84.    6.93]\n [85.    6.93]\n [86.    6.81]\n [87.    6.81]\n [88.    6.69]\n [89.    6.69]\n [90.    6.56]]\n6.0\n0\n0\n88\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAHvmBAAAAAAAM/EEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							269,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAADPxBAAAAAAANfEEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							270,
							1,
							"append",
							{
								"characters": "\n(display data): <matplotlib.collections.PathCollection at 0x7fb56992feb0>"
							},
							"AQAAADXxBAAAAAAAf/EEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							271,
							1,
							"append",
							{
								"characters": "\n(display data): <Figure size 5000x2500 with 1 Axes>"
							},
							"AQAAAH/xBAAAAAAAs/EEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							272,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAALPxBAAAAAAAtfEEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							273,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAALXxBAAAAAAAt/EEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							274,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[[ 2.   12.  ]\n [ 3.   12.  ]\n [ 4.   12.  ]\n [ 5.   12.  ]\n [ 6.   12.  ]\n [ 7.   13.98]\n [ 8.   14.1 ]\n [ 9.   12.  ]\n [10.   12.  ]\n [11.   14.35]\n [12.   14.47]\n [13.   12.  ]\n [14.   14.59]\n [15.   12.  ]\n [16.   14.71]\n [17.   14.83]\n [18.   12.  ]\n [19.   14.95]\n [20.   12.  ]\n [21.   15.07]\n [22.   12.  ]\n [23.   15.2 ]\n [24.   12.  ]\n [25.   15.32]\n [26.   12.  ]\n [27.   15.44]\n [28.   15.44]\n [29.   15.56]\n [30.   15.56]\n [31.   15.68]\n [32.   15.68]\n [33.   12.  ]\n [34.   15.8 ]\n [35.   15.8 ]\n [36.   15.93]\n [37.   15.93]\n [38.   16.05]\n [39.   16.05]\n [40.   16.17]\n [41.   16.17]\n [42.   16.17]\n [43.   16.29]\n [44.   16.29]\n [45.   16.29]\n [46.   16.41]\n [47.   16.41]\n [48.   16.53]\n [49.   16.53]\n [50.   16.53]\n [51.   16.65]\n [52.   16.65]\n [53.   16.78]\n [54.   16.78]\n [55.   16.78]\n [56.   16.9 ]\n [57.   16.9 ]\n [58.   16.9 ]\n [59.   17.02]\n [60.   17.02]\n [61.   17.14]\n [62.   17.14]\n [63.   17.14]\n [64.   17.26]\n [65.   17.26]\n [66.   17.26]\n [67.   17.38]\n [68.   17.38]\n [69.   17.51]\n [70.   17.51]\n [71.   17.51]\n [72.   17.63]\n [73.   17.63]\n [74.   17.63]\n [75.   17.75]\n [76.   17.75]\n [77.   17.87]\n [78.   17.87]\n [79.   17.87]\n [80.   17.99]\n [81.   17.99]\n [82.   18.11]\n [83.   18.11]\n [84.   18.11]\n [85.   18.24]\n [86.   18.24]\n [87.   18.36]\n [88.   18.36]\n [89.   18.36]\n [90.   18.48]]\n[[ 2.   12.  ]\n [ 3.   12.  ]\n [ 4.   11.55]\n [ 5.   11.43]\n [ 6.   11.31]\n [ 7.   11.18]\n [ 8.   12.  ]\n [ 9.   12.  ]\n [10.   12.  ]\n [11.   10.82]\n [12.   12.  ]\n [13.   12.  ]\n [14.   10.58]\n [15.   12.  ]\n [16.   10.45]\n [17.   12.  ]\n [18.   10.33]\n [19.   10.21]\n [20.   12.  ]\n [21.   10.09]\n [22.   12.  ]\n [23.    9.97]\n [24.   12.  ]\n [25.    9.85]\n [26.    9.85]\n [27.    9.73]\n [28.    9.73]\n [29.    9.6 ]\n [30.    9.6 ]\n [31.    9.48]\n [32.    9.48]\n [33.    9.36]\n [34.    9.36]\n [35.   12.  ]\n [36.    9.24]\n [37.    9.24]\n [38.    9.12]\n [39.    9.12]\n [40.    9.  ]\n [41.    9.  ]\n [42.    9.  ]\n [43.    8.87]\n [44.    8.87]\n [45.    8.75]\n [46.    8.75]\n [47.    8.75]\n [48.    8.63]\n [49.    8.63]\n [50.    8.51]\n [51.    8.51]\n [52.    8.51]\n [53.    8.39]\n [54.    8.39]\n [55.    8.27]\n [56.    8.27]\n [57.    8.27]\n [58.    8.15]\n [59.    8.15]\n [60.    8.02]\n [61.    8.02]\n [62.    8.02]\n [63.    7.9 ]\n [64.    7.9 ]\n [65.    7.78]\n [66.    7.78]\n [67.    7.78]\n [68.    7.66]\n [69.    7.66]\n [70.    7.66]\n [71.    7.54]\n [72.    7.54]\n [73.    7.42]\n [74.    7.42]\n [75.    7.42]\n [76.    7.29]\n [77.    7.29]\n [78.    7.17]\n [79.    7.17]\n [80.    7.17]\n [81.    7.05]\n [82.    7.05]\n [83.    6.93]\n [84.    6.93]\n [85.    6.93]\n [86.    6.81]\n [87.    6.81]\n [88.    6.69]\n [89.    6.69]\n [90.    6.56]]\n6.0\n0\n0\n88\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAALfxBAAAAAAAb/wEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							275,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAG/8BAAAAAAAcfwEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							276,
							1,
							"append",
							{
								"characters": "\n(display data): <Figure size 5000x2500 with 1 Axes>"
							},
							"AQAAAHH8BAAAAAAApfwEAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							277,
							2,
							"append",
							{
								"characters": "\n\n"
							},
							"AgAAAKX8BAAAAAAAp/wEAAAAAAAAAAAAp/wEAAAAAACp/AQAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							278,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[[ 2.   13.36]\n [ 3.   13.52]\n [ 4.   13.67]\n [ 5.   13.79]\n [ 6.   13.91]\n [ 7.   14.  ]\n [ 8.   14.09]\n [ 9.   14.18]\n [10.   14.27]\n [11.   14.36]\n [12.   14.45]\n [13.   14.52]\n [14.   14.61]\n [15.   14.67]\n [16.   14.73]\n [17.   14.79]\n [18.   14.88]\n [19.   14.94]\n [20.   15.  ]\n [21.   15.06]\n [22.   15.12]\n [23.   15.18]\n [24.   15.24]\n [25.   15.3 ]\n [26.   15.36]\n [27.   15.39]\n [28.   15.45]\n [29.   15.52]\n [30.   15.58]\n [31.   15.64]\n [32.   15.67]\n [33.   15.73]\n [34.   15.79]\n [35.   15.85]\n [36.   15.88]\n [37.   15.94]\n [38.   16.  ]\n [39.   16.03]\n [40.   16.09]\n [41.   16.12]\n [42.   16.18]\n [43.   16.24]\n [44.   16.27]\n [45.   16.33]\n [46.   16.36]\n [47.   16.42]\n [48.   16.45]\n [49.   16.52]\n [50.   16.58]\n [51.   16.61]\n [52.   16.67]\n [53.   16.7 ]\n [54.   16.76]\n [55.   16.79]\n [56.   16.85]\n [57.   16.88]\n [58.   16.94]\n [59.   16.97]\n [60.   17.03]\n [61.   17.06]\n [62.   17.12]\n [63.   17.15]\n [64.   17.21]\n [65.   17.24]\n [66.   17.3 ]\n [67.   17.33]\n [68.   17.39]\n [69.   17.42]\n [70.   17.48]\n [71.   17.55]\n [72.   17.58]\n [73.   17.64]\n [74.   17.67]\n [75.   17.73]\n [76.   17.76]\n [77.   17.82]\n [78.   17.85]\n [79.   17.91]\n [80.   17.94]\n [81.   18.  ]\n [82.   18.06]\n [83.   18.09]\n [84.   18.15]\n [85.   18.18]\n [86.   18.24]\n [87.   18.3 ]\n [88.   18.33]\n [89.   18.39]\n [90.   18.45]]\n[[ 2.   12.  ]\n [ 3.   11.7 ]\n [ 4.   11.55]\n [ 5.   11.42]\n [ 6.   11.3 ]\n [ 7.   11.21]\n [ 8.   11.12]\n [ 9.   11.03]\n [10.   10.94]\n [11.   10.85]\n [12.   10.76]\n [13.   10.7 ]\n [14.   10.61]\n [15.   10.55]\n [16.   10.48]\n [17.   10.39]\n [18.   10.33]\n [19.   10.27]\n [20.   10.21]\n [21.   10.15]\n [22.   10.09]\n [23.   10.03]\n [24.    9.97]\n [25.    9.91]\n [26.    9.85]\n [27.    9.79]\n [28.    9.73]\n [29.    9.67]\n [30.    9.61]\n [31.    9.58]\n [32.    9.52]\n [33.    9.45]\n [34.    9.39]\n [35.    9.36]\n [36.    9.3 ]\n [37.    9.24]\n [38.    9.18]\n [39.    9.15]\n [40.    9.09]\n [41.    9.03]\n [42.    9.  ]\n [43.    8.94]\n [44.    8.91]\n [45.    8.85]\n [46.    8.79]\n [47.    8.76]\n [48.    8.7 ]\n [49.    8.64]\n [50.    8.61]\n [51.    8.55]\n [52.    8.52]\n [53.    8.45]\n [54.    8.42]\n [55.    8.36]\n [56.    8.3 ]\n [57.    8.27]\n [58.    8.21]\n [59.    8.18]\n [60.    8.12]\n [61.    8.09]\n [62.    8.03]\n [63.    8.  ]\n [64.    7.94]\n [65.    7.88]\n [66.    7.85]\n [67.    7.79]\n [68.    7.76]\n [69.    7.7 ]\n [70.    7.67]\n [71.    7.61]\n [72.    7.55]\n [73.    7.52]\n [74.    7.45]\n [75.    7.42]\n [76.    7.36]\n [77.    7.33]\n [78.    7.27]\n [79.    7.21]\n [80.    7.18]\n [81.    7.12]\n [82.    7.06]\n [83.    7.03]\n [84.    6.97]\n [85.    6.94]\n [86.    6.88]\n [87.    6.82]\n [88.    6.79]\n [89.    6.73]\n [90.    6.67]]\n6.0\n0\n0\n87\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAKn8BAAAAAAAYQcFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							279,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAGEHBQAAAAAAYwcFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							280,
							1,
							"append",
							{
								"characters": "\n(display data): <Figure size 5000x2500 with 1 Axes>"
							},
							"AQAAAGMHBQAAAAAAlwcFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							281,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAJcHBQAAAAAAmQcFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							282,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAJkHBQAAAAAAmwcFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							283,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[[ 2.   13.36]\n [ 3.   13.52]\n [ 4.   13.67]\n [ 5.   13.79]\n [ 6.   13.91]\n [ 7.   14.  ]\n [ 8.   14.09]\n [ 9.   14.18]\n [10.   14.27]\n [11.   14.36]\n [12.   14.45]\n [13.   14.52]\n [14.   14.61]\n [15.   14.67]\n [16.   14.73]\n [17.   14.79]\n [18.   14.88]\n [19.   14.94]\n [20.   15.  ]\n [21.   15.06]\n [22.   15.12]\n [23.   15.18]\n [24.   15.24]\n [25.   15.3 ]\n [26.   15.36]\n [27.   15.39]\n [28.   15.45]\n [29.   15.52]\n [30.   15.58]\n [31.   15.64]\n [32.   15.67]\n [33.   15.73]\n [34.   15.79]\n [35.   15.85]\n [36.   15.88]\n [37.   15.94]\n [38.   16.  ]\n [39.   16.03]\n [40.   16.09]\n [41.   16.12]\n [42.   16.18]\n [43.   16.24]\n [44.   16.27]\n [45.   16.33]\n [46.   16.36]\n [47.   16.42]\n [48.   16.45]\n [49.   16.52]\n [50.   16.58]\n [51.   16.61]\n [52.   16.67]\n [53.   16.7 ]\n [54.   16.76]\n [55.   16.79]\n [56.   16.85]\n [57.   16.88]\n [58.   16.94]\n [59.   16.97]\n [60.   17.03]\n [61.   17.06]\n [62.   17.12]\n [63.   17.15]\n [64.   17.21]\n [65.   17.24]\n [66.   17.3 ]\n [67.   17.33]\n [68.   17.39]\n [69.   17.42]\n [70.   17.48]\n [71.   17.55]\n [72.   17.58]\n [73.   17.64]\n [74.   17.67]\n [75.   17.73]\n [76.   17.76]\n [77.   17.82]\n [78.   17.85]\n [79.   17.91]\n [80.   17.94]\n [81.   18.  ]\n [82.   18.06]\n [83.   18.09]\n [84.   18.15]\n [85.   18.18]\n [86.   18.24]\n [87.   18.3 ]\n [88.   18.33]\n [89.   18.39]\n [90.   18.45]]\n[[ 2.   12.  ]\n [ 3.   11.7 ]\n [ 4.   11.55]\n [ 5.   11.42]\n [ 6.   11.3 ]\n [ 7.   11.21]\n [ 8.   11.12]\n [ 9.   11.03]\n [10.   10.94]\n [11.   10.85]\n [12.   10.76]\n [13.   10.7 ]\n [14.   10.61]\n [15.   10.55]\n [16.   10.48]\n [17.   10.39]\n [18.   10.33]\n [19.   10.27]\n [20.   10.21]\n [21.   10.15]\n [22.   10.09]\n [23.   10.03]\n [24.    9.97]\n [25.    9.91]\n [26.    9.85]\n [27.    9.79]\n [28.    9.73]\n [29.    9.67]\n [30.    9.61]\n [31.    9.58]\n [32.    9.52]\n [33.    9.45]\n [34.    9.39]\n [35.    9.36]\n [36.    9.3 ]\n [37.    9.24]\n [38.    9.18]\n [39.    9.15]\n [40.    9.09]\n [41.    9.03]\n [42.    9.  ]\n [43.    8.94]\n [44.    8.91]\n [45.    8.85]\n [46.    8.79]\n [47.    8.76]\n [48.    8.7 ]\n [49.    8.64]\n [50.    8.61]\n [51.    8.55]\n [52.    8.52]\n [53.    8.45]\n [54.    8.42]\n [55.    8.36]\n [56.    8.3 ]\n [57.    8.27]\n [58.    8.21]\n [59.    8.18]\n [60.    8.12]\n [61.    8.09]\n [62.    8.03]\n [63.    8.  ]\n [64.    7.94]\n [65.    7.88]\n [66.    7.85]\n [67.    7.79]\n [68.    7.76]\n [69.    7.7 ]\n [70.    7.67]\n [71.    7.61]\n [72.    7.55]\n [73.    7.52]\n [74.    7.45]\n [75.    7.42]\n [76.    7.36]\n [77.    7.33]\n [78.    7.27]\n [79.    7.21]\n [80.    7.18]\n [81.    7.12]\n [82.    7.06]\n [83.    7.03]\n [84.    6.97]\n [85.    6.94]\n [86.    6.88]\n [87.    6.82]\n [88.    6.79]\n [89.    6.73]\n [90.    6.67]]\n"
							},
							"AQAAAJsHBQAAAAAAFhIFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							284,
							1,
							"append",
							{
								"characters": "\nError: TypeError, unsupported operand type(s) for /: 'list' and 'int'.\n            \nTraceback:\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/583266044.py in <module>\n      7     analog=False,\n      8 )\n----> 9 eye = Eye(filt)\n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/1192851082.py in __init__(self, _filt)\n     22         self.xline = None\n     23         self.yline = None\n---> 24         self.gen_plt_data(_top, _bot)\n     25         print(self.scatter.keys())\n     26 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/1192851082.py in gen_plt_data(self, top, bot)\n     39         self.plot[\"signal\"] = np.stack([[self.t, top], [self.t, bot]], axis=2)\n     40         self.init_points(top, bot)\n---> 41         self.scan(self.plot[\"signal\"])\n     42     #%%\n     43 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/1192851082.py in scan(self, h_eye)\n    120         print(d[\"l\"])\n    121         widths = np.vstack([d[\"r\"].T[0], d[\"r\"].T[1]-d[\"l\"].T[1]]).T\n--> 122         i_maxw = np.searchsorted(widths.T[0], max(d[\"h\"]/2))\n    123 \n    124         print(i_maxh/2)\n\nTypeError: unsupported operand type(s) for /: 'list' and 'int'"
							},
							"AQAAABYSBQAAAAAAahcFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							285,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAGoXBQAAAAAAbBcFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							286,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAGwXBQAAAAAAbhcFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							287,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[[ 2.   13.36]\n [ 3.   13.52]\n [ 4.   13.67]\n [ 5.   13.79]\n [ 6.   13.91]\n [ 7.   14.  ]\n [ 8.   14.09]\n [ 9.   14.18]\n [10.   14.27]\n [11.   14.36]\n [12.   14.45]\n [13.   14.52]\n [14.   14.61]\n [15.   14.67]\n [16.   14.73]\n [17.   14.79]\n [18.   14.88]\n [19.   14.94]\n [20.   15.  ]\n [21.   15.06]\n [22.   15.12]\n [23.   15.18]\n [24.   15.24]\n [25.   15.3 ]\n [26.   15.36]\n [27.   15.39]\n [28.   15.45]\n [29.   15.52]\n [30.   15.58]\n [31.   15.64]\n [32.   15.67]\n [33.   15.73]\n [34.   15.79]\n [35.   15.85]\n [36.   15.88]\n [37.   15.94]\n [38.   16.  ]\n [39.   16.03]\n [40.   16.09]\n [41.   16.12]\n [42.   16.18]\n [43.   16.24]\n [44.   16.27]\n [45.   16.33]\n [46.   16.36]\n [47.   16.42]\n [48.   16.45]\n [49.   16.52]\n [50.   16.58]\n [51.   16.61]\n [52.   16.67]\n [53.   16.7 ]\n [54.   16.76]\n [55.   16.79]\n [56.   16.85]\n [57.   16.88]\n [58.   16.94]\n [59.   16.97]\n [60.   17.03]\n [61.   17.06]\n [62.   17.12]\n [63.   17.15]\n [64.   17.21]\n [65.   17.24]\n [66.   17.3 ]\n [67.   17.33]\n [68.   17.39]\n [69.   17.42]\n [70.   17.48]\n [71.   17.55]\n [72.   17.58]\n [73.   17.64]\n [74.   17.67]\n [75.   17.73]\n [76.   17.76]\n [77.   17.82]\n [78.   17.85]\n [79.   17.91]\n [80.   17.94]\n [81.   18.  ]\n [82.   18.06]\n [83.   18.09]\n [84.   18.15]\n [85.   18.18]\n [86.   18.24]\n [87.   18.3 ]\n [88.   18.33]\n [89.   18.39]\n [90.   18.45]]\n[[ 2.   12.  ]\n [ 3.   11.7 ]\n [ 4.   11.55]\n [ 5.   11.42]\n [ 6.   11.3 ]\n [ 7.   11.21]\n [ 8.   11.12]\n [ 9.   11.03]\n [10.   10.94]\n [11.   10.85]\n [12.   10.76]\n [13.   10.7 ]\n [14.   10.61]\n [15.   10.55]\n [16.   10.48]\n [17.   10.39]\n [18.   10.33]\n [19.   10.27]\n [20.   10.21]\n [21.   10.15]\n [22.   10.09]\n [23.   10.03]\n [24.    9.97]\n [25.    9.91]\n [26.    9.85]\n [27.    9.79]\n [28.    9.73]\n [29.    9.67]\n [30.    9.61]\n [31.    9.58]\n [32.    9.52]\n [33.    9.45]\n [34.    9.39]\n [35.    9.36]\n [36.    9.3 ]\n [37.    9.24]\n [38.    9.18]\n [39.    9.15]\n [40.    9.09]\n [41.    9.03]\n [42.    9.  ]\n [43.    8.94]\n [44.    8.91]\n [45.    8.85]\n [46.    8.79]\n [47.    8.76]\n [48.    8.7 ]\n [49.    8.64]\n [50.    8.61]\n [51.    8.55]\n [52.    8.52]\n [53.    8.45]\n [54.    8.42]\n [55.    8.36]\n [56.    8.3 ]\n [57.    8.27]\n [58.    8.21]\n [59.    8.18]\n [60.    8.12]\n [61.    8.09]\n [62.    8.03]\n [63.    8.  ]\n [64.    7.94]\n [65.    7.88]\n [66.    7.85]\n [67.    7.79]\n [68.    7.76]\n [69.    7.7 ]\n [70.    7.67]\n [71.    7.61]\n [72.    7.55]\n [73.    7.52]\n [74.    7.45]\n [75.    7.42]\n [76.    7.36]\n [77.    7.33]\n [78.    7.27]\n [79.    7.21]\n [80.    7.18]\n [81.    7.12]\n [82.    7.06]\n [83.    7.03]\n [84.    6.97]\n [85.    6.94]\n [86.    6.88]\n [87.    6.82]\n [88.    6.79]\n [89.    6.73]\n [90.    6.67]]\n6.0\n0\n0\n43\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAG4XBQAAAAAAJiIFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							288,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAACYiBQAAAAAAKCIFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							289,
							1,
							"append",
							{
								"characters": "\n(display data): <Figure size 5000x2500 with 1 Axes>"
							},
							"AQAAACgiBQAAAAAAXCIFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							290,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAFwiBQAAAAAAXiIFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							291,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAF4iBQAAAAAAYCIFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							292,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[[ 2.   13.36]\n [ 3.   13.52]\n [ 4.   13.67]\n [ 5.   13.79]\n [ 6.   13.91]\n [ 7.   14.  ]\n [ 8.   14.09]\n [ 9.   14.18]\n [10.   14.27]\n [11.   14.36]\n [12.   14.45]\n [13.   14.52]\n [14.   14.61]\n [15.   14.67]\n [16.   14.73]\n [17.   14.79]\n [18.   14.88]\n [19.   14.94]\n [20.   15.  ]\n [21.   15.06]\n [22.   15.12]\n [23.   15.18]\n [24.   15.24]\n [25.   15.3 ]\n [26.   15.36]\n [27.   15.39]\n [28.   15.45]\n [29.   15.52]\n [30.   15.58]\n [31.   15.64]\n [32.   15.67]\n [33.   15.73]\n [34.   15.79]\n [35.   15.85]\n [36.   15.88]\n [37.   15.94]\n [38.   16.  ]\n [39.   16.03]\n [40.   16.09]\n [41.   16.12]\n [42.   16.18]\n [43.   16.24]\n [44.   16.27]\n [45.   16.33]\n [46.   16.36]\n [47.   16.42]\n [48.   16.45]\n [49.   16.52]\n [50.   16.58]\n [51.   16.61]\n [52.   16.67]\n [53.   16.7 ]\n [54.   16.76]\n [55.   16.79]\n [56.   16.85]\n [57.   16.88]\n [58.   16.94]\n [59.   16.97]\n [60.   17.03]\n [61.   17.06]\n [62.   17.12]\n [63.   17.15]\n [64.   17.21]\n [65.   17.24]\n [66.   17.3 ]\n [67.   17.33]\n [68.   17.39]\n [69.   17.42]\n [70.   17.48]\n [71.   17.55]\n [72.   17.58]\n [73.   17.64]\n [74.   17.67]\n [75.   17.73]\n [76.   17.76]\n [77.   17.82]\n [78.   17.85]\n [79.   17.91]\n [80.   17.94]\n [81.   18.  ]\n [82.   18.06]\n [83.   18.09]\n [84.   18.15]\n [85.   18.18]\n [86.   18.24]\n [87.   18.3 ]\n [88.   18.33]\n [89.   18.39]\n [90.   18.45]]\n[[ 2.   12.  ]\n [ 3.   11.7 ]\n [ 4.   11.55]\n [ 5.   11.42]\n [ 6.   11.3 ]\n [ 7.   11.21]\n [ 8.   11.12]\n [ 9.   11.03]\n [10.   10.94]\n [11.   10.85]\n [12.   10.76]\n [13.   10.7 ]\n [14.   10.61]\n [15.   10.55]\n [16.   10.48]\n [17.   10.39]\n [18.   10.33]\n [19.   10.27]\n [20.   10.21]\n [21.   10.15]\n [22.   10.09]\n [23.   10.03]\n [24.    9.97]\n [25.    9.91]\n [26.    9.85]\n [27.    9.79]\n [28.    9.73]\n [29.    9.67]\n [30.    9.61]\n [31.    9.58]\n [32.    9.52]\n [33.    9.45]\n [34.    9.39]\n [35.    9.36]\n [36.    9.3 ]\n [37.    9.24]\n [38.    9.18]\n [39.    9.15]\n [40.    9.09]\n [41.    9.03]\n [42.    9.  ]\n [43.    8.94]\n [44.    8.91]\n [45.    8.85]\n [46.    8.79]\n [47.    8.76]\n [48.    8.7 ]\n [49.    8.64]\n [50.    8.61]\n [51.    8.55]\n [52.    8.52]\n [53.    8.45]\n [54.    8.42]\n [55.    8.36]\n [56.    8.3 ]\n [57.    8.27]\n [58.    8.21]\n [59.    8.18]\n [60.    8.12]\n [61.    8.09]\n [62.    8.03]\n [63.    8.  ]\n [64.    7.94]\n [65.    7.88]\n [66.    7.85]\n [67.    7.79]\n [68.    7.76]\n [69.    7.7 ]\n [70.    7.67]\n [71.    7.61]\n [72.    7.55]\n [73.    7.52]\n [74.    7.45]\n [75.    7.42]\n [76.    7.36]\n [77.    7.33]\n [78.    7.27]\n [79.    7.21]\n [80.    7.18]\n [81.    7.12]\n [82.    7.06]\n [83.    7.03]\n [84.    6.97]\n [85.    6.94]\n [86.    6.88]\n [87.    6.82]\n [88.    6.79]\n [89.    6.73]\n [90.    6.67]]\n6.0\n0\n0\n43\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAGAiBQAAAAAAGC0FAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							293,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAABgtBQAAAAAAGi0FAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							294,
							1,
							"append",
							{
								"characters": "\n(display data): <Figure size 5000x2500 with 1 Axes>"
							},
							"AQAAABotBQAAAAAATi0FAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							295,
							2,
							"append",
							{
								"characters": "\n\n"
							},
							"AgAAAE4tBQAAAAAAUC0FAAAAAAAAAAAAUC0FAAAAAABSLQUAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							296,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[[ 2.   12.   13.36]\n [ 3.   11.7  13.52]\n [ 4.   11.55 13.67]\n [ 5.   11.42 13.79]\n [ 6.   11.3  13.91]\n [ 7.   11.21 14.  ]\n [ 8.   11.12 14.09]\n [ 9.   11.03 14.18]\n [10.   10.94 14.27]\n [11.   10.85 14.36]\n [12.   10.76 14.45]\n [13.   10.7  14.52]\n [14.   10.61 14.61]\n [15.   10.55 14.67]\n [16.   10.48 14.73]\n [17.   10.39 14.79]\n [18.   10.33 14.88]\n [19.   10.27 14.94]\n [20.   10.21 15.  ]\n [21.   10.15 15.06]\n [22.   10.09 15.12]\n [23.   10.03 15.18]\n [24.    9.97 15.24]\n [25.    9.91 15.3 ]\n [26.    9.85 15.36]\n [27.    9.79 15.39]\n [28.    9.73 15.45]\n [29.    9.67 15.52]\n [30.    9.61 15.58]\n [31.    9.58 15.64]\n [32.    9.52 15.67]\n [33.    9.45 15.73]\n [34.    9.39 15.79]\n [35.    9.36 15.85]\n [36.    9.3  15.88]\n [37.    9.24 15.94]\n [38.    9.18 16.  ]\n [39.    9.15 16.03]\n [40.    9.09 16.09]\n [41.    9.03 16.12]\n [42.    9.   16.18]\n [43.    8.94 16.24]\n [44.    8.91 16.27]\n [45.    8.85 16.33]\n [46.    8.79 16.36]\n [47.    8.76 16.42]\n [48.    8.7  16.45]\n [49.    8.64 16.52]\n [50.    8.61 16.58]\n [51.    8.55 16.61]\n [52.    8.52 16.67]\n [53.    8.45 16.7 ]\n [54.    8.42 16.76]\n [55.    8.36 16.79]\n [56.    8.3  16.85]\n [57.    8.27 16.88]\n [58.    8.21 16.94]\n [59.    8.18 16.97]\n [60.    8.12 17.03]\n [61.    8.09 17.06]\n [62.    8.03 17.12]\n [63.    8.   17.15]\n [64.    7.94 17.21]\n [65.    7.88 17.24]\n [66.    7.85 17.3 ]\n [67.    7.79 17.33]\n [68.    7.76 17.39]\n [69.    7.7  17.42]\n [70.    7.67 17.48]\n [71.    7.61 17.55]\n [72.    7.55 17.58]\n [73.    7.52 17.64]\n [74.    7.45 17.67]\n [75.    7.42 17.73]\n [76.    7.36 17.76]\n [77.    7.33 17.82]\n [78.    7.27 17.85]\n [79.    7.21 17.91]\n [80.    7.18 17.94]\n [81.    7.12 18.  ]\n [82.    7.06 18.06]\n [83.    7.03 18.09]\n [84.    6.97 18.15]\n [85.    6.94 18.18]\n [86.    6.88 18.24]\n [87.    6.82 18.3 ]\n [88.    6.79 18.33]\n [89.    6.73 18.39]\n [90.    6.67 18.45]]\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAFItBQAAAAAA3TQFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							297,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAN00BQAAAAAA3zQFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							298,
							1,
							"append",
							{
								"characters": "\nError: SyntaxError, invalid syntax (25049122.py, line 107).\n            \nTraceback:\n  File \"/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/25049122.py\", line 107\n    brea[y_val, y_val-min(vxy[1]), max(vxy[1])-y_val]k\n                                                     ^\nSyntaxError: invalid syntax\n"
							},
							"AQAAAN80BQAAAAAAHjYFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							299,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAB42BQAAAAAAIDYFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							300,
							1,
							"append",
							{
								"characters": "\nError: SyntaxError, invalid syntax (809641122.py, line 107).\n            \nTraceback:\n  File \"/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/809641122.py\", line 107\n    break[y_val, y_val-min(vxy[1]), max(vxy[1])-y_val]\n         ^\nSyntaxError: invalid syntax\n"
							},
							"AQAAACA2BQAAAAAANTcFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							301,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAADU3BQAAAAAANzcFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							302,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAADc3BQAAAAAAOTcFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							303,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[[ 2.  0. 88.]\n [ 3.  1. 87.]\n [ 4.  2. 86.]\n [ 5.  3. 85.]\n [ 6.  4. 84.]\n [ 7.  5. 83.]\n [ 8.  6. 82.]\n [ 9.  7. 81.]\n [10.  8. 80.]\n [11.  9. 79.]\n [12. 10. 78.]\n [13. 11. 77.]\n [14. 12. 76.]\n [15. 13. 75.]\n [16. 14. 74.]\n [17. 15. 73.]\n [18. 16. 72.]\n [19. 17. 71.]\n [20. 18. 70.]\n [21. 19. 69.]\n [22. 20. 68.]\n [23. 21. 67.]\n [24. 22. 66.]\n [25. 23. 65.]\n [26. 24. 64.]\n [27. 25. 63.]\n [28. 26. 62.]\n [29. 27. 61.]\n [30. 28. 60.]\n [31. 29. 59.]\n [32. 30. 58.]\n [33. 31. 57.]\n [34. 32. 56.]\n [35. 33. 55.]\n [36. 34. 54.]\n [37. 35. 53.]\n [38. 36. 52.]\n [39. 37. 51.]\n [40. 38. 50.]\n [41. 39. 49.]\n [42. 40. 48.]\n [43. 41. 47.]\n [44. 42. 46.]\n [45. 43. 45.]\n [46. 44. 44.]\n [47. 45. 43.]\n [48. 46. 42.]\n [49. 47. 41.]\n [50. 48. 40.]\n [51. 49. 39.]\n [52. 50. 38.]\n [53. 51. 37.]\n [54. 52. 36.]\n [55. 53. 35.]\n [56. 54. 34.]\n [57. 55. 33.]\n [58. 56. 32.]\n [59. 57. 31.]\n [60. 58. 30.]\n [61. 59. 29.]\n [62. 60. 28.]\n [63. 61. 27.]\n [64. 62. 26.]\n [65. 63. 25.]\n [66. 64. 24.]\n [67. 65. 23.]\n [68. 66. 22.]\n [69. 67. 21.]\n [70. 68. 20.]\n [71. 69. 19.]\n [72. 70. 18.]\n [73. 71. 17.]\n [74. 72. 16.]\n [75. 73. 15.]\n [76. 74. 14.]\n [77. 75. 13.]\n [78. 76. 12.]\n [79. 77. 11.]\n [80. 78. 10.]\n [81. 79.  9.]\n [82. 80.  8.]\n [83. 81.  7.]\n [84. 82.  6.]\n [85. 83.  5.]\n [86. 84.  4.]\n [87. 85.  3.]\n [88. 86.  2.]\n [89. 87.  1.]\n [90. 88.  0.]]\n[[ 2.   12.   13.36]\n [ 3.   11.7  13.52]\n [ 4.   11.55 13.67]\n [ 5.   11.42 13.79]\n [ 6.   11.3  13.91]\n [ 7.   11.21 14.  ]\n [ 8.   11.12 14.09]\n [ 9.   11.03 14.18]\n [10.   10.94 14.27]\n [11.   10.85 14.36]\n [12.   10.76 14.45]\n [13.   10.7  14.52]\n [14.   10.61 14.61]\n [15.   10.55 14.67]\n [16.   10.48 14.73]\n [17.   10.39 14.79]\n [18.   10.33 14.88]\n [19.   10.27 14.94]\n [20.   10.21 15.  ]\n [21.   10.15 15.06]\n [22.   10.09 15.12]\n [23.   10.03 15.18]\n [24.    9.97 15.24]\n [25.    9.91 15.3 ]\n [26.    9.85 15.36]\n [27.    9.79 15.39]\n [28.    9.73 15.45]\n [29.    9.67 15.52]\n [30.    9.61 15.58]\n [31.    9.58 15.64]\n [32.    9.52 15.67]\n [33.    9.45 15.73]\n [34.    9.39 15.79]\n [35.    9.36 15.85]\n [36.    9.3  15.88]\n [37.    9.24 15.94]\n [38.    9.18 16.  ]\n [39.    9.15 16.03]\n [40.    9.09 16.09]\n [41.    9.03 16.12]\n [42.    9.   16.18]\n [43.    8.94 16.24]\n [44.    8.91 16.27]\n [45.    8.85 16.33]\n [46.    8.79 16.36]\n [47.    8.76 16.42]\n [48.    8.7  16.45]\n [49.    8.64 16.52]\n [50.    8.61 16.58]\n [51.    8.55 16.61]\n [52.    8.52 16.67]\n [53.    8.45 16.7 ]\n [54.    8.42 16.76]\n [55.    8.36 16.79]\n [56.    8.3  16.85]\n [57.    8.27 16.88]\n [58.    8.21 16.94]\n [59.    8.18 16.97]\n [60.    8.12 17.03]\n [61.    8.09 17.06]\n [62.    8.03 17.12]\n [63.    8.   17.15]\n [64.    7.94 17.21]\n [65.    7.88 17.24]\n [66.    7.85 17.3 ]\n [67.    7.79 17.33]\n [68.    7.76 17.39]\n [69.    7.7  17.42]\n [70.    7.67 17.48]\n [71.    7.61 17.55]\n [72.    7.55 17.58]\n [73.    7.52 17.64]\n [74.    7.45 17.67]\n [75.    7.42 17.73]\n [76.    7.36 17.76]\n [77.    7.33 17.82]\n [78.    7.27 17.85]\n [79.    7.21 17.91]\n [80.    7.18 17.94]\n [81.    7.12 18.  ]\n [82.    7.06 18.06]\n [83.    7.03 18.09]\n [84.    6.97 18.15]\n [85.    6.94 18.18]\n [86.    6.88 18.24]\n [87.    6.82 18.3 ]\n [88.    6.79 18.33]\n [89.    6.73 18.39]\n [90.    6.67 18.45]]\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAADk3BQAAAAAA/EMFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							304,
							2,
							"append",
							{
								"characters": "\n\n"
							},
							"AgAAAPxDBQAAAAAA/kMFAAAAAAAAAAAA/kMFAAAAAAAARAUAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							305,
							1,
							"append",
							{
								"characters": "\nError: TypeError, _vhstack_dispatcher() takes 1 positional argument but 90 were given.\n            \nTraceback:\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/583266044.py in <module>\n      7     analog=False,\n      8 )\n----> 9 eye = Eye(filt)\n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/1159867791.py in __init__(self, _filt)\n     22         self.xline = None\n     23         self.yline = None\n---> 24         self.gen_plt_data(_top, _bot)\n     25         print(self.scatter.keys())\n     26 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/1159867791.py in gen_plt_data(self, top, bot)\n     39         self.plot[\"signal\"] = np.stack([[self.t, top], [self.t, bot]], axis=2)\n     40         self.init_points(top, bot)\n---> 41         self.scan(self.plot[\"signal\"])\n     42     #%%\n     43 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/1159867791.py in scan(self, h_eye)\n    113         d[\"l\"] = SortedArray(d[\"l\"], unique = \"min\").array\n    114 \n--> 115         combo = np.vstack([d[\"r\"].T[0], d[\"l\"].T[1], d[\"r\"].T[1]], *h).T\n    116         left  = np.searchsorted(d[\"l\"].T[1], i_maxh/2)\n    117         right = np.searchsorted(d[\"r\"].T[1], i_maxh/2)\n\n<__array_function__ internals> in vstack(*args, **kwargs)\n\nTypeError: _vhstack_dispatcher() takes 1 positional argument but 90 were given"
							},
							"AQAAAABEBQAAAAAA8UkFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							306,
							2,
							"append",
							{
								"characters": "\n\n"
							},
							"AgAAAPFJBQAAAAAA80kFAAAAAAAAAAAA80kFAAAAAAD1SQUAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							307,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[[ 2.   12.   13.36  0.   88.  ]\n [ 3.   11.7  13.52  1.   87.  ]\n [ 4.   11.55 13.67  2.   86.  ]\n [ 5.   11.42 13.79  3.   85.  ]\n [ 6.   11.3  13.91  4.   84.  ]\n [ 7.   11.21 14.    5.   83.  ]\n [ 8.   11.12 14.09  6.   82.  ]\n [ 9.   11.03 14.18  7.   81.  ]\n [10.   10.94 14.27  8.   80.  ]\n [11.   10.85 14.36  9.   79.  ]\n [12.   10.76 14.45 10.   78.  ]\n [13.   10.7  14.52 11.   77.  ]\n [14.   10.61 14.61 12.   76.  ]\n [15.   10.55 14.67 13.   75.  ]\n [16.   10.48 14.73 14.   74.  ]\n [17.   10.39 14.79 15.   73.  ]\n [18.   10.33 14.88 16.   72.  ]\n [19.   10.27 14.94 17.   71.  ]\n [20.   10.21 15.   18.   70.  ]\n [21.   10.15 15.06 19.   69.  ]\n [22.   10.09 15.12 20.   68.  ]\n [23.   10.03 15.18 21.   67.  ]\n [24.    9.97 15.24 22.   66.  ]\n [25.    9.91 15.3  23.   65.  ]\n [26.    9.85 15.36 24.   64.  ]\n [27.    9.79 15.39 25.   63.  ]\n [28.    9.73 15.45 26.   62.  ]\n [29.    9.67 15.52 27.   61.  ]\n [30.    9.61 15.58 28.   60.  ]\n [31.    9.58 15.64 29.   59.  ]\n [32.    9.52 15.67 30.   58.  ]\n [33.    9.45 15.73 31.   57.  ]\n [34.    9.39 15.79 32.   56.  ]\n [35.    9.36 15.85 33.   55.  ]\n [36.    9.3  15.88 34.   54.  ]\n [37.    9.24 15.94 35.   53.  ]\n [38.    9.18 16.   36.   52.  ]\n [39.    9.15 16.03 37.   51.  ]\n [40.    9.09 16.09 38.   50.  ]\n [41.    9.03 16.12 39.   49.  ]\n [42.    9.   16.18 40.   48.  ]\n [43.    8.94 16.24 41.   47.  ]\n [44.    8.91 16.27 42.   46.  ]\n [45.    8.85 16.33 43.   45.  ]\n [46.    8.79 16.36 44.   44.  ]\n [47.    8.76 16.42 45.   43.  ]\n [48.    8.7  16.45 46.   42.  ]\n [49.    8.64 16.52 47.   41.  ]\n [50.    8.61 16.58 48.   40.  ]\n [51.    8.55 16.61 49.   39.  ]\n [52.    8.52 16.67 50.   38.  ]\n [53.    8.45 16.7  51.   37.  ]\n [54.    8.42 16.76 52.   36.  ]\n [55.    8.36 16.79 53.   35.  ]\n [56.    8.3  16.85 54.   34.  ]\n [57.    8.27 16.88 55.   33.  ]\n [58.    8.21 16.94 56.   32.  ]\n [59.    8.18 16.97 57.   31.  ]\n [60.    8.12 17.03 58.   30.  ]\n [61.    8.09 17.06 59.   29.  ]\n [62.    8.03 17.12 60.   28.  ]\n [63.    8.   17.15 61.   27.  ]\n [64.    7.94 17.21 62.   26.  ]\n [65.    7.88 17.24 63.   25.  ]\n [66.    7.85 17.3  64.   24.  ]\n [67.    7.79 17.33 65.   23.  ]\n [68.    7.76 17.39 66.   22.  ]\n [69.    7.7  17.42 67.   21.  ]\n [70.    7.67 17.48 68.   20.  ]\n [71.    7.61 17.55 69.   19.  ]\n [72.    7.55 17.58 70.   18.  ]\n [73.    7.52 17.64 71.   17.  ]\n [74.    7.45 17.67 72.   16.  ]\n [75.    7.42 17.73 73.   15.  ]\n [76.    7.36 17.76 74.   14.  ]\n [77.    7.33 17.82 75.   13.  ]\n [78.    7.27 17.85 76.   12.  ]\n [79.    7.21 17.91 77.   11.  ]\n [80.    7.18 17.94 78.   10.  ]\n [81.    7.12 18.   79.    9.  ]\n [82.    7.06 18.06 80.    8.  ]\n [83.    7.03 18.09 81.    7.  ]\n [84.    6.97 18.15 82.    6.  ]\n [85.    6.94 18.18 83.    5.  ]\n [86.    6.88 18.24 84.    4.  ]\n [87.    6.82 18.3  85.    3.  ]\n [88.    6.79 18.33 86.    2.  ]\n [89.    6.73 18.39 87.    1.  ]\n [90.    6.67 18.45 88.    0.  ]]\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAPVJBQAAAAAArFUFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							308,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAKxVBQAAAAAArlUFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							309,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAK5VBQAAAAAAsFUFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							310,
							1,
							"append",
							{
								"characters": "\n(stdout):\n(89, 5)\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAALBVBQAAAAAA9VUFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							311,
							2,
							"append",
							{
								"characters": "\n\n"
							},
							"AgAAAPVVBQAAAAAA91UFAAAAAAAAAAAA91UFAAAAAAD5VQUAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							312,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[[12.   11.7  11.55 11.42 11.3  11.21 11.12 11.03 10.94 10.85 10.76 10.7\n  10.61 10.55 10.48 10.39 10.33 10.27 10.21 10.15 10.09 10.03  9.97  9.91\n   9.85  9.79  9.73  9.67  9.61  9.58  9.52  9.45  9.39  9.36  9.3   9.24\n   9.18  9.15  9.09  9.03  9.    8.94  8.91  8.85  8.79  8.76  8.7   8.64\n   8.61  8.55  8.52  8.45  8.42  8.36  8.3   8.27  8.21  8.18  8.12  8.09\n   8.03  8.    7.94  7.88  7.85  7.79  7.76  7.7   7.67  7.61  7.55  7.52\n   7.45  7.42  7.36  7.33  7.27  7.21  7.18  7.12  7.06  7.03  6.97  6.94\n   6.88  6.82  6.79  6.73  6.67]\n [13.36 13.52 13.67 13.79 13.91 14.   14.09 14.18 14.27 14.36 14.45 14.52\n  14.61 14.67 14.73 14.79 14.88 14.94 15.   15.06 15.12 15.18 15.24 15.3\n  15.36 15.39 15.45 15.52 15.58 15.64 15.67 15.73 15.79 15.85 15.88 15.94\n  16.   16.03 16.09 16.12 16.18 16.24 16.27 16.33 16.36 16.42 16.45 16.52\n  16.58 16.61 16.67 16.7  16.76 16.79 16.85 16.88 16.94 16.97 17.03 17.06\n  17.12 17.15 17.21 17.24 17.3  17.33 17.39 17.42 17.48 17.55 17.58 17.64\n  17.67 17.73 17.76 17.82 17.85 17.91 17.94 18.   18.06 18.09 18.15 18.18\n  18.24 18.3  18.33 18.39 18.45]\n [ 0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.\n  12.   13.   14.   15.   16.   17.   18.   19.   20.   21.   22.   23.\n  24.   25.   26.   27.   28.   29.   30.   31.   32.   33.   34.   35.\n  36.   37.   38.   39.   40.   41.   42.   43.   44.   45.   46.   47.\n  48.   49.   50.   51.   52.   53.   54.   55.   56.   57.   58.   59.\n  60.   61.   62.   63.   64.   65.   66.   67.   68.   69.   70.   71.\n  72.   73.   74.   75.   76.   77.   78.   79.   80.   81.   82.   83.\n  84.   85.   86.   87.   88.  ]\n [88.   87.   86.   85.   84.   83.   82.   81.   80.   79.   78.   77.\n  76.   75.   74.   73.   72.   71.   70.   69.   68.   67.   66.   65.\n  64.   63.   62.   61.   60.   59.   58.   57.   56.   55.   54.   53.\n  52.   51.   50.   49.   48.   47.   46.   45.   44.   43.   42.   41.\n  40.   39.   38.   37.   36.   35.   34.   33.   32.   31.   30.   29.\n  28.   27.   26.   25.   24.   23.   22.   21.   20.   19.   18.   17.\n  16.   15.   14.   13.   12.   11.   10.    9.    8.    7.    6.    5.\n   4.    3.    2.    1.    0.  ]]\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAPlVBQAAAAAAtV4FAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							313,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAALVeBQAAAAAAt14FAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							314,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAALdeBQAAAAAAuV4FAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							315,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAALleBQAAAAAAu14FAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							316,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[[12.   12.   11.55 11.43 11.31 11.18 12.   12.   12.   10.82 12.   12.\n  10.58 12.   10.45 12.   10.33 10.21 12.   10.09 12.    9.97 12.    9.85\n   9.85  9.73  9.73  9.6   9.6   9.48  9.48  9.36  9.36 12.    9.24  9.24\n   9.12  9.12  9.    9.    9.    8.87  8.87  8.75  8.75  8.75  8.63  8.63\n   8.51  8.51  8.51  8.39  8.39  8.27  8.27  8.27  8.15  8.15  8.02  8.02\n   8.02  7.9   7.9   7.78  7.78  7.78  7.66  7.66  7.66  7.54  7.54  7.42\n   7.42  7.42  7.29  7.29  7.17  7.17  7.17  7.05  7.05  6.93  6.93  6.93\n   6.81  6.81  6.69  6.69  6.56]\n [12.   12.   12.   12.   12.   13.98 14.1  12.   12.   14.35 14.47 12.\n  14.59 12.   14.71 14.83 12.   14.95 12.   15.07 12.   15.2  12.   15.32\n  12.   15.44 15.44 15.56 15.56 15.68 15.68 12.   15.8  15.8  15.93 15.93\n  16.05 16.05 16.17 16.17 16.17 16.29 16.29 16.29 16.41 16.41 16.53 16.53\n  16.53 16.65 16.65 16.78 16.78 16.78 16.9  16.9  16.9  17.02 17.02 17.14\n  17.14 17.14 17.26 17.26 17.26 17.38 17.38 17.51 17.51 17.51 17.63 17.63\n  17.63 17.75 17.75 17.87 17.87 17.87 17.99 17.99 18.11 18.11 18.11 18.24\n  18.24 18.36 18.36 18.36 18.48]\n [ 0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.\n  12.   13.   14.   15.   16.   17.   18.   19.   20.   21.   22.   23.\n  24.   25.   26.   27.   28.   29.   30.   31.   32.   33.   34.   35.\n  36.   37.   38.   39.   40.   41.   42.   43.   44.   45.   46.   47.\n  48.   49.   50.   51.   52.   53.   54.   55.   56.   57.   58.   59.\n  60.   61.   62.   63.   64.   65.   66.   67.   68.   69.   70.   71.\n  72.   73.   74.   75.   76.   77.   78.   79.   80.   81.   82.   83.\n  84.   85.   86.   87.   88.  ]\n [88.   87.   86.   85.   84.   83.   82.   81.   80.   79.   78.   77.\n  76.   75.   74.   73.   72.   71.   70.   69.   68.   67.   66.   65.\n  64.   63.   62.   61.   60.   59.   58.   57.   56.   55.   54.   53.\n  52.   51.   50.   49.   48.   47.   46.   45.   44.   43.   42.   41.\n  40.   39.   38.   37.   36.   35.   34.   33.   32.   31.   30.   29.\n  28.   27.   26.   25.   24.   23.   22.   21.   20.   19.   18.   17.\n  16.   15.   14.   13.   12.   11.   10.    9.    8.    7.    6.    5.\n   4.    3.    2.    1.    0.  ]]\n[1224.   1180.5  1141.65 1101.14 1061.64 1008.24  962.01  940.5   904.\n  860.82  815.41  800.5   760.78  736.5   699.03  655.35  661.85  614.08\n  594.    562.37  544.    514.68  498.    471.01  474.09  431.35  412.85\n  395.7   379.2   364.07  349.57  362.92  323.96  288.78  302.36  292.86\n  284.77  277.27  271.2   265.7   261.2   258.14  255.64  255.32  254.1\n  254.6   256.57  259.07  263.77  267.56  273.06  280.06  287.56  297.28\n  306.08  316.58  329.3   341.11  355.84  369.66  385.16  402.89  419.72\n  439.46  458.96  478.8   501.55  523.39  546.89  572.64  597.49  625.26\n  652.76  680.61  711.39  741.25  774.03  806.53  839.4   875.19  910.07\n  947.86  985.36 1023.25 1064.05 1103.94 1146.75 1189.25 1233.47]\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAALteBQAAAAAARWoFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							317,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAEVqBQAAAAAAR2oFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							318,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAEdqBQAAAAAASWoFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							319,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[[1224.   1180.5  1141.65 1101.14 1061.64 1008.24  962.01  940.5   904.\n   860.82  815.41  800.5   760.78  736.5   699.03  655.35  661.85  614.08\n   594.    562.37  544.    514.68  498.    471.01  474.09  431.35  412.85\n   395.7   379.2   364.07  349.57  362.92  323.96  288.78  302.36  292.86\n   284.77  277.27  271.2   265.7   261.2   258.14  255.64  255.32  254.1\n   254.6   256.57  259.07  263.77  267.56  273.06  280.06  287.56  297.28\n   306.08  316.58  329.3   341.11  355.84  369.66  385.16  402.89  419.72\n   439.46  458.96  478.8   501.55  523.39  546.89  572.64  597.49  625.26\n   652.76  680.61  711.39  741.25  774.03  806.53  839.4   875.19  910.07\n   947.86  985.36 1023.25 1064.05 1103.94 1146.75 1189.25 1233.47]]\n[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAElqBQAAAAAAcW4FAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							320,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAHFuBQAAAAAAc24FAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							321,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAHNuBQAAAAAAdW4FAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							322,
							1,
							"append",
							{
								"characters": "\n(stdout):\n0\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAHVuBQAAAAAAtG4FAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							323,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAALRuBQAAAAAAtm4FAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							324,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAALZuBQAAAAAAuG4FAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							325,
							1,
							"append",
							{
								"characters": "\n(stdout):\n0\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAALhuBQAAAAAA924FAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							326,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAPduBQAAAAAA+W4FAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							327,
							2,
							"append",
							{
								"characters": "\n\n"
							},
							"AgAAAPluBQAAAAAA+24FAAAAAAAAAAAA+24FAAAAAAD9bgUAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							328,
							1,
							"append",
							{
								"characters": "\n(stdout):\n44\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAP1uBQAAAAAAPW8FAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAO2gBAAAAAAA7aAEAAAAAAAAAAAAAAPC/"
						],
						[
							333,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAD1vBQAAAAAAP28FAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							334,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAD9vBQAAAAAAQW8FAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							335,
							1,
							"append",
							{
								"characters": "\n(stdout):\n44\n43\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAEFvBQAAAAAAhG8FAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							336,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAIRvBQAAAAAAhm8FAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							337,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAIZvBQAAAAAAiG8FAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							338,
							1,
							"append",
							{
								"characters": "\n(stdout):\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAIhvBQAAAAAAxW8FAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							339,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAMVvBQAAAAAAx28FAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							340,
							1,
							"append",
							{
								"characters": "\n(display data): <Figure size 5000x2500 with 1 Axes>"
							},
							"AQAAAMdvBQAAAAAA+28FAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							341,
							2,
							"append",
							{
								"characters": "\n\n"
							},
							"AgAAAPtvBQAAAAAA/W8FAAAAAAAAAAAA/W8FAAAAAAD/bwUAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							342,
							1,
							"append",
							{
								"characters": "\n(stdout):\n44\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAP9vBQAAAAAAP3AFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							343,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAD9wBQAAAAAAQXAFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							344,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAEFwBQAAAAAAQ3AFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							345,
							1,
							"append",
							{
								"characters": "\n(stdout):\n44\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAENwBQAAAAAAg3AFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							346,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAINwBQAAAAAAhXAFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							347,
							1,
							"append",
							{
								"characters": "\n(display data): <Figure size 5000x2500 with 1 Axes>"
							},
							"AQAAAIVwBQAAAAAAuXAFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							348,
							2,
							"append",
							{
								"characters": "\n\n"
							},
							"AgAAALlwBQAAAAAAu3AFAAAAAAAAAAAAu3AFAAAAAAC9cAUAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							349,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAL1wBQAAAAAAv3AFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							350,
							1,
							"append",
							{
								"characters": "\nError: TypeError, only integer scalar arrays can be converted to a scalar index.\n            \nTraceback:\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/685713987.py in <module>\n      7     analog=False,\n      8 )\n----> 9 eye = Eye()\n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/4167291688.py in __init__(self, _filt)\n     22         self.xline = None\n     23         self.yline = None\n---> 24         self.gen_plt_data(_top, _bot)\n     25         print(self.scatter.keys())\n     26 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/4167291688.py in gen_plt_data(self, top, bot)\n     39         self.plot[\"signal\"] = np.stack([[self.t, top], [self.t, bot]], axis=2)\n     40         self.init_points(top, bot)\n---> 41         self.scan(self.plot[\"signal\"])\n     42     #%%\n     43 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/4167291688.py in scan(self, h_eye)\n    113         d[\"l\"] = SortedArray(d[\"l\"], unique = \"min\").array\n    114 \n--> 115         combo = np.vstack([d[\"r\"].T[0],np.std([ d[\"l\"].T[1], d[\"r\"].T[1]]), np.std( *h.T)])\n    116 \n    117         left  = np.searchsorted(d[\"l\"].T[1], i_maxh/2)\n\n<__array_function__ internals> in std(*args, **kwargs)\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/numpy/core/fromnumeric.py in std(a, axis, dtype, out, ddof, keepdims, where)\n   3579             return std(axis=axis, dtype=dtype, out=out, ddof=ddof, **kwargs)\n   3580 \n-> 3581     return _methods._std(a, axis=axis, dtype=dtype, out=out, ddof=ddof,\n   3582                          **kwargs)\n   3583 \n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/numpy/core/_methods.py in _std(a, axis, dtype, out, ddof, keepdims, where)\n    260 def _std(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False, *,\n    261          where=True):\n--> 262     ret = _var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,\n    263                keepdims=keepdims, where=where)\n    264 \n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/numpy/core/_methods.py in _var(a, axis, dtype, out, ddof, keepdims, where)\n    197     arr = asanyarray(a)\n    198 \n--> 199     rcount = _count_reduce_items(arr, axis, keepdims=keepdims, where=where)\n    200     # Make this warning show up on top.\n    201     if ddof >= rcount if where is True else umr_any(ddof >= rcount, axis=None):\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/numpy/core/_methods.py in _count_reduce_items(arr, axis, keepdims, where)\n     74         items = nt.intp(1)\n     75         for ax in axis:\n---> 76             items *= arr.shape[mu.normalize_axis_index(ax, arr.ndim)]\n     77     else:\n     78         # TODO: Optimize case when `where` is broadcast along a non-reduction\n\nTypeError: only integer scalar arrays can be converted to a scalar index"
							},
							"AQAAAL9wBQAAAAAAt3wFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							351,
							2,
							"append",
							{
								"characters": "\n\n"
							},
							"AgAAALd8BQAAAAAAuXwFAAAAAAAAAAAAuXwFAAAAAAC7fAUAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							352,
							1,
							"append",
							{
								"characters": "\nError: ValueError, all the input array dimensions for the concatenation axis must match exactly, but along dimension 1, the array at index 0 has size 124 and the array at index 1 has size 1.\n            \nTraceback:\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/685713987.py in <module>\n      7     analog=False,\n      8 )\n----> 9 eye = Eye()\n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/2624126726.py in __init__(self, _filt)\n     22         self.xline = None\n     23         self.yline = None\n---> 24         self.gen_plt_data(_top, _bot)\n     25         print(self.scatter.keys())\n     26 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/2624126726.py in gen_plt_data(self, top, bot)\n     39         self.plot[\"signal\"] = np.stack([[self.t, top], [self.t, bot]], axis=2)\n     40         self.init_points(top, bot)\n---> 41         self.scan(self.plot[\"signal\"])\n     42     #%%\n     43 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/2624126726.py in scan(self, h_eye)\n    113         d[\"l\"] = SortedArray(d[\"l\"], unique = \"min\").array\n    114 \n--> 115         combo = np.vstack([d[\"r\"].T[0],\n    116                           np.std([ d[\"l\"].T[1], d[\"r\"].T[1]]),\n    117                           np.std(h.T)])\n\n<__array_function__ internals> in vstack(*args, **kwargs)\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/numpy/core/shape_base.py in vstack(tup)\n    280     if not isinstance(arrs, list):\n    281         arrs = [arrs]\n--> 282     return _nx.concatenate(arrs, 0)\n    283 \n    284 \n\n<__array_function__ internals> in concatenate(*args, **kwargs)\n\nValueError: all the input array dimensions for the concatenation axis must match exactly, but along dimension 1, the array at index 0 has size 124 and the array at index 1 has size 1"
							},
							"AQAAALt8BQAAAAAAjoQFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							353,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAI6EBQAAAAAAkIQFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							354,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAJCEBQAAAAAAkoQFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							355,
							1,
							"append",
							{
								"characters": "\n(stdout):\n121\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAJKEBQAAAAAA04QFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							356,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAANOEBQAAAAAA1YQFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							357,
							1,
							"append",
							{
								"characters": "\n(display data): <Figure size 5000x2500 with 1 Axes>"
							},
							"AQAAANWEBQAAAAAACYUFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							358,
							2,
							"append",
							{
								"characters": "\n\n"
							},
							"AgAAAAmFBQAAAAAAC4UFAAAAAAAAAAAAC4UFAAAAAAANhQUAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							359,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[[  2.     3.     4.     5.     6.     7.     8.     9.    10.    11.\n   12.    13.    14.    15.    16.    17.    18.    19.    20.    21.\n   22.    23.    24.    25.    26.    27.    28.    29.    30.    31.\n   32.    33.    34.    35.    36.    37.    38.    39.    40.    41.\n   42.    43.    44.    45.    46.    47.    48.    49.    50.    51.\n   52.    53.    54.    55.    56.    57.    58.    59.    60.    61.\n   62.    63.    64.    65.    66.    67.    68.    69.    70.    71.\n   72.    73.    74.    75.    76.    77.    78.    79.    80.    81.\n   82.    83.    84.    85.    86.    87.    88.    89.    90.    91.\n   92.    93.    94.    95.    96.    97.    98.    99.   100.   101.\n  102.   103.   104.   105.   106.   107.   108.   109.   110.   111.\n  112.   113.   114.   115.   116.   117.   118.   119.   120.   121.\n  122.   123.   124.   125.  ]\n [  1.67   2.37   2.91   3.37   3.76   4.13   4.49   4.79   5.1    5.37\n    5.64   5.88   6.13   6.37   6.61   6.86   7.07   7.28   7.49   7.7\n    7.89   8.1    8.28   8.49   8.68   8.86   9.04   9.22   9.4    9.55\n    9.74   9.89  10.07  10.25  10.4   10.56  10.74  10.89  11.04  11.22\n   11.37  11.53  11.68  11.83  12.01  12.13  12.32  12.44  12.62  12.74\n   12.92  13.04  13.19  13.35  13.5   13.65  13.8   13.95  14.07  14.26\n   14.38  14.53  14.68  14.83  14.23  14.07  13.89  13.74  13.59  13.44\n   13.29  13.1   12.95  12.8   12.65  12.47  12.32  12.16  11.98  11.83\n   11.65  11.5   11.34  11.16  10.98  10.83  10.65  10.46  10.31  10.13\n    9.95   9.77   9.59   9.4    9.22   9.01   8.83   8.61   8.43   8.22\n    8.01   7.8    7.58   7.37   7.16   6.92   6.67   6.43   6.19   5.91\n    5.64   5.34   5.04   4.73   4.4    4.03   3.64   3.18   2.67   2.\n    1.03   0.03   0.03   0.03]\n [ 61.5   60.5   59.5   58.5   57.5   56.5   55.5   54.5   53.5   52.5\n   51.5   50.5   49.5   48.5   47.5   46.5   45.5   44.5   43.5   42.5\n   41.5   40.5   39.5   38.5   37.5   36.5   35.5   34.5   33.5   32.5\n   31.5   30.5   29.5   28.5   27.5   26.5   25.5   24.5   23.5   22.5\n   21.5   20.5   19.5   18.5   17.5   16.5   15.5   14.5   13.5   12.5\n   11.5   10.5    9.5    8.5    7.5    6.5    5.5    4.5    3.5    2.5\n    1.5    0.5    0.5    1.5    2.5    3.5    4.5    5.5    6.5    7.5\n    8.5    9.5   10.5   11.5   12.5   13.5   14.5   15.5   16.5   17.5\n   18.5   19.5   20.5   21.5   22.5   23.5   24.5   25.5   26.5   27.5\n   28.5   29.5   30.5   31.5   32.5   33.5   34.5   35.5   36.5   37.5\n   38.5   39.5   40.5   41.5   42.5   43.5   44.5   45.5   46.5   47.5\n   48.5   49.5   50.5   51.5   52.5   53.5   54.5   55.5   56.5   57.5\n   58.5   59.5   60.5   61.5 ]]\n121\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAA2FBQAAAAAApY8FAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							360,
							2,
							"append",
							{
								"characters": "\n\n"
							},
							"AgAAAKWPBQAAAAAAp48FAAAAAAAAAAAAp48FAAAAAACpjwUAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							361,
							1,
							"append",
							{
								"characters": "\nError: ValueError, all the input array dimensions for the concatenation axis must match exactly, but along dimension 1, the array at index 0 has size 124 and the array at index 1 has size 2.\n            \nTraceback:\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/685713987.py in <module>\n      7     analog=False,\n      8 )\n----> 9 eye = Eye()\n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/2381159076.py in __init__(self, _filt)\n     22         self.xline = None\n     23         self.yline = None\n---> 24         self.gen_plt_data(_top, _bot)\n     25         print(self.scatter.keys())\n     26 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/2381159076.py in gen_plt_data(self, top, bot)\n     39         self.plot[\"signal\"] = np.stack([[self.t, top], [self.t, bot]], axis=2)\n     40         self.init_points(top, bot)\n---> 41         self.scan(self.plot[\"signal\"])\n     42     #%%\n     43 \n\n/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/ipykernel_44507/2381159076.py in scan(self, h_eye)\n    114 \n    115         combo = np.vstack([d[\"r\"].T[0], np.std([ d[\"l\"].T[1], d[\"r\"].T[1], *h.T], axis=0)])\n--> 116         combo = np.vstack([d[\"r\"].T[0], np.std([ d[\"l\"].T[1], d[\"r\"].T[1]], axis=1), np.std([*h.T], axis=1)])\n    117 \n    118         left  = np.searchsorted(d[\"l\"].T[1], i_maxh/2)\n\n<__array_function__ internals> in vstack(*args, **kwargs)\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/numpy/core/shape_base.py in vstack(tup)\n    280     if not isinstance(arrs, list):\n    281         arrs = [arrs]\n--> 282     return _nx.concatenate(arrs, 0)\n    283 \n    284 \n\n<__array_function__ internals> in concatenate(*args, **kwargs)\n\nValueError: all the input array dimensions for the concatenation axis must match exactly, but along dimension 1, the array at index 0 has size 124 and the array at index 1 has size 2"
							},
							"AQAAAKmPBQAAAAAAtJcFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							362,
							2,
							"append",
							{
								"characters": "\n\n"
							},
							"AgAAALSXBQAAAAAAtpcFAAAAAAAAAAAAtpcFAAAAAAC4lwUAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							363,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[[  2.     3.     4.     5.     6.     7.     8.     9.    10.    11.\n   12.    13.    14.    15.    16.    17.    18.    19.    20.    21.\n   22.    23.    24.    25.    26.    27.    28.    29.    30.    31.\n   32.    33.    34.    35.    36.    37.    38.    39.    40.    41.\n   42.    43.    44.    45.    46.    47.    48.    49.    50.    51.\n   52.    53.    54.    55.    56.    57.    58.    59.    60.    61.\n   62.    63.    64.    65.    66.    67.    68.    69.    70.    71.\n   72.    73.    74.    75.    76.    77.    78.    79.    80.    81.\n   82.    83.    84.    85.    86.    87.    88.    89.    90.    91.\n   92.    93.    94.    95.    96.    97.    98.    99.   100.   101.\n  102.   103.   104.   105.   106.   107.   108.   109.   110.   111.\n  112.   113.   114.   115.   116.   117.   118.   119.   120.   121.\n  122.   123.   124.   125.  ]\n [  1.67   2.37   2.91   3.37   3.76   4.13   4.49   4.79   5.1    5.37\n    5.64   5.88   6.13   6.37   6.61   6.86   7.07   7.28   7.49   7.7\n    7.89   8.1    8.28   8.49   8.68   8.86   9.04   9.22   9.4    9.55\n    9.74   9.89  10.07  10.25  10.4   10.56  10.74  10.89  11.04  11.22\n   11.37  11.53  11.68  11.83  12.01  12.13  12.32  12.44  12.62  12.74\n   12.92  13.04  13.19  13.35  13.5   13.65  13.8   13.95  14.07  14.26\n   14.38  14.53  14.68  14.83  14.23  14.07  13.89  13.74  13.59  13.44\n   13.29  13.1   12.95  12.8   12.65  12.47  12.32  12.16  11.98  11.83\n   11.65  11.5   11.34  11.16  10.98  10.83  10.65  10.46  10.31  10.13\n    9.95   9.77   9.59   9.4    9.22   9.01   8.83   8.61   8.43   8.22\n    8.01   7.8    7.58   7.37   7.16   6.92   6.67   6.43   6.19   5.91\n    5.64   5.34   5.04   4.73   4.4    4.03   3.64   3.18   2.67   2.\n    1.03   0.03   0.03   0.03]\n [ 61.5   60.5   59.5   58.5   57.5   56.5   55.5   54.5   53.5   52.5\n   51.5   50.5   49.5   48.5   47.5   46.5   45.5   44.5   43.5   42.5\n   41.5   40.5   39.5   38.5   37.5   36.5   35.5   34.5   33.5   32.5\n   31.5   30.5   29.5   28.5   27.5   26.5   25.5   24.5   23.5   22.5\n   21.5   20.5   19.5   18.5   17.5   16.5   15.5   14.5   13.5   12.5\n   11.5   10.5    9.5    8.5    7.5    6.5    5.5    4.5    3.5    2.5\n    1.5    0.5    0.5    1.5    2.5    3.5    4.5    5.5    6.5    7.5\n    8.5    9.5   10.5   11.5   12.5   13.5   14.5   15.5   16.5   17.5\n   18.5   19.5   20.5   21.5   22.5   23.5   24.5   25.5   26.5   27.5\n   28.5   29.5   30.5   31.5   32.5   33.5   34.5   35.5   36.5   37.5\n   38.5   39.5   40.5   41.5   42.5   43.5   44.5   45.5   46.5   47.5\n   48.5   49.5   50.5   51.5   52.5   53.5   54.5   55.5   56.5   57.5\n   58.5   59.5   60.5   61.5 ]]\n63\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAALiXBQAAAAAAT6IFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							364,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAE+iBQAAAAAAUaIFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							365,
							1,
							"append",
							{
								"characters": "\n(display data): <Figure size 5000x2500 with 1 Axes>"
							},
							"AQAAAFGiBQAAAAAAhaIFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							366,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAIWiBQAAAAAAh6IFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							367,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAIeiBQAAAAAAiaIFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							368,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[[ 2.    3.    4.    5.    6.    7.    8.    9.   10.   11.   12.   13.\n  14.   15.   16.   17.   18.   19.   20.   21.   22.   23.   24.   25.\n  26.   27.   28.   29.   30.   31.   32.   33.   34.   35.   36.   37.\n  38.   39.   40.   41.   42.   43.   44.   45.   46.   47.   48.   49.\n  50.   51.   52.   53.   54.   55.   56.   57.   58.   59.   60.   61.\n  62.   63.   64.   65.   66.   67.   68.   69.   70.   71.   72.   73.\n  74.   75.   76.   77.   78.   79.   80.   81.   82.   83.   84.   85.\n  86.   87.   88.   89.   90.  ]\n [ 0.67  0.76  0.82  0.89  0.95  1.4   0.45  1.1   0.54  1.76  1.85  1.91\n   2.    2.09  2.15  2.21  2.27  2.34  2.4   2.46  2.52  2.58  2.64  2.7\n   2.76  2.82  2.88  2.94  3.    3.06  3.12  3.12  3.18  3.25  3.31  3.37\n   3.43  3.46  3.49  3.55  3.61  3.67  3.7   3.73  3.79  3.85  3.91  3.94\n   3.97  4.03  4.09  4.13  4.19  4.22  4.28  4.31  4.37  4.43  4.46  4.52\n   4.55  4.61  4.64  4.7   4.73  4.79  4.85  4.88  4.91  4.97  5.04  5.07\n   5.1   5.16  5.22  5.28  5.28  5.34  5.4   5.46  5.52  5.52  5.58  5.64\n   5.7   5.76  5.79  5.85  5.88]\n [44.   43.   42.   41.   40.   39.   38.   37.   36.   35.   34.   33.\n  32.   31.   30.   29.   28.   27.   26.   25.   24.   23.   22.   21.\n  20.   19.   18.   17.   16.   15.   14.   13.   12.   11.   10.    9.\n   8.    7.    6.    5.    4.    3.    2.    1.    0.    1.    2.    3.\n   4.    5.    6.    7.    8.    9.   10.   11.   12.   13.   14.   15.\n  16.   17.   18.   19.   20.   21.   22.   23.   24.   25.   26.   27.\n  28.   29.   30.   31.   32.   33.   34.   35.   36.   37.   38.   39.\n  40.   41.   42.   43.   44.  ]]\n88\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAImiBQAAAAAAIqkFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							369,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAACKpBQAAAAAAJKkFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							370,
							1,
							"append",
							{
								"characters": "\n(display data): <Figure size 5000x2500 with 1 Axes>"
							},
							"AQAAACSpBQAAAAAAWKkFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							371,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAFipBQAAAAAAWqkFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							372,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAFqpBQAAAAAAXKkFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							373,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[[ 2.    3.    4.    5.    6.    7.    8.    9.   10.   11.   12.   13.\n  14.   15.   16.   17.   18.   19.   20.   21.   22.   23.   24.   25.\n  26.   27.   28.   29.   30.   31.   32.   33.   34.   35.   36.   37.\n  38.   39.   40.   41.   42.   43.   44.   45.   46.   47.   48.   49.\n  50.   51.   52.   53.   54.   55.   56.   57.   58.   59.   60.   61.\n  62.   63.   64.   65.   66.   67.   68.   69.   70.   71.   72.   73.\n  74.   75.   76.   77.   78.   79.   80.   81.   82.   83.   84.   85.\n  86.   87.   88.   89.   90.  ]\n [ 0.67  0.76  0.82  0.89  0.95  1.4   0.45  1.1   0.54  1.76  1.85  1.91\n   2.    2.09  2.15  2.21  2.27  2.34  2.4   2.46  2.52  2.58  2.64  2.7\n   2.76  2.82  2.88  2.94  3.    3.06  3.12  3.12  3.18  3.25  3.31  3.37\n   3.43  3.46  3.49  3.55  3.61  3.67  3.7   3.73  3.79  3.85  3.91  3.94\n   3.97  4.03  4.09  4.13  4.19  4.22  4.28  4.31  4.37  4.43  4.46  4.52\n   4.55  4.61  4.64  4.7   4.73  4.79  4.85  4.88  4.91  4.97  5.04  5.07\n   5.1   5.16  5.22  5.28  5.28  5.34  5.4   5.46  5.52  5.52  5.58  5.64\n   5.7   5.76  5.79  5.85  5.88]\n [44.   43.   42.   41.   40.   39.   38.   37.   36.   35.   34.   33.\n  32.   31.   30.   29.   28.   27.   26.   25.   24.   23.   22.   21.\n  20.   19.   18.   17.   16.   15.   14.   13.   12.   11.   10.    9.\n   8.    7.    6.    5.    4.    3.    2.    1.    0.    1.    2.    3.\n   4.    5.    6.    7.    8.    9.   10.   11.   12.   13.   14.   15.\n  16.   17.   18.   19.   20.   21.   22.   23.   24.   25.   26.   27.\n  28.   29.   30.   31.   32.   33.   34.   35.   36.   37.   38.   39.\n  40.   41.   42.   43.   44.  ]]\n6\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAFypBQAAAAAA9K8FAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							374,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAPSvBQAAAAAA9q8FAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							375,
							1,
							"append",
							{
								"characters": "\n(display data): <Figure size 5000x2500 with 1 Axes>"
							},
							"AQAAAPavBQAAAAAAKrAFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							376,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAACqwBQAAAAAALLAFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							377,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAACywBQAAAAAALrAFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							378,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[[ 2.    3.    4.    5.    6.    7.    8.    9.   10.   11.   12.   13.\n  14.   15.   16.   17.   18.   19.   20.   21.   22.   23.   24.   25.\n  26.   27.   28.   29.   30.   31.   32.   33.   34.   35.   36.   37.\n  38.   39.   40.   41.   42.   43.   44.   45.   46.   47.   48.   49.\n  50.   51.   52.   53.   54.   55.   56.   57.   58.   59.   60.   61.\n  62.   63.   64.   65.   66.   67.   68.   69.   70.   71.   72.   73.\n  74.   75.   76.   77.   78.   79.   80.   81.   82.   83.   84.   85.\n  86.   87.   88.   89.   90.  ]\n [34.84 34.19 33.55 32.91 32.27 31.74 31.39 30.39 30.21 29.33 28.75 28.16\n  27.57 27.01 26.44 25.88 25.32 24.78 24.24 23.71 23.19 22.68 22.18 21.7\n  21.22 20.76 20.32 19.89 19.47 19.08 18.7  18.33 17.99 17.68 17.38 17.11\n  16.87 16.66 16.45 16.29 16.16 16.06 16.   15.94 15.93 15.96 16.01 16.11\n  16.2  16.35 16.52 16.74 16.97 17.21 17.49 17.8  18.13 18.48 18.83 19.22\n  19.63 20.06 20.48 20.93 21.41 21.89 22.38 22.87 23.39 23.92 24.45 24.98\n  25.54 26.1  26.66 27.23 27.8  28.39 28.98 29.57 30.17 30.77 31.38 31.99\n  32.61 33.23 33.86 34.49 35.11]]\n44\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAC6wBQAAAAAArrQFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							379,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAK60BQAAAAAAsLQFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							380,
							1,
							"append",
							{
								"characters": "\n(display data): <Figure size 5000x2500 with 1 Axes>"
							},
							"AQAAALC0BQAAAAAA5LQFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							381,
							2,
							"append",
							{
								"characters": "\n\n"
							},
							"AgAAAOS0BQAAAAAA5rQFAAAAAAAAAAAA5rQFAAAAAADotAUAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							382,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[[ 2.    3.    4.    5.    6.    7.    8.    9.   10.   11.   12.   13.\n  14.   15.   16.   17.   18.   19.   20.   21.   22.   23.   24.   25.\n  26.   27.   28.   29.   30.   31.   32.   33.   34.   35.   36.   37.\n  38.   39.   40.   41.   42.   43.   44.   45.   46.   47.   48.   49.\n  50.   51.   52.   53.   54.   55.   56.   57.   58.   59.   60.   61.\n  62.   63.   64.   65.   66.   67.   68.   69.   70.   71.   72.   73.\n  74.   75.   76.   77.   78.   79.   80.   81.   82.   83.   84.   85.\n  86.   87.   88.   89.   90.  ]\n [34.84 34.19 33.55 32.91 32.27 31.74 31.39 30.39 30.21 29.33 28.75 28.16\n  27.57 27.01 26.44 25.88 25.32 24.78 24.24 23.71 23.19 22.68 22.18 21.7\n  21.22 20.76 20.32 19.89 19.47 19.08 18.7  18.33 17.99 17.68 17.38 17.11\n  16.87 16.66 16.45 16.29 16.16 16.06 16.   15.94 15.93 15.96 16.01 16.11\n  16.2  16.35 16.52 16.74 16.97 17.21 17.49 17.8  18.13 18.48 18.83 19.22\n  19.63 20.06 20.48 20.93 21.41 21.89 22.38 22.87 23.39 23.92 24.45 24.98\n  25.54 26.1  26.66 27.23 27.8  28.39 28.98 29.57 30.17 30.77 31.38 31.99\n  32.61 33.23 33.86 34.49 35.11]]\n88\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAOi0BQAAAAAAaLkFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							383,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAGi5BQAAAAAAarkFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							384,
							1,
							"append",
							{
								"characters": "\n(display data): <Figure size 5000x2500 with 1 Axes>"
							},
							"AQAAAGq5BQAAAAAAnrkFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							385,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAJ65BQAAAAAAoLkFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							386,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[[ 63.    64.    65.    66.    67.    68.    69.    70.    71.    72.\n   73.    74.    75.    76.    77.    78.    79.    80.    81.    82.\n   83.    84.    85.    86.    87.    88.    89.    90.    91.    92.\n   93.    94.    95.    96.    97.    98.    99.   100.   101.   102.\n  103.   104.   105.   106.   107.   108.   109.   110.   111.   112.\n  113.   114.   115.   116.   117.   118.   119.   120.   121.   122.\n  123.   124.   125.   126.  ]\n [ 23.42  22.75  23.14  22.51  21.89  21.28  20.68  20.1   19.54  18.98\n   18.44  17.93  17.41  16.91  16.42  15.95  15.51  15.07  14.3   13.79\n   13.29  12.82  12.37  11.93  11.53  11.08  10.73  10.41  10.1    9.87\n    9.65   9.52   9.41   9.38   9.38   9.46   9.56   9.75   9.96  10.21\n   10.53  10.87  11.25  11.68  12.11  12.58  13.06  13.57  14.09  14.63\n   15.18  15.76  16.33  16.93  17.53  18.13  18.75  19.37  19.99  20.63\n   21.41  22.08  22.75  23.42]]\n63\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAKC5BQAAAAAAc70FAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							387,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[[ 1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.   12.\n  13.   14.   15.   16.   17.   18.   19.   20.   21.   22.   23.   24.\n  25.   26.   27.   28.   29.   30.   31.   32.   33.   34.   35.   36.\n  37.   38.   39.   40.   41.   42.   43.   44.   45.   46.   47.   48.\n  49.   50.   51.   52.   53.   54.   55.   56.   57.   58.   59.   60.\n  61.   62.   63.   64.   65.   66.   67.   68.   69.   70.   71.   72.\n  73.   74.   75.   76.   77.   78.   79.   80.   81.   82.   83.   84.\n  85.  ]\n [33.14 32.42 31.71 31.32 30.71 30.11 29.39 28.77 28.17 27.29 26.98 26.4\n  25.82 25.24 24.67 24.11 23.56 23.02 22.48 21.95 21.44 20.94 20.44 19.97\n  19.51 19.06 18.63 18.21 17.81 17.44 17.08 16.75 16.43 16.14 15.88 15.65\n  15.45 15.28 15.15 15.04 14.96 14.9  14.89 14.93 14.99 15.08 15.2  15.35\n  15.53 15.75 15.99 16.27 16.57 16.87 17.22 17.6  17.98 18.39 18.8  19.25\n  19.7  20.17 20.66 21.16 21.66 22.18 22.71 23.25 23.8  24.35 24.92 25.49\n  26.07 26.65 27.25 27.83 28.43 29.04 29.65 30.27 30.89 31.51 32.13 32.76\n  33.39]]\n84\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAHO9BQAAAAAAw8EFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							388,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[[25.   26.   27.   28.   29.   30.   31.   32.   33.   34.   35.   36.\n  37.   38.   39.   40.   41.   42.   43.   44.   45.   46.   47.   48.\n  49.   50.   51.   52.   53.   54.   55.   56.   57.   58.   59.   60.\n  61.   62.   63.   64.   65.   66.   67.   68.   69.   70.   71.   72.\n  73.   74.   75.   76.   77.   78.   79.   80.   81.   82.   83.   84.\n  85.   86.   87.   88.   89.   90.   91.   92.   93.   94.   95.   96.\n  97.   98.  ]\n [27.1  26.28 25.61 24.94 24.27 23.61 22.95 22.29 21.63 20.98 20.33 19.68\n  19.04 18.41 17.78 17.15 16.54 15.92 15.32 14.73 14.14 13.58 13.02 12.49\n  11.96 11.46 10.97 10.52 10.1   9.7   9.34  9.03  8.78  8.56  8.4   8.3\n   8.25  8.26  8.36  8.5   8.68  8.92  9.24  9.57  9.96 10.37 10.82 11.28\n  11.79 12.32 12.86 13.43 14.02 14.63 17.76 18.27 18.8  19.33 19.88 20.44\n  21.01 21.58 22.17 22.86 23.47 24.07 23.63 24.23 24.85 25.47 26.1  25.75\n  26.42 27.1 ]]\n0\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAMPBBQAAAAAAjMUFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							389,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[[ 50.    51.    52.    53.    54.    55.    56.    57.    58.    59.\n   60.    61.    62.    63.    64.    65.    66.    67.    68.    69.\n   70.    71.    72.    73.    74.    75.    76.    77.    78.    79.\n   80.    81.    82.    83.    84.    85.    86.    87.    88.    89.\n   90.    91.    92.    93.    94.    95.    96.    97.    98.    99.\n  100.   101.   102.   103.   104.   105.   106.   107.   108.   109.\n  110.   111.   112.   113.   114.   115.   116.   117.   118.   119.\n  120.   121.   122.   123.   124.  ]\n [ 27.84  27.17  26.51  25.86  25.21  24.84  24.19  23.53  22.82  22.2\n   21.91  21.3   20.7   20.1   19.51  18.93  18.35  17.77  17.22  16.69\n   16.18  15.72  15.72  15.27  14.84  14.42  14.03  13.67  13.33  13.\n   12.73  12.49  12.29  12.12  12.    11.95  11.91  11.96  12.78  12.44\n   12.49  12.61  12.73  12.92  13.13  13.37  13.64  13.95  14.26  14.58\n   14.69  15.07  15.52  15.99  16.47  16.97  17.49  18.02  18.55  19.1\n   19.65  20.21  20.64  21.17  21.76  22.39  23.01  23.64  24.27  24.89\n   25.34  25.85  26.51  27.17  27.84]]\n0\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAIzFBQAAAAAA9skFAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							390,
							1,
							"append",
							{
								"characters": "\n(stdout):\n[[ 46.    47.    48.    49.    50.    51.    52.    53.    54.    55.\n   56.    57.    58.    59.    60.    61.    62.    63.    64.    65.\n   66.    67.    68.    69.    70.    71.    72.    73.    74.    75.\n   76.    77.    78.    79.    80.    81.    82.    83.    84.    85.\n   86.    87.    88.    89.    90.    91.    92.    93.    94.    95.\n   96.    97.    98.    99.   100.   101.   102.   103.   104.   105.\n  106.   107.   108.   109.   110.   111.   112.   113.  ]\n [ 25.26  24.85  24.23  23.6   22.98  22.37  21.76  21.16  20.57  19.98\n   19.41  18.84  18.27  17.72  17.19  16.66  16.14  15.66  15.18  14.72\n   14.28  13.87  13.48  13.12  12.77  12.47  12.2   11.96  11.77  11.62\n   11.5   11.44  11.4   11.4   11.48  11.57  11.74  11.92  12.13  12.39\n   12.16  12.36  12.59  12.86  13.19  13.52  13.86  14.25  14.65  15.09\n   15.55  16.01  16.5   17.    17.53  18.06  18.61  19.16  19.73  20.31\n   20.89  21.48  22.08  22.68  23.29  23.93  24.59  25.26]]\n0\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAPbJBQAAAAAAAM4FAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAACW4FAAAAAAAJbgUAAAAAAAAAAAAAAPC/"
						],
						[
							395,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAADOBQAAAAAAAs4FAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAA/80FAAAAAAD/zQUAAAAAAAAAAAAAAPC/"
						],
						[
							396,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAALOBQAAAAAABM4FAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAA/80FAAAAAAD/zQUAAAAAAAAAAAAAAPC/"
						],
						[
							397,
							1,
							"append",
							{
								"characters": "\n\n"
							},
							"AQAAAATOBQAAAAAABs4FAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAA/80FAAAAAAD/zQUAAAAAAAAAAAAAAPC/"
						],
						[
							398,
							1,
							"append",
							{
								"characters": "\n(stdout):\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAAbOBQAAAAAAQ84FAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAA/80FAAAAAAD/zQUAAAAAAAAAAAAAAPC/"
						],
						[
							399,
							1,
							"append",
							{
								"characters": "\n(stdout):\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAEPOBQAAAAAAgM4FAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAA/80FAAAAAAD/zQUAAAAAAAAAAAAAAPC/"
						],
						[
							400,
							1,
							"append",
							{
								"characters": "\n(stdout):\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAIDOBQAAAAAAvc4FAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAA/80FAAAAAAD/zQUAAAAAAAAAAAAAAPC/"
						],
						[
							401,
							1,
							"append",
							{
								"characters": "\n(stdout):\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAL3OBQAAAAAA+s4FAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAA/80FAAAAAAD/zQUAAAAAAAAAAAAAAPC/"
						],
						[
							402,
							1,
							"append",
							{
								"characters": "\n(stdout):\ndict_keys(['initial', 'average', 'mesh', 'scan'])\n"
							},
							"AQAAAPrOBQAAAAAAN88FAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAA/80FAAAAAAD/zQUAAAAAAAAAAAAAAPC/"
						]
					]
				},
				{
					"file": "/Users/Phteben/Library/.gitignore",
					"settings":
					{
						"buffer_size": 42,
						"encoding": "UTF-8",
						"line_ending": "Unix"
					},
					"undo_stack":
					[
						[
							13,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AQAAACoAAAAAAAAAKwAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAKgAAAAAAAAAqAAAAAAAAAAAAAAAAAPC/"
						],
						[
							14,
							1,
							"insert",
							{
								"characters": "0P"
							},
							"AgAAACsAAAAAAAAALAAAAAAAAAAAAAAALAAAAAAAAAAtAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAKwAAAAAAAAArAAAAAAAAAAAAAAAAAPC/"
						],
						[
							15,
							1,
							"left_delete",
							null,
							"AQAAACwAAAAAAAAALAAAAAAAAAABAAAAUA",
							"AQAAAAAAAAABAAAALQAAAAAAAAAtAAAAAAAAAAAAAAAAAPC/"
						],
						[
							16,
							1,
							"insert",
							{
								"characters": "_"
							},
							"AQAAACwAAAAAAAAALQAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAALAAAAAAAAAAsAAAAAAAAAAAAAAAAAPC/"
						],
						[
							17,
							2,
							"left_delete",
							null,
							"AgAAACwAAAAAAAAALAAAAAAAAAABAAAAXysAAAAAAAAAKwAAAAAAAAABAAAAMA",
							"AQAAAAAAAAABAAAALQAAAAAAAAAtAAAAAAAAAAAAAAAAAPC/"
						],
						[
							18,
							1,
							"insert",
							{
								"characters": "*packag"
							},
							"BwAAACsAAAAAAAAALAAAAAAAAAAAAAAALAAAAAAAAAAtAAAAAAAAAAAAAAAtAAAAAAAAAC4AAAAAAAAAAAAAAC4AAAAAAAAALwAAAAAAAAAAAAAALwAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAADEAAAAAAAAAAAAAADEAAAAAAAAAMgAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAKwAAAAAAAAArAAAAAAAAAAAAAAAAAPC/"
						],
						[
							19,
							1,
							"insert",
							{
								"characters": "e*c"
							},
							"AwAAADIAAAAAAAAAMwAAAAAAAAAAAAAAMwAAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADUAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAMgAAAAAAAAAyAAAAAAAAAAAAAAAAAPC/"
						],
						[
							20,
							1,
							"insert",
							{
								"characters": "ontrol"
							},
							"BgAAADUAAAAAAAAANgAAAAAAAAAAAAAANgAAAAAAAAA3AAAAAAAAAAAAAAA3AAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAAAOQAAAAAAAAAAAAAAOQAAAAAAAAA6AAAAAAAAAAAAAAA6AAAAAAAAADsAAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAANQAAAAAAAAA1AAAAAAAAAAAAAAAAAPC/"
						],
						[
							21,
							1,
							"run_macro_file",
							{
								"file": "res://Packages/Default/Delete to Hard BOL.sublime-macro"
							},
							"AQAAACsAAAAAAAAAKwAAAAAAAAAQAAAAKnBhY2thZ2UqY29udHJvbA",
							"AQAAAAAAAAABAAAAOwAAAAAAAAA7AAAAAAAAAAAAAAAAAPC/"
						],
						[
							22,
							1,
							"left_delete",
							null,
							"AQAAACoAAAAAAAAAKgAAAAAAAAABAAAACg",
							"AQAAAAAAAAABAAAAKwAAAAAAAAArAAAAAAAAAAAAAAAAAPC/"
						]
					]
				}
			],
			"build_system": "",
			"build_system_choices":
			[
				[
					[
						[
							"Packages/Default/Syntax Tests.sublime-build",
							""
						],
						[
							"Packages/Default/Syntax Tests.sublime-build",
							"All Syntaxes"
						],
						[
							"Packages/Default/Syntax Tests.sublime-build",
							"Performance"
						],
						[
							"Packages/Default/Syntax Tests.sublime-build",
							"Regex Compatibility"
						]
					],
					[
						"Packages/Default/Syntax Tests.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							""
						],
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							"Traditional"
						],
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							"PdfLaTeX"
						],
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							"XeLaTeX"
						],
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							"LuaLaTeX"
						],
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							"Basic Builder"
						],
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							"Basic Builder - PdfLaTeX"
						],
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							"Basic Builder - XeLaTeX"
						],
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							"Basic Builder - LuaLaTeX"
						],
						[
							"Packages/LaTeXTools/LaTeX.sublime-build",
							"Script Builder"
						]
					],
					[
						"Packages/LaTeXTools/LaTeX.sublime-build",
						""
					]
				]
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"folda",
						"Code Folding: Fold All"
					],
					[
						"connect",
						"Helium: Connect Kernel"
					],
					[
						"helium",
						"Helium: Connect Kernel"
					],
					[
						"key",
						"Preferences: Key Bindings"
					],
					[
						"scheme",
						"PackageDev: Edit Current Color Scheme"
					],
					[
						"arg",
						"Format Arguments"
					],
					[
						"helium res",
						"Helium: Restart Kernel"
					],
					[
						"theme",
						"PackageDev: Edit Current Theme"
					],
					[
						"fold",
						"Code Folding: Fold All"
					],
					[
						"black",
						"Sublack: Format file"
					],
					[
						"open",
						"PackageResourceViewer: Open Resource"
					],
					[
						"alignment",
						"Preferences: Alignment File Settings – Syntax Specific – User"
					],
					[
						"fields",
						"MultiEditUtils: Selection as Fields"
					],
					[
						"syntax python",
						"Set Syntax: Python"
					],
					[
						"open re",
						"PackageResourceViewer: Open Resource"
					],
					[
						"py",
						"Set Syntax: Python"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"syntax scheme",
						"Set Syntax: Sublime Text Color Scheme (JSON)"
					],
					[
						"extract",
						"PackageResourceViewer: Extract Package"
					],
					[
						"book",
						"Bookmarks: Toggle"
					],
					[
						"select to ",
						"Selection: Expand to Brackets"
					],
					[
						"table mode",
						"AlignTab: Live Preview Mode"
					],
					[
						"tablemode",
						"AlignTab: Exit Table Mode"
					],
					[
						"exit t",
						"AlignTab: Exit Table Mode"
					],
					[
						"aligntab",
						"AlignTab: Table Mode"
					],
					[
						"reindent",
						"Indentation: Reindent Lines"
					],
					[
						"color scheme",
						"PackageDev: Edit Current Color Scheme"
					],
					[
						"color",
						"Color Hint"
					],
					[
						"syntax shell",
						"Set Syntax: Bourne Again Shell (bash)"
					],
					[
						"html",
						"HTMLPrettify"
					],
					[
						"sftp",
						"Preferences: SFTP Settings"
					],
					[
						"markdown",
						"MarkdownLivePreview: Open Preview"
					],
					[
						"preview",
						"OmniMarkupPreviewer: Preview Current Markup in Browser"
					],
					[
						"side",
						"Side-by-Side: Select a File"
					],
					[
						"wrap",
						"Word Wrap: Toggle"
					],
					[
						"syntax markdown",
						"Set Syntax: Markdown GFM"
					],
					[
						"remove",
						"Package Control: Remove Package"
					],
					[
						"syntax markd",
						"Set Syntax: MultiMarkdown"
					],
					[
						"markdonw",
						"Markdown Preview: Preview in Browser"
					],
					[
						"r",
						"Reload All Files"
					],
					[
						"line",
						"Line Endings Unify"
					],
					[
						"shell",
						"Set Syntax: Bourne Again Shell (bash)"
					],
					[
						"syntax",
						"Set Syntax: Python"
					],
					[
						"swa",
						"BracketHighlighter: Swap Quotes"
					],
					[
						"swap q",
						"BracketHighlighter: Swap Quotes"
					],
					[
						"quote",
						"BracketHighlighter: Swap Quotes"
					],
					[
						"scope",
						"Scope Hunter: Toggle Instant Scoper"
					],
					[
						"new syntax",
						"PackageDev: New Syntax Definition"
					],
					[
						"show all",
						"SublimeLinter: Show All Errors"
					],
					[
						"reload",
						"Reload All Files"
					],
					[
						"sublime linter",
						"SublimeLinter: Show All Errors"
					],
					[
						"linter",
						"Preferences: SublimeLinter Settings"
					],
					[
						"ecc",
						"ECC: Settings"
					],
					[
						"inter",
						"Set Syntax: swig-interface"
					],
					[
						"syntac",
						"Set Syntax: C"
					],
					[
						"syntax defin",
						"Set Syntax: Sublime Text Syntax Definition (YAML)"
					],
					[
						"syntac c",
						"Set Syntax: C"
					],
					[
						"uint",
						"Set Syntax: ucfconstraints"
					],
					[
						"build",
						"Build With: Syntax Tests"
					],
					[
						"build w",
						"Build With: Syntax Tests"
					],
					[
						"reloa",
						"Reload All Files"
					],
					[
						"clanf",
						"Clang Format: Format Selection"
					],
					[
						"clang",
						"Clang Format: Format Selection"
					],
					[
						"select",
						"Selection: Expand to Scope"
					],
					[
						"expand",
						"Selection: Expand to Indentation"
					],
					[
						"disable",
						"Package Control: Disable Package"
					],
					[
						"sublack",
						"Sublack: Format file"
					],
					[
						"python",
						"Set Syntax: Python"
					],
					[
						"ruler",
						"CursorRuler: Toggle Enabled/Disabled"
					],
					[
						"jkv",
						"Set Syntax: JSON Key-Value"
					],
					[
						"json",
						"Set Syntax: JSON"
					],
					[
						"serial yaml",
						"Serialized Data Converter: JSON to YAML"
					],
					[
						"sftp li",
						"SFTP: Enter License Key"
					],
					[
						"subla",
						"Sublack: Format file"
					],
					[
						"sub",
						"Sublack: Format file"
					],
					[
						"kv",
						"Set Syntax: JSON Key-Value"
					],
					[
						"convert to json b",
						"Build With: Convert to ... - JSON"
					],
					[
						"format ya",
						"Pretty YAML: Reformat (Pretty Print) YAML"
					],
					[
						"serial",
						"Serialized Data Converter: JSON to YAML"
					],
					[
						"REPL python",
						"SublimeREPL: Python"
					],
					[
						"syntaxpython",
						"Set Syntax: Python"
					],
					[
						"sublime repl py",
						"SublimeREPL: Python - IPython"
					],
					[
						"discover",
						"Package Control: Discover Packages"
					],
					[
						"docs",
						"Anaconda: Display object docs"
					],
					[
						"side ",
						"Side-by-Side: Select a File"
					],
					[
						"ana",
						"Anaconda: Display object docs"
					],
					[
						"tcsh synt",
						"Set Syntax: (T)csh Shell Script"
					],
					[
						"syntax csh",
						"Set Syntax: (T)csh Shell Script"
					],
					[
						"csh",
						"Preferences: ColorHints Settings"
					],
					[
						"format",
						"Format Arguments"
					],
					[
						"cance",
						"SFTP: Cancel Upload"
					],
					[
						"align file",
						"Preferences: Alignment File Settings – Syntax Specific – User"
					],
					[
						"preser",
						"MultiEditUtils: Preserve Case"
					],
					[
						"argu",
						"Format Arguments"
					],
					[
						"cancel",
						"SFTP: Cancel Upload"
					],
					[
						"show",
						"SFTP: Show Panel"
					],
					[
						"shoe",
						"SublimeLinter: Show All Errors"
					],
					[
						"show s",
						"SFTP: Show Panel"
					],
					[
						"convert to json ser",
						"Serialized Data Converter: YAML to JSON"
					],
					[
						"build yaml",
						"Build With: Convert to ... - YAML (Block Style)"
					],
					[
						"disc",
						"Package Control: Discover Packages"
					],
					[
						"hjs",
						"Set Syntax: Hjson"
					],
					[
						"sysv",
						"Set Syntax: SystemVerilog"
					],
					[
						"argumen",
						"Format Arguments"
					],
					[
						"preserve",
						"MultiEditUtils: Preserve Case"
					],
					[
						"sort",
						"Sort Lines"
					],
					[
						"convert",
						"Convert Case: snake_case"
					],
					[
						"replace",
						"Replace characters in selection with spaces"
					],
					[
						"single lines",
						"Reduce strings of >=2 lines into a single line within each selection"
					],
					[
						"reduce",
						"Reduce strings of >=2 spaces into a single space within selection"
					],
					[
						"disco",
						"Package Control: Discover Packages"
					],
					[
						"onstall",
						"Package Control: Install Package"
					],
					[
						"align",
						"Preferences: Alignment File Settings – Syntax Specific – User"
					],
					[
						"install ",
						"Package Control: Install Package"
					],
					[
						"preserv",
						"MultiEditUtils: Preserve Case"
					],
					[
						"word",
						"WordHighlight: Toggle Enabled"
					],
					[
						"yaml defau",
						"Build With: Convert to ... - YAML (Default Style)"
					],
					[
						"convert to yaml",
						"Serialized Data Converter: JSON to YAML (Save)"
					],
					[
						"vindent",
						"Verilog: Reindent"
					],
					[
						"sftp ca",
						"SFTP: Cancel Upload"
					],
					[
						"sftp p",
						"SFTP: Show Panel"
					],
					[
						"table ",
						"AlignTab: Live Preview Mode"
					],
					[
						"sync scroll",
						"SyncScroll: Toggle Current View Scroll Sync"
					],
					[
						"sftp pan",
						"SFTP: Show Panel"
					],
					[
						"fz",
						"SublimeZilla: Import FileZilla Server"
					],
					[
						"block",
						"Toggle Block Comment"
					],
					[
						"split",
						"MultiEditUtils: Split selection"
					],
					[
						"show command",
						"KeybindingHelper: Toggle show commands"
					]
				],
				"width": 0.0
			},
			"console":
			{
				"height": 487.0,
				"history":
				[
					"sublime.find_resources(\"*.hidden-tmTheme\")",
					"sublime.find_resources(\"*.hidden-color-scheme\")",
					"sublime.log_commands(True)",
					"{\n  \"title\": \"Remote Desktop\",\n  \"rules\": [\n    {\n      \"description\": \"Swap command and control\",\n      \"manipulators\": [\n        {\n          \"type\": \"basic\",\n          \"from\": {\n            \"key_code\": \"left_control\",\n            \"modifiers\": {\n              \"optional\": [\n                \"any\"\n              ]\n            }\n          },\n          \"to\": [\n            {\n              \"key_code\": \"left_command\"\n            }\n          ],\n          \"conditions\": [\n            {\n              \"type\": \"frontmost_application_if\",\n              \"bundle_identifiers\": [\n                \"com\\\\.microsoft\\\\.rdc\\\\.mac\"\n              ]\n            }\n          ]\n        },\n        {\n          \"type\": \"basic\",\n          \"from\": {\n            \"key_code\": \"left_command\",\n            \"modifiers\": {\n              \"optional\": [\n                \"any\"\n              ]\n            }\n          },\n          \"to\": [\n            {\n              \"key_code\": \"left_control\"\n            }\n          ],\n          \"conditions\": [\n            {\n              \"type\": \"frontmost_application_if\",\n              \"bundle_identifiers\": [\n                \"com\\\\.microsoft\\\\.rdc\\\\.mac\"\n              ]\n            }\n          ]\n        },\n        {\n          \"type\": \"basic\",\n          \"from\": {\n            \"key_code\": \"right_control\",\n            \"modifiers\": {\n              \"optional\": [\n                \"any\"\n              ]\n            }\n          },\n          \"to\": [\n            {\n              \"key_code\": \"right_command\"\n            }\n          ],\n          \"conditions\": [\n            {\n              \"type\": \"frontmost_application_if\",\n              \"bundle_identifiers\": [\n                \"com\\\\.microsoft\\\\.rdc\\\\.mac\"\n              ]\n            }\n          ]\n        },\n        {\n          \"type\": \"basic\",\n          \"from\": {\n            \"key_code\": \"right_command\",\n            \"modifiers\": {\n              \"optional\": [\n                \"any\"\n              ]\n            }\n          },\n          \"to\": [\n            {\n              \"key_code\": \"right_control\"\n            }\n          ],\n          \"conditions\": [\n            {\n              \"type\": \"frontmost_application_if\",\n              \"bundle_identifiers\": [\n                \"com\\\\.microsoft\\\\.rdc\\\\.mac\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}",
					"rules:\n- description: Swap command and control\n  manipulators:\n  - type: basic\n    from:\n      key_code: left_control\n      modifiers:\n        optional:\n        - any\n    to:\n    - key_code: left_command\n    conditions:\n    - type: frontmost_application_if\n      bundle_identifiers:\n      - com\\.microsoft\\.rdc\\.mac\n  - type: basic\n    from:\n      key_code: left_command\n      modifiers:\n        optional:\n        - any\n    to:\n    - key_code: left_control\n    conditions:\n    - type: frontmost_application_if\n      bundle_identifiers:\n      - com\\.microsoft\\.rdc\\.mac\n  - type: basic\n    from:\n      key_code: right_control\n      modifiers:\n        optional:\n        - any\n    to:\n    - key_code: right_command\n    conditions:\n    - type: frontmost_application_if\n      bundle_identifiers:\n      - com\\.microsoft\\.rdc\\.mac\n  - type: basic\n    from:\n      key_code: right_command\n      modifiers:\n        optional:\n        - any\n    to:\n    - key_code: right_control\n    conditions:\n    - type: frontmost_application_if\n      bundle_identifiers:\n      - com\\.microsoft\\.rdc\\.mac\n",
					"com.sublimetext.4",
					"{\n          \"description\": \"escape = capslock switch\",\n          \"type\": \"basic\",\n          \"from\": {\n            \"key_code\": \"escape\",\n            \"modifiers\": {\n              \"optional\": [\n                \"caps_lock\"\n              ],\n              \"mandatory\": [\n                \"right_command\",\n                \"right_control\",\n                \"right_shift\",\n                \"right_option\"\n              ]\n            }\n          },\n          \"to\": [\n            {\n              \"key_code\": \"caps_lock\",\n              \"modifiers\": [\n                \"left_control\"\n              ]\n            }\n          ]\n        }",
					"{\n    \"title\": \"Keychron Swap\",\n    \"rules\": [{\n\n            \"description\": \"C2: Swap insert and fn\",\n            \"manipulators\": [{\n                    \"conditions\": [{\n                        \"identifiers\": [{\n                            \"description\": \"Keychron\",\n                            \"product_id\": 591\n                        }],\n                        \"type\": \"device_if\"\n                    }],\n                    \"type\": \"basic\",\n                    \"from\": {\n                        \"key_code\": \"fn\"\n                    },\n                    \"to\": {\n                        \"key_code\": \"insert\"\n                    }\n                },\n                {\n                    \"conditions\": [{\n                        \"identifiers\": [{\n                            \"description\": \"Keychron\",\n                            \"product_id\": 591\n                        }],\n                        \"type\": \"device_if\"\n                    }],\n                    \"type\": \"basic\",\n                    \"from\": {\n                        \"key_code\": \"insert\"\n                    },\n                    \"to\": {\n                        \"key_code\": \"fn\"\n                    }\n                }\n            ]\n        },\n        {\n            \"description\": \"C2: Swap CMD and CTRL\",\n            \"manipulators\": [{\n                    \"conditions\": [{\n                        \"identifiers\": [{\n                            \"description\": \"Keychron\",\n                            \"product_id\": 591\n                        }],\n                        \"type\": \"device_if\"\n                    }],\n                    \"from\": {\n                        \"key_code\": \"left_command\",\n                        \"modifiers\": {\n                            \"optional\": [\n                                \"any\"\n                            ]\n                        }\n                    },\n                    \"to\": [{\n                        \"key_code\": \"left_option\"\n                    }],\n                    \"type\": \"basic\"\n                },\n                {\n                    \"conditions\": [{\n                        \"identifiers\": [{\n                            \"description\": \"Keychron\",\n                            \"product_id\": 591\n                        }],\n                        \"type\": \"device_if\"\n                    }],\n                    \"from\": {\n                        \"key_code\": \"left_option\",\n                        \"modifiers\": {\n                            \"optional\": [\n                                \"any\"\n                            ]\n                        }\n                    },\n                    \"to\": {\n                        \"key_code\": \"left_command\"\n                    },\n                    \"type\": \"basic\"\n                },\n                {\n                    \"conditions\": [{\n                        \"identifiers\": [{\n                            \"description\": \"Keychron\",\n                            \"product_id\": 591\n                        }],\n                        \"type\": \"device_if\"\n                    }],\n                    \"from\": {\n                        \"key_code\": \"right_command\",\n                        \"modifiers\": {\n                            \"optional\": [\n                                \"any\"\n                            ]\n                        }\n                    },\n                    \"to\": [{\n                        \"key_code\": \"right_option\"\n                    }],\n                    \"type\": \"basic\"\n                },\n                {\n                    \"conditions\": [{\n                        \"identifiers\": [{\n                            \"description\": \"Keychron\",\n                            \"product_id\": 591\n                        }],\n                        \"type\": \"device_if\"\n                    }],\n                    \"from\": {\n                        \"key_code\": \"right_option\",\n                        \"modifiers\": {\n                            \"optional\": [\n                                \"any\"\n                            ]\n                        }\n                    },\n                    \"to\": {\n                        \"key_code\": \"right_command\"\n                    },\n                    \"type\": \"basic\"\n                }\n            ]\n        }\n    ]\n}",
					"- identifiers:\n  - description: Keychron\n    product_id: 591\n  type: device_if",
					"https://www.amazon.com/Skin-Tag-Remover-Patches-Fast-Acting/product-reviews/B091JDQN6D/ref=cm_cr_dp_d_show_all_btm?ie=UTF8&reviewerType=all_reviews",
					"{ \"keys\": [\"super+alt+n\"], \"command\": \"normalize_region_ends\" },",
					"command: sublime_linter_assigned {\"linter_names\": [], \"filename\": \"<untitled 800>\"}"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/Users/Phteben/stnatale/bist_gui/Bist_columns.py",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/User/Base File.sublime-settings",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/User/Python.sublime-settings",
				"/Users/Phteben/Untitled13.py",
				"/Users/Phteben/Untitled13.ipynb",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/Helium/.python-version",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/Helium/Helium.sublime-syntax",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/User/SBSCompareScheme.hidden-color-scheme",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/PackageDev/Package/Sublime Text Color Scheme/Sublime Text Color Scheme.sublime-settings",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/User/NATSTE.sublime-color-scheme",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/Color Scheme - Default/NATSTE.sublime-color-scheme",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/Color Scheme - Default/untitled.json",
				"/Users/Phteben/stnatale/swig/pmu_2Dtrain.i",
				"/Users/Phteben/stnatale/bist_gui/bist_compare_v1.py",
				"/Users/Phteben/stnatale/ddr4bist/firmware/snps_source/include/hwt_common_api.h",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/dwc_lpddr54_cuamd_tsmc7ff18_fw_phyinit_A-2020.09_20201019 copy/firmware/A-2020.09/training/source/build/eye_export_lib_preproc.c",
				"/Users/Phteben/stnatale/swig/logs/py_firstly.log",
				"/Users/Phteben/stnatale/swig/logs/ctypes_firstly.log",
				"/Users/Phteben/stnatale/swig/logs/snps_build_using_gcc.log",
				"/Users/Phteben/stnatale/swig/logs/ryana_build_using_gcc.log",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/build.sh",
				"/Users/Phteben/stnatale/swig/elf2binhelp.txt",
				"/Users/Phteben/stnatale/swig/ccachelp.txt",
				"/Users/Phteben/stnatale/swig/log.log",
				"/Users/Phteben/stnatale/swig/ctypes.log",
				"/Users/Phteben/stnatale/swig/hwt_common_api.h",
				"/Users/Phteben/stnatale/swig/pmu_2Dtrain.c",
				"/Users/Phteben/stnatale/swig/swig_build2.sh",
				"/Users/Phteben/Documents/andrew07:29:21.md",
				"/Users/Phteben/stnatale/swig/snps_source/include/hwt_common_api.h",
				"/Users/Phteben/stnatale/swig/snps_source/hwt_common_api.h",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/link.lcf",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/arc.tcf",
				"/Users/Phteben/stnatale/swig/swig_build.sh",
				"/Users/Phteben/stnatale/ddr4bist/firmware/snps_source/pmu_2Dtrain2.c",
				"/Users/Phteben/stnatale/sftp-config.json",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/pmu_2Dtrain.c",
				"/Users/Phteben/stnatale/ddr4bist/firmware/snps_source/pmu_2Dtrain.c",
				"/Users/Phteben/stnatale/swig/ldhelp.txt",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/User/Syntaxes/swig-interface.sublime-syntax",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/User/Syntaxes/syntax_test.i",
				"/Users/Phteben/stnatale/ddr4bist/firmware/snps_source/include/pmu_util.h",
				"/Users/Phteben/stnatale/ddr4bist.sublime-project",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/-Karabiner-YAML/karabiner_yaml.sublime-syntax",
				"/Users/Phteben/stnatale/swig/eye.py",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/C++/C.sublime-syntax",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/-Karabiner-YAML/karabiner_json.sublime-syntax",
				"/Users/Phteben/stnatale/swig/build.sh",
				"/Users/Phteben/stnatale/ddr4bist/firmware/bist_source/include/hwt_common_api.h",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/RMB_logs/2d-hist_RMB.py",
				"/Users/Phteben/.zshrc",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/CSR script/Archive/CSRV_parallelTest.py",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/Default/Main.sublime-menu",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/User/Main.sublime-menu",
				"/Users/Phteben/stnatale/swig/example.c",
				"/Volumes/NATALS/cali_core3/Contents/Resources/Python/lib/python2.7/config/Makefile",
				"/Users/Phteben/PycharmProjects/pythonProject/venv/lib/python3.9/site-packages/setuptools/_distutils/command/build_ext.py",
				"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/config-3.8-darwin/config.c",
				"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/Headers/pythonrun.h",
				"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/config-3.8-darwin/python-config.py",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/CursorRuler/CursorRuler.sublime-settings",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/runtc",
				"/Users/Phteben/.config/karabiner/assets/complex_modifications/Middle Click.k-yaml",
				"/Users/Phteben/.config/karabiner/assets/complex_modifications/Middle Click.JSON-k-yaml",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/setup_file.py",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/runtc_auto.py",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/RndFields_source.sv",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/inject_apb_config.py",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/runtc_auto_v2.py",
				"/Users/Phteben/stnatale/ddr4bist/tests/test2/simv.log",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/runtc_auto.csh",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/bist_compare.py",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/terminal 2.log",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/DTO/DTO__/rmbInfo.py",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/DTO/DTO__/AMD_COLORS.py",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/DTO/DTO__/ColumnDTO_RMB.py",
				"/Users/Phteben/Library/.gitignore",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/DTO/DTO__/ColumnExplore_MR.py",
				"/Users/Phteben/.config/karabiner/formats.kb.yaml",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/setup_file.yaml",
				"/Users/Phteben/stnatale/sftp-config.yaml",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/asdfjk",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/sublack/sublack/commands.py",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/User/Anaconda.sublime-settings",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/pathlib/all/pathlib.py",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/DTO/terminal.log",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/inject_runtc.py",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/terminal.log",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/VN_vDropTest/UEFI_reset.py",
				"/Users/Phteben/stnatale/bist_gui/runtc_auto.csh",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/simv.log",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/testbench/inc/RndFields_source.sv",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/DTO/DTO__/RMB_DDR5_Mux_GUI_2.py",
				"/Users/Phteben/stnatale/ddr4bist/firmware/bist_source/pmu_bist.c",
				"/Users/Phteben/stnatale/bist_gui/AMD_COLORS.py",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/DTO/DTO__/ColumnExplore_v2.py",
				"/Users/Phteben/stnatale/ddr4bist/tests/test6/terminal.log",
				"/Users/Phteben/stnatale/bist_gui/runtc_auto.py",
				"/Users/Phteben/stnatale/ddr4bist/bash_bootenv",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/bootenv",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/signing_automation.py",
				"/Users/Phteben/stnatale/ddr4bist/tests/test1/terminal.log",
				"/Users/Phteben/stnatale/ddr4bist/tests/test7/terminal.log",
				"/Users/Phteben/stnatale/ddr4bist/tests/test8/terminal.log",
				"/Users/Phteben/stnatale/ddr4bist/tests/test9/terminal.log",
				"/Users/Phteben/Library/Application Support/Sublime Text/Packages/Case Conversion/case_conversion.py",
				"/Users/Phteben/Downloads/CLDO_drop_VN.py",
				"/Users/Phteben/stnatale/ddr4bist/tests/test7/simv.log",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/DTO/DTO__/ColumnExplore.py",
				"/Users/Phteben/stnatale/ddr4bist/firmware/bist_source/include/mnPmuSramBistBlock.h",
				"/Users/Phteben/stnatale/ddr4bist/tests/test2/RndFields.sv",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/cmd.run",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/DTO/DTO__/mrInfo.py",
				"/Users/Phteben/stnatale/ddr4bist/tests/test7/apb_config.sv",
				"/Volumes/PORTCAMP/BreadboardKeyboard/main.v",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/testbench/inc/RndFields_source_backup.sv",
				"/Users/Phteben/Downloads/OneDrive - Advanced Micro Devices Inc/CSR script/VCLDO_regTest_VN.py",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/simv",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/deleteme.txt",
				"/Users/Phteben/stnatale/ddr4bist/tests/test6/simv.log",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/common_test_inc.sv",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/testbench/inc/common_test_inc.sv",
				"/Users/Phteben/stnatale/ddr4bist/tests/test5/terminal.log",
				"/Users/Phteben/stnatale/ddr4bist/tests/test5/simv.log",
				"/Users/Phteben/stnatale/ddr4bist/tests/test4/simv.log",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/bist_compare_v1.py",
				"/Users/Phteben/stnatale/ddr4bist/ctb/A-2018.05/sim/bist_compare_v3.py",
				"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/bist_compare.py"
			],
			"find":
			{
				"height": 25.0
			},
			"find_in_files":
			{
				"height": 99.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"samples",
					"x_interval",
					"x_range",
					"samples",
					"mesh",
					"self",
					"vxyc",
					"2",
					"4",
					"2",
					"]\n",
					"vxy",
					"self",
					"recombine",
					"split_and_sort",
					"xy_split",
					"arr_list",
					"xy_2d",
					"=",
					"uniques_and_quantity",
					"vc",
					"uniques_and_counts",
					"vi",
					"a",
					"x",
					"\"x\"",
					"initial",
					"y_coarse",
					"run cell",
					"print",
					"a",
					"self",
					"l",
					"\"].",
					"\"",
					"i_maxh",
					"v_eye",
					"get_dimensions",
					"SAMPLES",
					"create_mesh",
					"coarse",
					"interp_mask",
					"eye_mask",
					"interp_array",
					"x_mesh",
					"y_mesh",
					"VREF_MAX",
					"mesh\\[2",
					"mesh\\[1",
					"mesh\\[0",
					"x_mesh",
					"y_mesh",
					"interp_mask",
					"y_mesh",
					"fine_interp",
					"y_mesh",
					"interp_array",
					"SAMPLES",
					"V_BITS",
					"eye",
					"t",
					"0",
					"x_mesh",
					"0",
					"1",
					"self.plot[\"eye\"]",
					"scan_xline",
					"scatter_plts",
					"cmask",
					"ii",
					"eye",
					"scatter_plts",
					"eye_mesh",
					"grid_args[\"c\"]",
					"grid_args[\"x\"]",
					"grid_args[\"y\"]",
					"avgfirst",
					"array",
					"interp_data",
					"grid_args[\"c\"]",
					"np.average(grid_args[\"c\"]",
					"epts_check",
					"grid_args[\"c\"]",
					"epts_check",
					"eye_pts",
					"vlines_args",
					"hlines_args",
					"c",
					"hv_pt_args",
					"rnd_args",
					"veye",
					"eye",
					"eyed",
					"*",
					"pts",
					"\"e\"",
					"grid",
					"epts",
					"xpts",
					"ypts",
					" : ",
					":",
					"self.t",
					"self.",
					"hmax_line",
					"valid",
					"rndp",
					"self.",
					"arr_eye",
					"bot",
					"top",
					"self.xpts",
					"self.ypts",
					"pt_in_eye",
					"datx",
					"daty",
					"a",
					"t",
					"bots",
					"tops",
					"qbot",
					"qtop",
					"_eye",
					"TOP",
					"filt",
					"top",
					"eye",
					"ripple"
				],
				"highlight": false,
				"in_selection": false,
				"preserve_case": false,
				"regex": true,
				"replace_history":
				[
					"mesh\\[1",
					"mesh\\[0",
					"mesh\\[2"
				],
				"reverse": true,
				"scrollbar_highlights": true,
				"show_context": true,
				"use_buffer2": true,
				"use_gitignore": true,
				"whole_word": false,
				"wrap": true
			},
			"groups":
			[
				{
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/Users/Phteben/Eye.py",
							"selected": true,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 20795,
								"regions":
								{
									"bookmarks":
									{
										"flags": 144,
										"icon": "bookmark",
										"regions":
										[
											[
												7937,
												7937
											],
											[
												11358,
												11358
											]
										],
										"scope": "bookmarks"
									}
								},
								"selection":
								[
									[
										16289,
										16289
									]
								],
								"settings":
								{
									"WordCount":
									{
										"changes": -1,
										"modified": true,
										"selection": true,
										"status": -1,
										"syntax": "python"
									},
									"apply_syntax_touched": true,
									"auto_complete_triggers":
									[
										{
											"characters": "<",
											"selector": "text.html"
										},
										{
											"characters": ";",
											"selector": "source.yaml"
										},
										{
											"characters": "\\",
											"selector": "text.tex.latex"
										},
										{
											"characters": ".",
											"selector": "source.python - string - comment - constant.numeric, meta.interpolated.format.fstring"
										}
									],
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content"
									],
									"function_name_status_row": 500,
									"incomplete_sync": null,
									"origPos":
									[
										0.0,
										2189.0
									],
									"remote_loading": false,
									"rulers":
									[
										23.9,
										24.2
									],
									"sftp_duplicate_views": 0,
									"syncScroll": false,
									"synced": false,
									"syntax": "Packages/Python/Python.sublime-syntax",
									"tab_size": 4,
									"tabs_extra_last_activated": 1628997392.76,
									"tabs_extra_last_activated_sheet_index": 0,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 2189.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"stack_multiselect": false,
							"type": "text"
						}
					]
				},
				{
					"sheets":
					[
						{
							"buffer": 1,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 380727,
								"regions":
								{
								},
								"selection":
								[
									[
										380415,
										380415
									]
								],
								"settings":
								{
									"WordCount":
									{
										"changes": 402,
										"count": 36190,
										"modified": false,
										"selection": false,
										"status": -1,
										"syntax": "plain text"
									},
									"apply_syntax_touched": true,
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content"
									],
									"default_dir": "/Users/Phteben",
									"function_name_status_row": 47337,
									"incomplete_sync": null,
									"origPos":
									[
										0.0,
										963933.0
									],
									"rulers":
									[
									],
									"syntax": "Packages/Helium/Helium.sublime-syntax",
									"tabs_extra_last_activated": 1629117716.74,
									"tabs_extra_last_activated_sheet_index": 0,
									"word_wrap": "false"
								},
								"translation.x": 0.0,
								"translation.y": 963933.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"stack_multiselect": false,
							"type": "text"
						},
						{
							"buffer": 2,
							"file": "/Users/Phteben/Library/.gitignore",
							"selected": true,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 42,
								"regions":
								{
								},
								"selection":
								[
									[
										42,
										42
									]
								],
								"settings":
								{
									"WordCount":
									{
										"changes": 25,
										"count": 4,
										"modified": false,
										"selection": false,
										"status": -1,
										"syntax": "plain text"
									},
									"apply_syntax_touched": true,
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content"
									],
									"function_name_status_row": 3,
									"incomplete_sync": null,
									"origPos":
									[
										0.0,
										0.0
									],
									"remote_loading": false,
									"rulers":
									[
										15.9,
										16.2
									],
									"syncScroll": false,
									"synced": false,
									"syntax": "Packages/Materialize/Langs/Git.tmLanguage",
									"tabs_extra_last_activated": 1629117906.84,
									"tabs_extra_last_activated_sheet_index": 1
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"stack_multiselect": false,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 25.0
			},
			"input":
			{
				"height": 43.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					],
					[
						1,
						0,
						2,
						1
					]
				],
				"cols":
				[
					0.0,
					0.5,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.SFTP":
			{
				"height": 204.0
			},
			"output.SublimeLinter":
			{
				"height": 127.0
			},
			"output.SublimeLinter Messages":
			{
				"height": 139.0
			},
			"output.SystemVerilog":
			{
				"height": 152.0
			},
			"output.exec":
			{
				"height": 173.0
			},
			"output.find_results":
			{
				"height": 152.0
			},
			"output.help":
			{
				"height": 104.0
			},
			"output.keybinding":
			{
				"height": 104.0
			},
			"output.latextools":
			{
				"height": 164.0
			},
			"output.mdpopups":
			{
				"height": 0.0
			},
			"output.package_dev":
			{
				"height": 104.0
			},
			"pinned_build_system": "Packages/Default/Syntax Tests.sublime-build",
			"position": "15 0 -2560 0 2560 1415 -2560 0 2560 1415 ",
			"project": "",
			"replace":
			{
				"height": 64.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 1,
			"settings":
			{
			},
			"show_minimap": true,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": false,
			"side_bar_width": 322.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 862,
			"workspace_name": ""
		}
	],
	"workspaces":
	{
		"recent_workspaces":
		[
			"/Users/Phteben/stnatale/ddr4bist.sublime-workspace",
			"/Users/Phteben/Library/Mobile Documents/3L68KQB4HG~com~readdle~CommonDocuments/Documents/IQP/Report/iqp-report.sublime-workspace",
			"/Users/Phteben/home/stnatale-home.sublime-workspace",
			"/Users/Phteben/swig/swig.sublime-workspace",
			"/Users/Phteben/Library/Application Support/Sublime Text/Packages/-Karabiner-YAML/Karabiner-Yaml.sublime-workspace",
			"/Users/Phteben/stnatale/home/stnatale-home.sublime-workspace",
			"/Users/Phteben/stnatale/stnatale-home.sublime-workspace",
			"/Users/Phteben/Documents/stnatale/untitled.sublime-workspace",
			"/private/var/folders/by/__zy5fm91cg2dl5371jr0vl80000gp/T/fz3temp-2/ddr4bist.sublime-workspace",
			"/Users/Phteben/Library/Application Support/Sublime Text/Packages/User/Karabiner-Yaml/Karabiner-Yaml.sublime-workspace",
			"/Volumes/PORTCAMP/Vivado Projects/BreadboardKeyboard_FPv4/BreadboardKeyboard_FPv4 src/BBMonoSynth.sublime-workspace",
			"/Users/Phteben/Library/Mobile Documents/3L68KQB4HG~com~readdle~CommonDocuments/Documents/Verilog Examples/VerilogExamples.sublime-workspace",
			"/Users/Phteben/Library/Mobile Documents/3L68KQB4HG~com~readdle~CommonDocuments/Documents/WPI/Resumes/AMD-2021 res/AMD21_resume.sublime-workspace",
			"/Users/Phteben/Library/Mobile Documents/3L68KQB4HG~com~readdle~CommonDocuments/Documents/WPI/Resumes/Nvidia res/NVIDIA-res.sublime-workspace",
			"/Users/stephennatale/Library/Mobile Documents/3L68KQB4HG~com~readdle~CommonDocuments/Documents/WPI/Resumes/AMD-2021 res/AMD21_resume.sublime-workspace",
			"/Users/stephennatale/OneDrive - Advanced Micro Devices Inc/RMB_logs/RMB_Log_Histogram.sublime-workspace",
			"/Users/stephennatale/OneDrive - Advanced Micro Devices Inc/RMB_logs/RMB_Log.sublime-workspace",
			"/C/Users/stnatale/OneDrive - Advanced Micro Devices Inc/DTO/DTO/DTO.sublime-workspace",
			"//atlvsmb1/stnatale/dwc_lpddr54_cuamd_tsmc7ff18_fw_phyinit_A-2020.09_20201019/firmware/A-2020.09/training/source/sourcefiles.sublime-workspace",
			"//atlvsmb1/stnatale/dwc_lpddr54_cuamd_tsmc7ff18_fw_phyinit_A-2020.09_20201019/firmware/A-2020.09/training/source/myfiles.sublime-workspace",
			"//atlvsmb1/stnatale/dwc_lpddr54_cuamd_tsmc7ff18_fw_phyinit_A-2020.09_20201019/ATSM_DTSM_MRW_LOOP.sublime-workspace",
			"//atlvsmb1/stnatale/dwc_lpddr54_cuamd_tsmc7ff18_fw_phyinit_A-2020.09_20201019/firmware/A-2020.09/training/source/includefiles.sublime-workspace",
			"//atlvsmb1/stnatale/dwc_lpddr54_cuamd_tsmc7ff18_fw_phyinit_A-2020.09_20201019/atsm_dtsm_2_____.sublime-workspace",
			"//atlvsmb1/stnatale/dwc_lpddr54_cuamd_tsmc7ff18_fw_phyinit_A-2020.09_20201019/atsm-dtsm-2.sublime-workspace",
			"//atlvsmb1/stnatale/dwc_lpddr54_cuamd_tsmc7ff18_fw_phyinit_A-2020.09_20201019/firmware/A-2020.09/training/source/acsm-dtsm.sublime-workspace",
			"/C/Users/stnatale/OneDrive - Advanced Micro Devices Inc/dwc_lpddr54_cuamd_tsmc7ff18_fw_phyinit_A-2020.09_20201019/firmware/A-2020.09/training/source/project_files/Quick Boot Test.sublime-workspace"
		]
	}
}
