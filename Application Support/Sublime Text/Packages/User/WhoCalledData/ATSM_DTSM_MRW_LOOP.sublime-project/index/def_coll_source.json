["for", "if", "isLowByte", "pmu_memcpy", "void", "setActiveDtsmLaneCtrl0", "set_DtsmLaneCtrl0", "disableUnusedDtsms", "doDbiPatternFromSettings", "uint8_t", "deswiz", "swiz", "saveAndResetLnSelSwizzle", "restoreLnSelSwizzle", "read_fifo", "uint16_t", "ohmsToCsrUnits", "savePptCtl", "restorePptCtl", "fixRxEnBackOff", "setupPpt", "io_read16", "undo_setupPpt_fixRxEnBackOff", "lp4X8ModeRank", "getDqs2Dq", "pmu_acsm_single_sre", "pmu_acsm_sre", "pmu_enter_SR", "pmu_exit_SR", "pmu_acsm_pcga", "enable_mtest", "pulse_mtest", "fifo_ptr_init", "assert_dram_reset", "deassert_dram_reset", "unprotect_dram_reset", "poweron_delay_lp4", "poweron_delay_lp3", "dram_reset", "checkRdDbi", "pbool", "checkWrDbi", "checkDM", "checkRECC", "checkWECC", "checkDVFSC", "TrainLane8", "checkStrobless", "checkVDLC", "read_delays_dr", "delayCSR_to_trainingCntr", "pmu_memset", "while", "pmu_memset_int16", "delayCsr_to_allFine", "int16_t", "delayCsr_2ui_to_allFine", "scaleTrainingCntr", "read_trainingCntrs", "allFinetoFine", "allFinetoCoarse", "write_delays", "write_delays_2UI", "getCsDestMap", "csnToDimm", "unsigned", "numCsOnDimm", "int", "_debugf_db_dly", "dump_dlys", "dump_TxDFE", "dump_DFIMRL", "dump_vrefDAC", "sanitize_mrStore", "getMaxRxen", "cddCeilToMemclk", "calculate_cdds", "enter_lp3", "pass_controll_dct", "write_traincntr", "write_traincntr_mask", "write_array_traincntr_mask", "getDLLLockCode", "reverse_byte", "zcal_lp54", "checkDfeMode", "RxDfeMode_t", "delayTo2UI", "initialize_eye_array", "doScan64", "start_meas", "end_meas", "print_meas", "abs", "process_eyes", "optStatus_t", "else", "switch", "acsm_set_cmda", "define", "init_ppgc_patn", "init_ppgc_state", "isMPRPattern", "setup_DqCal_patterns", "train_mxRdLat", "ppt2_dq_training", "weighted_mean", "area_calculation_for_compounded_eye", "enable_ch", "eye_c_export", "twoD_Eye_t_lp54", "debugf", "acsm_set_FW", "get_acsmRefPtr", "acsm_clear_geardown", "acsm_set_geardown", "acsm_set_geardown_sync", "acsm_get_iptr", "acsm_set_iptr", "acsm_set_sptr", "acsm_set_lptr", "acsm_set_eptr", "acsm_set_rcnt", "acsm_set_stop_ptr", "acsm_set_start_ptr", "acsm_set_start", "acsm_clr_done", "acsm_clr_alocptr", "acsm_set_pstate", "acsm_end_seq", "eye_optimal_delay_for_vref", "largest_empty_circle", "eye_to_edge", "hill_climb_2d", "uint32_t", "cost_of_point", "distance_from_edge", "create_search_seeds", "find_eye_left_right_edges", "adjust_delay_for_eye_collapse_all_lanes", "adjust_delay_for_eye_collapse", "adjust_delay_for_eye_collapse_2eyes", "pmu_train", "main", "cost_4uint_GE", "cost_4uint_COPY", "cost_4uint_SORT", "compound_2_eyes", "pmu_init", "writeRxenAcsm", "inc_rxen_halfui", "rxenb_train", "rxStrobelessACSM", "rxStrobless_train", "train_allcs_1d", "postStageMessage", "setBootClkDivider", "trainingStageRxEn", "trainingStageWrLvl", "trainingStageRdDQS", "trainingStageDramDCA", "trainingStagePHYRxDCA", "trainingStageTxDFE", "traiingStageWrDq", "trainingStagePHYTxDCA", "trainingStagePPT2Tx", "trainingStagePPT2Rx", "trainingStageMaxRdLat", "update_global_PUBREV", "bootstrap_fake", "sizeof", "finish_fake", "us_poll_mailbox_req", "us_poll_mailbox_ack", "sendMailboxBuffer", "enableMailboxBuffer", "vdebugf", "_debugf", "_get_simtime", "long", "Assert", "dbyteToChannel", "lpSetPhyConf", "lp4X8ModePhy", "lp4SetDbi", "lp4RestoreACSM_RxEn_RxVal_RxcsPulse", "updateRL", "lp_channel_loop_preamble", "acsm_init", "acsm_run", "acsm_run_res", "acsm_run_ss", "acsm_run_resident", "acsm_poll_done", "setBurstLength", "assert_CKE", "deassert_CKE", "init_dtsm", "clear_dtsm_errcnt", "pulse_update_phase", "forceUpdate", "nsToMemclks", "pmu_get_cmd_delay_ps", "pmu_get_dfi_delay_ps", "pmu_delay_ps", "pmu_delay", "_lr", "write_csrs", "init_ppgc_prbs", "MR2_to_CWL", "getTotCL", "getTotCWL", "getAltTotCWL", "getTotCL_LP3", "getTotCWL_LP3", "safe_maxrdlay", "load_mrStore", "switch_ck_mode", "write_MRS", "enterSlowMo", "exitSlowMo", "slowmo_preamble", "slowmo_postamble", "write_MRS_slowmo", "enable_channel_lp", "save_mr", "restore_mr", "or_mr", "and_mr", "set_mr", "broadcast_all_MRS_lp", "write_all_MRS_lp", "write_all_MRS_lp_one_channel", "pointer_init_enter", "pointer_init_exit", "lock_rxReplica", "lock_pll_dll", "getA0LockCode", "saveLcdlSeed", "getPhyConfig", "load_phy_defaults", "rx_fifo_ptr_init", "calculate_DFIMRL", "getRankPaddedMRL", "init_DFIMRL", "pmu_ptr_to_dccm_addr", "getBankGroup", "bankGroupOrg_t", "getBLn_max", "getTWTR", "calc_tWTR", "quickboot_lock_rxReplica", "processCall", "stripFile"]